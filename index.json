[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "lib/index.js",
    "content": "var d3 = window && window.d3 || require(\"d3-selection\");\nvar selection = d3.selection;\nimport {default as A} from \"./selection/A\";\n  selection.prototype.A = A;\nimport {default as Abbr} from \"./selection/Abbr\";\n  selection.prototype.Abbr = Abbr;\nimport {default as Accept} from \"./selection/Accept\";\n  selection.prototype.Accept = Accept;\nimport {default as Accesskey} from \"./selection/Accesskey\";\n  selection.prototype.Accesskey = Accesskey;\nimport {default as Action} from \"./selection/Action\";\n  selection.prototype.Action = Action;\nimport {default as Address} from \"./selection/Address\";\n  selection.prototype.Address = Address;\nimport {default as AlignContent} from \"./selection/AlignContent\";\n  selection.prototype.AlignContent = AlignContent;\nimport {default as AlignItems} from \"./selection/AlignItems\";\n  selection.prototype.AlignItems = AlignItems;\nimport {default as AlignSelf} from \"./selection/AlignSelf\";\n  selection.prototype.AlignSelf = AlignSelf;\nimport {default as Alt} from \"./selection/Alt\";\n  selection.prototype.Alt = Alt;\nimport {default as Area} from \"./selection/Area\";\n  selection.prototype.Area = Area;\nimport {default as Article} from \"./selection/Article\";\n  selection.prototype.Article = Article;\nimport {default as Aside} from \"./selection/Aside\";\n  selection.prototype.Aside = Aside;\nimport {default as Audio} from \"./selection/Audio\";\n  selection.prototype.Audio = Audio;\nimport {default as Autocomplete} from \"./selection/Autocomplete\";\n  selection.prototype.Autocomplete = Autocomplete;\nimport {default as Autofocus} from \"./selection/Autofocus\";\n  selection.prototype.Autofocus = Autofocus;\nimport {default as B} from \"./selection/B\";\n  selection.prototype.B = B;\nimport {default as Background} from \"./selection/Background\";\n  selection.prototype.Background = Background;\nimport {default as BackgroundAttachment} from \"./selection/BackgroundAttachment\";\n  selection.prototype.BackgroundAttachment = BackgroundAttachment;\nimport {default as BackgroundBlendMode} from \"./selection/BackgroundBlendMode\";\n  selection.prototype.BackgroundBlendMode = BackgroundBlendMode;\nimport {default as BackgroundClip} from \"./selection/BackgroundClip\";\n  selection.prototype.BackgroundClip = BackgroundClip;\nimport {default as BackgroundColor} from \"./selection/BackgroundColor\";\n  selection.prototype.BackgroundColor = BackgroundColor;\nimport {default as BackgroundImage} from \"./selection/BackgroundImage\";\n  selection.prototype.BackgroundImage = BackgroundImage;\nimport {default as BackgroundOrigin} from \"./selection/BackgroundOrigin\";\n  selection.prototype.BackgroundOrigin = BackgroundOrigin;\nimport {default as BackgroundPosition} from \"./selection/BackgroundPosition\";\n  selection.prototype.BackgroundPosition = BackgroundPosition;\nimport {default as BackgroundRepeat} from \"./selection/BackgroundRepeat\";\n  selection.prototype.BackgroundRepeat = BackgroundRepeat;\nimport {default as BackgroundSize} from \"./selection/BackgroundSize\";\n  selection.prototype.BackgroundSize = BackgroundSize;\nimport {default as Base} from \"./selection/Base\";\n  selection.prototype.Base = Base;\nimport {default as Bdi} from \"./selection/Bdi\";\n  selection.prototype.Bdi = Bdi;\nimport {default as Bdo} from \"./selection/Bdo\";\n  selection.prototype.Bdo = Bdo;\nimport {default as Blockquote} from \"./selection/Blockquote\";\n  selection.prototype.Blockquote = Blockquote;\nimport {default as Border} from \"./selection/Border\";\n  selection.prototype.Border = Border;\nimport {default as BorderBottom} from \"./selection/BorderBottom\";\n  selection.prototype.BorderBottom = BorderBottom;\nimport {default as BorderBottomColor} from \"./selection/BorderBottomColor\";\n  selection.prototype.BorderBottomColor = BorderBottomColor;\nimport {default as BorderBottomLeftRadius} from \"./selection/BorderBottomLeftRadius\";\n  selection.prototype.BorderBottomLeftRadius = BorderBottomLeftRadius;\nimport {default as BorderBottomRightRadius} from \"./selection/BorderBottomRightRadius\";\n  selection.prototype.BorderBottomRightRadius = BorderBottomRightRadius;\nimport {default as BorderBottomStyle} from \"./selection/BorderBottomStyle\";\n  selection.prototype.BorderBottomStyle = BorderBottomStyle;\nimport {default as BorderBottomWidth} from \"./selection/BorderBottomWidth\";\n  selection.prototype.BorderBottomWidth = BorderBottomWidth;\nimport {default as BorderCollapse} from \"./selection/BorderCollapse\";\n  selection.prototype.BorderCollapse = BorderCollapse;\nimport {default as BorderColor} from \"./selection/BorderColor\";\n  selection.prototype.BorderColor = BorderColor;\nimport {default as BorderImage} from \"./selection/BorderImage\";\n  selection.prototype.BorderImage = BorderImage;\nimport {default as BorderImageOutset} from \"./selection/BorderImageOutset\";\n  selection.prototype.BorderImageOutset = BorderImageOutset;\nimport {default as BorderImageRepeat} from \"./selection/BorderImageRepeat\";\n  selection.prototype.BorderImageRepeat = BorderImageRepeat;\nimport {default as BorderImageSlice} from \"./selection/BorderImageSlice\";\n  selection.prototype.BorderImageSlice = BorderImageSlice;\nimport {default as BorderImageSource} from \"./selection/BorderImageSource\";\n  selection.prototype.BorderImageSource = BorderImageSource;\nimport {default as BorderImageWidth} from \"./selection/BorderImageWidth\";\n  selection.prototype.BorderImageWidth = BorderImageWidth;\nimport {default as BorderLeft} from \"./selection/BorderLeft\";\n  selection.prototype.BorderLeft = BorderLeft;\nimport {default as BorderLeftColor} from \"./selection/BorderLeftColor\";\n  selection.prototype.BorderLeftColor = BorderLeftColor;\nimport {default as BorderLeftStyle} from \"./selection/BorderLeftStyle\";\n  selection.prototype.BorderLeftStyle = BorderLeftStyle;\nimport {default as BorderLeftWidth} from \"./selection/BorderLeftWidth\";\n  selection.prototype.BorderLeftWidth = BorderLeftWidth;\nimport {default as BorderRadius} from \"./selection/BorderRadius\";\n  selection.prototype.BorderRadius = BorderRadius;\nimport {default as BorderRight} from \"./selection/BorderRight\";\n  selection.prototype.BorderRight = BorderRight;\nimport {default as BorderRightColor} from \"./selection/BorderRightColor\";\n  selection.prototype.BorderRightColor = BorderRightColor;\nimport {default as BorderRightStyle} from \"./selection/BorderRightStyle\";\n  selection.prototype.BorderRightStyle = BorderRightStyle;\nimport {default as BorderRightWidth} from \"./selection/BorderRightWidth\";\n  selection.prototype.BorderRightWidth = BorderRightWidth;\nimport {default as BorderSpacing} from \"./selection/BorderSpacing\";\n  selection.prototype.BorderSpacing = BorderSpacing;\nimport {default as BorderStyle} from \"./selection/BorderStyle\";\n  selection.prototype.BorderStyle = BorderStyle;\nimport {default as BorderTop} from \"./selection/BorderTop\";\n  selection.prototype.BorderTop = BorderTop;\nimport {default as BorderTopColor} from \"./selection/BorderTopColor\";\n  selection.prototype.BorderTopColor = BorderTopColor;\nimport {default as BorderTopLeftRadius} from \"./selection/BorderTopLeftRadius\";\n  selection.prototype.BorderTopLeftRadius = BorderTopLeftRadius;\nimport {default as BorderTopRightRadius} from \"./selection/BorderTopRightRadius\";\n  selection.prototype.BorderTopRightRadius = BorderTopRightRadius;\nimport {default as BorderTopStyle} from \"./selection/BorderTopStyle\";\n  selection.prototype.BorderTopStyle = BorderTopStyle;\nimport {default as BorderTopWidth} from \"./selection/BorderTopWidth\";\n  selection.prototype.BorderTopWidth = BorderTopWidth;\nimport {default as BorderWidth} from \"./selection/BorderWidth\";\n  selection.prototype.BorderWidth = BorderWidth;\nimport {default as Bottom} from \"./selection/Bottom\";\n  selection.prototype.Bottom = Bottom;\nimport {default as BoxDecorationBreak} from \"./selection/BoxDecorationBreak\";\n  selection.prototype.BoxDecorationBreak = BoxDecorationBreak;\nimport {default as BoxShadow} from \"./selection/BoxShadow\";\n  selection.prototype.BoxShadow = BoxShadow;\nimport {default as BoxSizing} from \"./selection/BoxSizing\";\n  selection.prototype.BoxSizing = BoxSizing;\nimport {default as Br} from \"./selection/Br\";\n  selection.prototype.Br = Br;\nimport {default as Button} from \"./selection/Button\";\n  selection.prototype.Button = Button;\nimport {default as Canvas} from \"./selection/Canvas\";\n  selection.prototype.Canvas = Canvas;\nimport {default as Caption} from \"./selection/Caption\";\n  selection.prototype.Caption = Caption;\nimport {default as CaptionSide} from \"./selection/CaptionSide\";\n  selection.prototype.CaptionSide = CaptionSide;\nimport {default as Checkbox} from \"./selection/Checkbox\";\n  selection.prototype.Checkbox = Checkbox;\nimport {default as Checked} from \"./selection/Checked\";\n  selection.prototype.Checked = Checked;\nimport {default as Children} from \"./selection/Children\";\n  selection.prototype.Children = Children;\nimport {default as Cite} from \"./selection/Cite\";\n  selection.prototype.Cite = Cite;\nimport {default as Class} from \"./selection/Class\";\n  selection.prototype.Class = Class;\nimport {default as Clear} from \"./selection/Clear\";\n  selection.prototype.Clear = Clear;\nimport {default as Clip} from \"./selection/Clip\";\n  selection.prototype.Clip = Clip;\nimport {default as Code} from \"./selection/Code\";\n  selection.prototype.Code = Code;\nimport {default as Col} from \"./selection/Col\";\n  selection.prototype.Col = Col;\nimport {default as Colgroup} from \"./selection/Colgroup\";\n  selection.prototype.Colgroup = Colgroup;\nimport {default as Color} from \"./selection/Color\";\n  selection.prototype.Color = Color;\nimport {default as Cols} from \"./selection/Cols\";\n  selection.prototype.Cols = Cols;\nimport {default as Colspan} from \"./selection/Colspan\";\n  selection.prototype.Colspan = Colspan;\nimport {default as Content} from \"./selection/Content\";\n  selection.prototype.Content = Content;\nimport {default as ContentEditable} from \"./selection/ContentEditable\";\n  selection.prototype.ContentEditable = ContentEditable;\nimport {default as Cursor} from \"./selection/Cursor\";\n  selection.prototype.Cursor = Cursor;\nimport {default as Data} from \"./selection/Data\";\n  selection.prototype.Data = Data;\nimport {default as Datalist} from \"./selection/Datalist\";\n  selection.prototype.Datalist = Datalist;\nimport {default as Date} from \"./selection/Date\";\n  selection.prototype.Date = Date;\nimport {default as DatetimeLocal} from \"./selection/DatetimeLocal\";\n  selection.prototype.DatetimeLocal = DatetimeLocal;\nimport {default as Dd} from \"./selection/Dd\";\n  selection.prototype.Dd = Dd;\nimport {default as Del} from \"./selection/Del\";\n  selection.prototype.Del = Del;\nimport {default as Details} from \"./selection/Details\";\n  selection.prototype.Details = Details;\nimport {default as Dfn} from \"./selection/Dfn\";\n  selection.prototype.Dfn = Dfn;\nimport {default as Disabled} from \"./selection/Disabled\";\n  selection.prototype.Disabled = Disabled;\nimport {default as Display} from \"./selection/Display\";\n  selection.prototype.Display = Display;\nimport {default as Div} from \"./selection/Div\";\n  selection.prototype.Div = Div;\nimport {default as Dl} from \"./selection/Dl\";\n  selection.prototype.Dl = Dl;\nimport {default as Download} from \"./selection/Download\";\n  selection.prototype.Download = Download;\nimport {default as Draggable} from \"./selection/Draggable\";\n  selection.prototype.Draggable = Draggable;\nimport {default as Dropzone} from \"./selection/Dropzone\";\n  selection.prototype.Dropzone = Dropzone;\nimport {default as Dt} from \"./selection/Dt\";\n  selection.prototype.Dt = Dt;\nimport {default as Element} from \"./selection/Element\";\n  selection.prototype.Element = Element;\nimport {default as Em} from \"./selection/Em\";\n  selection.prototype.Em = Em;\nimport {default as Email} from \"./selection/Email\";\n  selection.prototype.Email = Email;\nimport {default as Embed} from \"./selection/Embed\";\n  selection.prototype.Embed = Embed;\nimport {default as EmptyCells} from \"./selection/EmptyCells\";\n  selection.prototype.EmptyCells = EmptyCells;\nimport {default as Enctype} from \"./selection/Enctype\";\n  selection.prototype.Enctype = Enctype;\nimport {default as Fieldset} from \"./selection/Fieldset\";\n  selection.prototype.Fieldset = Fieldset;\nimport {default as Figcaption} from \"./selection/Figcaption\";\n  selection.prototype.Figcaption = Figcaption;\nimport {default as Figure} from \"./selection/Figure\";\n  selection.prototype.Figure = Figure;\nimport {default as File} from \"./selection/File\";\n  selection.prototype.File = File;\nimport {default as Flex} from \"./selection/Flex\";\n  selection.prototype.Flex = Flex;\nimport {default as FlexBasis} from \"./selection/FlexBasis\";\n  selection.prototype.FlexBasis = FlexBasis;\nimport {default as FlexDirection} from \"./selection/FlexDirection\";\n  selection.prototype.FlexDirection = FlexDirection;\nimport {default as FlexFlow} from \"./selection/FlexFlow\";\n  selection.prototype.FlexFlow = FlexFlow;\nimport {default as FlexGrow} from \"./selection/FlexGrow\";\n  selection.prototype.FlexGrow = FlexGrow;\nimport {default as FlexShrink} from \"./selection/FlexShrink\";\n  selection.prototype.FlexShrink = FlexShrink;\nimport {default as FlexWrap} from \"./selection/FlexWrap\";\n  selection.prototype.FlexWrap = FlexWrap;\nimport {default as Float} from \"./selection/Float\";\n  selection.prototype.Float = Float;\nimport {default as Font} from \"./selection/Font\";\n  selection.prototype.Font = Font;\nimport {default as FontFamily} from \"./selection/FontFamily\";\n  selection.prototype.FontFamily = FontFamily;\nimport {default as FontFeatureSettings} from \"./selection/FontFeatureSettings\";\n  selection.prototype.FontFeatureSettings = FontFeatureSettings;\nimport {default as FontKerning} from \"./selection/FontKerning\";\n  selection.prototype.FontKerning = FontKerning;\nimport {default as FontLanguageOverride} from \"./selection/FontLanguageOverride\";\n  selection.prototype.FontLanguageOverride = FontLanguageOverride;\nimport {default as FontSize} from \"./selection/FontSize\";\n  selection.prototype.FontSize = FontSize;\nimport {default as FontSizeAdjust} from \"./selection/FontSizeAdjust\";\n  selection.prototype.FontSizeAdjust = FontSizeAdjust;\nimport {default as FontStretch} from \"./selection/FontStretch\";\n  selection.prototype.FontStretch = FontStretch;\nimport {default as FontStyle} from \"./selection/FontStyle\";\n  selection.prototype.FontStyle = FontStyle;\nimport {default as FontSynthesis} from \"./selection/FontSynthesis\";\n  selection.prototype.FontSynthesis = FontSynthesis;\nimport {default as FontVariant} from \"./selection/FontVariant\";\n  selection.prototype.FontVariant = FontVariant;\nimport {default as FontVariantAlternates} from \"./selection/FontVariantAlternates\";\n  selection.prototype.FontVariantAlternates = FontVariantAlternates;\nimport {default as FontVariantCaps} from \"./selection/FontVariantCaps\";\n  selection.prototype.FontVariantCaps = FontVariantCaps;\nimport {default as FontVariantEastAsian} from \"./selection/FontVariantEastAsian\";\n  selection.prototype.FontVariantEastAsian = FontVariantEastAsian;\nimport {default as FontVariantLigatures} from \"./selection/FontVariantLigatures\";\n  selection.prototype.FontVariantLigatures = FontVariantLigatures;\nimport {default as FontVariantNumeric} from \"./selection/FontVariantNumeric\";\n  selection.prototype.FontVariantNumeric = FontVariantNumeric;\nimport {default as FontVariantPosition} from \"./selection/FontVariantPosition\";\n  selection.prototype.FontVariantPosition = FontVariantPosition;\nimport {default as FontWeight} from \"./selection/FontWeight\";\n  selection.prototype.FontWeight = FontWeight;\nimport {default as Footer} from \"./selection/Footer\";\n  selection.prototype.Footer = Footer;\nimport {default as For} from \"./selection/For\";\n  selection.prototype.For = For;\nimport {default as Form} from \"./selection/Form\";\n  selection.prototype.Form = Form;\nimport {default as Formaction} from \"./selection/Formaction\";\n  selection.prototype.Formaction = Formaction;\nimport {default as H1} from \"./selection/H1\";\n  selection.prototype.H1 = H1;\nimport {default as H2} from \"./selection/H2\";\n  selection.prototype.H2 = H2;\nimport {default as H3} from \"./selection/H3\";\n  selection.prototype.H3 = H3;\nimport {default as H4} from \"./selection/H4\";\n  selection.prototype.H4 = H4;\nimport {default as H5} from \"./selection/H5\";\n  selection.prototype.H5 = H5;\nimport {default as H6} from \"./selection/H6\";\n  selection.prototype.H6 = H6;\nimport {default as HangingPunctuation} from \"./selection/HangingPunctuation\";\n  selection.prototype.HangingPunctuation = HangingPunctuation;\nimport {default as HashStateRouter} from \"./selection/HashStateRouter\";\n  selection.prototype.HashStateRouter = HashStateRouter;\nimport {default as Header} from \"./selection/Header\";\n  selection.prototype.Header = Header;\nimport {default as Height} from \"./selection/Height\";\n  selection.prototype.Height = Height;\nimport {default as Hidden} from \"./selection/Hidden\";\n  selection.prototype.Hidden = Hidden;\nimport {default as Hr} from \"./selection/Hr\";\n  selection.prototype.Hr = Hr;\nimport {default as Href} from \"./selection/Href\";\n  selection.prototype.Href = Href;\nimport {default as Hyphens} from \"./selection/Hyphens\";\n  selection.prototype.Hyphens = Hyphens;\nimport {default as I} from \"./selection/I\";\n  selection.prototype.I = I;\nimport {default as Id} from \"./selection/Id\";\n  selection.prototype.Id = Id;\nimport {default as Iframe} from \"./selection/Iframe\";\n  selection.prototype.Iframe = Iframe;\nimport {default as Image} from \"./selection/Image\";\n  selection.prototype.Image = Image;\nimport {default as ImeMode} from \"./selection/ImeMode\";\n  selection.prototype.ImeMode = ImeMode;\nimport {default as Img} from \"./selection/Img\";\n  selection.prototype.Img = Img;\nimport {default as Input} from \"./selection/Input\";\n  selection.prototype.Input = Input;\nimport {default as InputCheckbox} from \"./selection/InputCheckbox\";\n  selection.prototype.InputCheckbox = InputCheckbox;\nimport {default as InputColor} from \"./selection/InputColor\";\n  selection.prototype.InputColor = InputColor;\nimport {default as InputDate} from \"./selection/InputDate\";\n  selection.prototype.InputDate = InputDate;\nimport {default as InputDatetimeLocal} from \"./selection/InputDatetimeLocal\";\n  selection.prototype.InputDatetimeLocal = InputDatetimeLocal;\nimport {default as InputEmail} from \"./selection/InputEmail\";\n  selection.prototype.InputEmail = InputEmail;\nimport {default as InputFile} from \"./selection/InputFile\";\n  selection.prototype.InputFile = InputFile;\nimport {default as InputHidden} from \"./selection/InputHidden\";\n  selection.prototype.InputHidden = InputHidden;\nimport {default as InputImage} from \"./selection/InputImage\";\n  selection.prototype.InputImage = InputImage;\nimport {default as InputMonth} from \"./selection/InputMonth\";\n  selection.prototype.InputMonth = InputMonth;\nimport {default as InputNumber} from \"./selection/InputNumber\";\n  selection.prototype.InputNumber = InputNumber;\nimport {default as InputPassword} from \"./selection/InputPassword\";\n  selection.prototype.InputPassword = InputPassword;\nimport {default as InputRadio} from \"./selection/InputRadio\";\n  selection.prototype.InputRadio = InputRadio;\nimport {default as InputRange} from \"./selection/InputRange\";\n  selection.prototype.InputRange = InputRange;\nimport {default as InputReset} from \"./selection/InputReset\";\n  selection.prototype.InputReset = InputReset;\nimport {default as InputSearch} from \"./selection/InputSearch\";\n  selection.prototype.InputSearch = InputSearch;\nimport {default as InputSubmit} from \"./selection/InputSubmit\";\n  selection.prototype.InputSubmit = InputSubmit;\nimport {default as InputTel} from \"./selection/InputTel\";\n  selection.prototype.InputTel = InputTel;\nimport {default as InputText} from \"./selection/InputText\";\n  selection.prototype.InputText = InputText;\nimport {default as InputTime} from \"./selection/InputTime\";\n  selection.prototype.InputTime = InputTime;\nimport {default as InputUrl} from \"./selection/InputUrl\";\n  selection.prototype.InputUrl = InputUrl;\nimport {default as InputWeek} from \"./selection/InputWeek\";\n  selection.prototype.InputWeek = InputWeek;\nimport {default as Ins} from \"./selection/Ins\";\n  selection.prototype.Ins = Ins;\nimport {default as JustifyContent} from \"./selection/JustifyContent\";\n  selection.prototype.JustifyContent = JustifyContent;\nimport {default as Kbd} from \"./selection/Kbd\";\n  selection.prototype.Kbd = Kbd;\nimport {default as Label} from \"./selection/Label\";\n  selection.prototype.Label = Label;\nimport {default as Left} from \"./selection/Left\";\n  selection.prototype.Left = Left;\nimport {default as Legend} from \"./selection/Legend\";\n  selection.prototype.Legend = Legend;\nimport {default as LetterSpacing} from \"./selection/LetterSpacing\";\n  selection.prototype.LetterSpacing = LetterSpacing;\nimport {default as Li} from \"./selection/Li\";\n  selection.prototype.Li = Li;\nimport {default as LineBreak} from \"./selection/LineBreak\";\n  selection.prototype.LineBreak = LineBreak;\nimport {default as LineHeight} from \"./selection/LineHeight\";\n  selection.prototype.LineHeight = LineHeight;\nimport {default as Link} from \"./selection/Link\";\n  selection.prototype.Link = Link;\nimport {default as Main} from \"./selection/Main\";\n  selection.prototype.Main = Main;\nimport {default as Map} from \"./selection/Map\";\n  selection.prototype.Map = Map;\nimport {default as Margin} from \"./selection/Margin\";\n  selection.prototype.Margin = Margin;\nimport {default as MarginBottom} from \"./selection/MarginBottom\";\n  selection.prototype.MarginBottom = MarginBottom;\nimport {default as MarginLeft} from \"./selection/MarginLeft\";\n  selection.prototype.MarginLeft = MarginLeft;\nimport {default as MarginRight} from \"./selection/MarginRight\";\n  selection.prototype.MarginRight = MarginRight;\nimport {default as MarginTop} from \"./selection/MarginTop\";\n  selection.prototype.MarginTop = MarginTop;\nimport {default as Mark} from \"./selection/Mark\";\n  selection.prototype.Mark = Mark;\nimport {default as MaxHeight} from \"./selection/MaxHeight\";\n  selection.prototype.MaxHeight = MaxHeight;\nimport {default as MaxWidth} from \"./selection/MaxWidth\";\n  selection.prototype.MaxWidth = MaxWidth;\nimport {default as Media} from \"./selection/Media\";\n  selection.prototype.Media = Media;\nimport {default as Meta} from \"./selection/Meta\";\n  selection.prototype.Meta = Meta;\nimport {default as Meter} from \"./selection/Meter\";\n  selection.prototype.Meter = Meter;\nimport {default as Method} from \"./selection/Method\";\n  selection.prototype.Method = Method;\nimport {default as MinHeight} from \"./selection/MinHeight\";\n  selection.prototype.MinHeight = MinHeight;\nimport {default as MinWidth} from \"./selection/MinWidth\";\n  selection.prototype.MinWidth = MinWidth;\nimport {default as Month} from \"./selection/Month\";\n  selection.prototype.Month = Month;\nimport {default as Name} from \"./selection/Name\";\n  selection.prototype.Name = Name;\nimport {default as Nav} from \"./selection/Nav\";\n  selection.prototype.Nav = Nav;\nimport {default as NavDown} from \"./selection/NavDown\";\n  selection.prototype.NavDown = NavDown;\nimport {default as NavIndex} from \"./selection/NavIndex\";\n  selection.prototype.NavIndex = NavIndex;\nimport {default as NavLeft} from \"./selection/NavLeft\";\n  selection.prototype.NavLeft = NavLeft;\nimport {default as NavRight} from \"./selection/NavRight\";\n  selection.prototype.NavRight = NavRight;\nimport {default as NavUp} from \"./selection/NavUp\";\n  selection.prototype.NavUp = NavUp;\nimport {default as Noframes} from \"./selection/Noframes\";\n  selection.prototype.Noframes = Noframes;\nimport {default as Noscript} from \"./selection/Noscript\";\n  selection.prototype.Noscript = Noscript;\nimport {default as Number} from \"./selection/Number\";\n  selection.prototype.Number = Number;\nimport {default as Object} from \"./selection/Object\";\n  selection.prototype.Object = Object;\nimport {default as Ol} from \"./selection/Ol\";\n  selection.prototype.Ol = Ol;\nimport {default as OnAbort} from \"./selection/OnAbort\";\n  selection.prototype.OnAbort = OnAbort;\nimport {default as OnAfterprint} from \"./selection/OnAfterprint\";\n  selection.prototype.OnAfterprint = OnAfterprint;\nimport {default as OnBeforeprint} from \"./selection/OnBeforeprint\";\n  selection.prototype.OnBeforeprint = OnBeforeprint;\nimport {default as OnBeforeunload} from \"./selection/OnBeforeunload\";\n  selection.prototype.OnBeforeunload = OnBeforeunload;\nimport {default as OnBlur} from \"./selection/OnBlur\";\n  selection.prototype.OnBlur = OnBlur;\nimport {default as OnCanplay} from \"./selection/OnCanplay\";\n  selection.prototype.OnCanplay = OnCanplay;\nimport {default as OnCanplaythrough} from \"./selection/OnCanplaythrough\";\n  selection.prototype.OnCanplaythrough = OnCanplaythrough;\nimport {default as OnChange} from \"./selection/OnChange\";\n  selection.prototype.OnChange = OnChange;\nimport {default as OnClick} from \"./selection/OnClick\";\n  selection.prototype.OnClick = OnClick;\nimport {default as OnContextmenu} from \"./selection/OnContextmenu\";\n  selection.prototype.OnContextmenu = OnContextmenu;\nimport {default as OnCopy} from \"./selection/OnCopy\";\n  selection.prototype.OnCopy = OnCopy;\nimport {default as OnCuechange} from \"./selection/OnCuechange\";\n  selection.prototype.OnCuechange = OnCuechange;\nimport {default as OnCut} from \"./selection/OnCut\";\n  selection.prototype.OnCut = OnCut;\nimport {default as OnDblclick} from \"./selection/OnDblclick\";\n  selection.prototype.OnDblclick = OnDblclick;\nimport {default as OnDrag} from \"./selection/OnDrag\";\n  selection.prototype.OnDrag = OnDrag;\nimport {default as OnDragend} from \"./selection/OnDragend\";\n  selection.prototype.OnDragend = OnDragend;\nimport {default as OnDragenter} from \"./selection/OnDragenter\";\n  selection.prototype.OnDragenter = OnDragenter;\nimport {default as OnDragleave} from \"./selection/OnDragleave\";\n  selection.prototype.OnDragleave = OnDragleave;\nimport {default as OnDragover} from \"./selection/OnDragover\";\n  selection.prototype.OnDragover = OnDragover;\nimport {default as OnDragstart} from \"./selection/OnDragstart\";\n  selection.prototype.OnDragstart = OnDragstart;\nimport {default as OnDrop} from \"./selection/OnDrop\";\n  selection.prototype.OnDrop = OnDrop;\nimport {default as OnDurationchange} from \"./selection/OnDurationchange\";\n  selection.prototype.OnDurationchange = OnDurationchange;\nimport {default as OnEmptied} from \"./selection/OnEmptied\";\n  selection.prototype.OnEmptied = OnEmptied;\nimport {default as OnEnded} from \"./selection/OnEnded\";\n  selection.prototype.OnEnded = OnEnded;\nimport {default as OnError} from \"./selection/OnError\";\n  selection.prototype.OnError = OnError;\nimport {default as OnFocus} from \"./selection/OnFocus\";\n  selection.prototype.OnFocus = OnFocus;\nimport {default as OnHashchange} from \"./selection/OnHashchange\";\n  selection.prototype.OnHashchange = OnHashchange;\nimport {default as OnInput} from \"./selection/OnInput\";\n  selection.prototype.OnInput = OnInput;\nimport {default as OnInvalid} from \"./selection/OnInvalid\";\n  selection.prototype.OnInvalid = OnInvalid;\nimport {default as OnKeydown} from \"./selection/OnKeydown\";\n  selection.prototype.OnKeydown = OnKeydown;\nimport {default as OnKeypress} from \"./selection/OnKeypress\";\n  selection.prototype.OnKeypress = OnKeypress;\nimport {default as OnKeyup} from \"./selection/OnKeyup\";\n  selection.prototype.OnKeyup = OnKeyup;\nimport {default as OnLoad} from \"./selection/OnLoad\";\n  selection.prototype.OnLoad = OnLoad;\nimport {default as OnLoadeddata} from \"./selection/OnLoadeddata\";\n  selection.prototype.OnLoadeddata = OnLoadeddata;\nimport {default as OnLoadedmetadata} from \"./selection/OnLoadedmetadata\";\n  selection.prototype.OnLoadedmetadata = OnLoadedmetadata;\nimport {default as OnLoadstart} from \"./selection/OnLoadstart\";\n  selection.prototype.OnLoadstart = OnLoadstart;\nimport {default as OnMessage} from \"./selection/OnMessage\";\n  selection.prototype.OnMessage = OnMessage;\nimport {default as OnMousedown} from \"./selection/OnMousedown\";\n  selection.prototype.OnMousedown = OnMousedown;\nimport {default as OnMousemove} from \"./selection/OnMousemove\";\n  selection.prototype.OnMousemove = OnMousemove;\nimport {default as OnMouseout} from \"./selection/OnMouseout\";\n  selection.prototype.OnMouseout = OnMouseout;\nimport {default as OnMouseover} from \"./selection/OnMouseover\";\n  selection.prototype.OnMouseover = OnMouseover;\nimport {default as OnMouseup} from \"./selection/OnMouseup\";\n  selection.prototype.OnMouseup = OnMouseup;\nimport {default as OnMousewheel} from \"./selection/OnMousewheel\";\n  selection.prototype.OnMousewheel = OnMousewheel;\nimport {default as OnOffline} from \"./selection/OnOffline\";\n  selection.prototype.OnOffline = OnOffline;\nimport {default as OnOnline} from \"./selection/OnOnline\";\n  selection.prototype.OnOnline = OnOnline;\nimport {default as OnPagehide} from \"./selection/OnPagehide\";\n  selection.prototype.OnPagehide = OnPagehide;\nimport {default as OnPageshow} from \"./selection/OnPageshow\";\n  selection.prototype.OnPageshow = OnPageshow;\nimport {default as OnPaste} from \"./selection/OnPaste\";\n  selection.prototype.OnPaste = OnPaste;\nimport {default as OnPause} from \"./selection/OnPause\";\n  selection.prototype.OnPause = OnPause;\nimport {default as OnPlay} from \"./selection/OnPlay\";\n  selection.prototype.OnPlay = OnPlay;\nimport {default as OnPlaying} from \"./selection/OnPlaying\";\n  selection.prototype.OnPlaying = OnPlaying;\nimport {default as OnPopstate} from \"./selection/OnPopstate\";\n  selection.prototype.OnPopstate = OnPopstate;\nimport {default as OnProgress} from \"./selection/OnProgress\";\n  selection.prototype.OnProgress = OnProgress;\nimport {default as OnRatechange} from \"./selection/OnRatechange\";\n  selection.prototype.OnRatechange = OnRatechange;\nimport {default as OnReset} from \"./selection/OnReset\";\n  selection.prototype.OnReset = OnReset;\nimport {default as OnResize} from \"./selection/OnResize\";\n  selection.prototype.OnResize = OnResize;\nimport {default as OnScroll} from \"./selection/OnScroll\";\n  selection.prototype.OnScroll = OnScroll;\nimport {default as OnSearch} from \"./selection/OnSearch\";\n  selection.prototype.OnSearch = OnSearch;\nimport {default as OnSeeked} from \"./selection/OnSeeked\";\n  selection.prototype.OnSeeked = OnSeeked;\nimport {default as OnSeeking} from \"./selection/OnSeeking\";\n  selection.prototype.OnSeeking = OnSeeking;\nimport {default as OnSelect} from \"./selection/OnSelect\";\n  selection.prototype.OnSelect = OnSelect;\nimport {default as OnShow} from \"./selection/OnShow\";\n  selection.prototype.OnShow = OnShow;\nimport {default as OnStalled} from \"./selection/OnStalled\";\n  selection.prototype.OnStalled = OnStalled;\nimport {default as OnStorage} from \"./selection/OnStorage\";\n  selection.prototype.OnStorage = OnStorage;\nimport {default as OnSubmit} from \"./selection/OnSubmit\";\n  selection.prototype.OnSubmit = OnSubmit;\nimport {default as OnSuspend} from \"./selection/OnSuspend\";\n  selection.prototype.OnSuspend = OnSuspend;\nimport {default as OnTimeupdate} from \"./selection/OnTimeupdate\";\n  selection.prototype.OnTimeupdate = OnTimeupdate;\nimport {default as OnToggle} from \"./selection/OnToggle\";\n  selection.prototype.OnToggle = OnToggle;\nimport {default as OnUnload} from \"./selection/OnUnload\";\n  selection.prototype.OnUnload = OnUnload;\nimport {default as OnVolumechange} from \"./selection/OnVolumechange\";\n  selection.prototype.OnVolumechange = OnVolumechange;\nimport {default as OnWaiting} from \"./selection/OnWaiting\";\n  selection.prototype.OnWaiting = OnWaiting;\nimport {default as OnWheel} from \"./selection/OnWheel\";\n  selection.prototype.OnWheel = OnWheel;\nimport {default as Optgroup} from \"./selection/Optgroup\";\n  selection.prototype.Optgroup = Optgroup;\nimport {default as Option} from \"./selection/Option\";\n  selection.prototype.Option = Option;\nimport {default as Options} from \"./selection/Options\";\n  selection.prototype.Options = Options;\nimport {default as Order} from \"./selection/Order\";\n  selection.prototype.Order = Order;\nimport {default as Outline} from \"./selection/Outline\";\n  selection.prototype.Outline = Outline;\nimport {default as OutlineColor} from \"./selection/OutlineColor\";\n  selection.prototype.OutlineColor = OutlineColor;\nimport {default as OutlineOffset} from \"./selection/OutlineOffset\";\n  selection.prototype.OutlineOffset = OutlineOffset;\nimport {default as OutlineStyle} from \"./selection/OutlineStyle\";\n  selection.prototype.OutlineStyle = OutlineStyle;\nimport {default as OutlineWidth} from \"./selection/OutlineWidth\";\n  selection.prototype.OutlineWidth = OutlineWidth;\nimport {default as Output} from \"./selection/Output\";\n  selection.prototype.Output = Output;\nimport {default as Overflow} from \"./selection/Overflow\";\n  selection.prototype.Overflow = Overflow;\nimport {default as OverflowWrap} from \"./selection/OverflowWrap\";\n  selection.prototype.OverflowWrap = OverflowWrap;\nimport {default as OverflowX} from \"./selection/OverflowX\";\n  selection.prototype.OverflowX = OverflowX;\nimport {default as OverflowY} from \"./selection/OverflowY\";\n  selection.prototype.OverflowY = OverflowY;\nimport {default as P} from \"./selection/P\";\n  selection.prototype.P = P;\nimport {default as Padding} from \"./selection/Padding\";\n  selection.prototype.Padding = Padding;\nimport {default as PaddingBottom} from \"./selection/PaddingBottom\";\n  selection.prototype.PaddingBottom = PaddingBottom;\nimport {default as PaddingLeft} from \"./selection/PaddingLeft\";\n  selection.prototype.PaddingLeft = PaddingLeft;\nimport {default as PaddingRight} from \"./selection/PaddingRight\";\n  selection.prototype.PaddingRight = PaddingRight;\nimport {default as PaddingTop} from \"./selection/PaddingTop\";\n  selection.prototype.PaddingTop = PaddingTop;\nimport {default as Param} from \"./selection/Param\";\n  selection.prototype.Param = Param;\nimport {default as ParentNode} from \"./selection/ParentNode\";\n  selection.prototype.ParentNode = ParentNode;\nimport {default as Password} from \"./selection/Password\";\n  selection.prototype.Password = Password;\nimport {default as Pattern} from \"./selection/Pattern\";\n  selection.prototype.Pattern = Pattern;\nimport {default as Placeholder} from \"./selection/Placeholder\";\n  selection.prototype.Placeholder = Placeholder;\nimport {default as Position} from \"./selection/Position\";\n  selection.prototype.Position = Position;\nimport {default as Pre} from \"./selection/Pre\";\n  selection.prototype.Pre = Pre;\nimport {default as Progress} from \"./selection/Progress\";\n  selection.prototype.Progress = Progress;\nimport {default as Q} from \"./selection/Q\";\n  selection.prototype.Q = Q;\nimport {default as Radio} from \"./selection/Radio\";\n  selection.prototype.Radio = Radio;\nimport {default as Range} from \"./selection/Range\";\n  selection.prototype.Range = Range;\nimport {default as Reset} from \"./selection/Reset\";\n  selection.prototype.Reset = Reset;\nimport {default as Resize} from \"./selection/Resize\";\n  selection.prototype.Resize = Resize;\nimport {default as Right} from \"./selection/Right\";\n  selection.prototype.Right = Right;\nimport {default as Rowspan} from \"./selection/Rowspan\";\n  selection.prototype.Rowspan = Rowspan;\nimport {default as Rp} from \"./selection/Rp\";\n  selection.prototype.Rp = Rp;\nimport {default as Rt} from \"./selection/Rt\";\n  selection.prototype.Rt = Rt;\nimport {default as Rtc} from \"./selection/Rtc\";\n  selection.prototype.Rtc = Rtc;\nimport {default as Ruby} from \"./selection/Ruby\";\n  selection.prototype.Ruby = Ruby;\nimport {default as S} from \"./selection/S\";\n  selection.prototype.S = S;\nimport {default as Samp} from \"./selection/Samp\";\n  selection.prototype.Samp = Samp;\nimport {default as Script} from \"./selection/Script\";\n  selection.prototype.Script = Script;\nimport {default as Search} from \"./selection/Search\";\n  selection.prototype.Search = Search;\nimport {default as Section} from \"./selection/Section\";\n  selection.prototype.Section = Section;\nimport {default as Select} from \"./selection/Select\";\n  selection.prototype.Select = Select;\nimport {default as Selected} from \"./selection/Selected\";\n  selection.prototype.Selected = Selected;\nimport {default as Shadow} from \"./selection/Shadow\";\n  selection.prototype.Shadow = Shadow;\nimport {default as Small} from \"./selection/Small\";\n  selection.prototype.Small = Small;\nimport {default as Source} from \"./selection/Source\";\n  selection.prototype.Source = Source;\nimport {default as Span} from \"./selection/Span\";\n  selection.prototype.Span = Span;\nimport {default as Src} from \"./selection/Src\";\n  selection.prototype.Src = Src;\nimport {default as Strong} from \"./selection/Strong\";\n  selection.prototype.Strong = Strong;\nimport {default as Sub} from \"./selection/Sub\";\n  selection.prototype.Sub = Sub;\nimport {default as Submit} from \"./selection/Submit\";\n  selection.prototype.Submit = Submit;\nimport {default as Summary} from \"./selection/Summary\";\n  selection.prototype.Summary = Summary;\nimport {default as Sup} from \"./selection/Sup\";\n  selection.prototype.Sup = Sup;\nimport {default as Svg} from \"./selection/Svg\";\n  selection.prototype.Svg = Svg;\nimport {default as TabSize} from \"./selection/TabSize\";\n  selection.prototype.TabSize = TabSize;\nimport {default as Tabindex} from \"./selection/Tabindex\";\n  selection.prototype.Tabindex = Tabindex;\nimport {default as Table} from \"./selection/Table\";\n  selection.prototype.Table = Table;\nimport {default as TableLayout} from \"./selection/TableLayout\";\n  selection.prototype.TableLayout = TableLayout;\nimport {default as Target} from \"./selection/Target\";\n  selection.prototype.Target = Target;\nimport {default as Tbody} from \"./selection/Tbody\";\n  selection.prototype.Tbody = Tbody;\nimport {default as Td} from \"./selection/Td\";\n  selection.prototype.Td = Td;\nimport {default as Tel} from \"./selection/Tel\";\n  selection.prototype.Tel = Tel;\nimport {default as Template} from \"./selection/Template\";\n  selection.prototype.Template = Template;\nimport {default as Text} from \"./selection/Text\";\n  selection.prototype.Text = Text;\nimport {default as TextAlign} from \"./selection/TextAlign\";\n  selection.prototype.TextAlign = TextAlign;\nimport {default as TextAlignLast} from \"./selection/TextAlignLast\";\n  selection.prototype.TextAlignLast = TextAlignLast;\nimport {default as TextCombineUpright} from \"./selection/TextCombineUpright\";\n  selection.prototype.TextCombineUpright = TextCombineUpright;\nimport {default as TextDecoration} from \"./selection/TextDecoration\";\n  selection.prototype.TextDecoration = TextDecoration;\nimport {default as TextDecorationColor} from \"./selection/TextDecorationColor\";\n  selection.prototype.TextDecorationColor = TextDecorationColor;\nimport {default as TextDecorationLine} from \"./selection/TextDecorationLine\";\n  selection.prototype.TextDecorationLine = TextDecorationLine;\nimport {default as TextDecorationStyle} from \"./selection/TextDecorationStyle\";\n  selection.prototype.TextDecorationStyle = TextDecorationStyle;\nimport {default as TextIndent} from \"./selection/TextIndent\";\n  selection.prototype.TextIndent = TextIndent;\nimport {default as TextJustify} from \"./selection/TextJustify\";\n  selection.prototype.TextJustify = TextJustify;\nimport {default as TextOverflow} from \"./selection/TextOverflow\";\n  selection.prototype.TextOverflow = TextOverflow;\nimport {default as TextShadow} from \"./selection/TextShadow\";\n  selection.prototype.TextShadow = TextShadow;\nimport {default as TextTransform} from \"./selection/TextTransform\";\n  selection.prototype.TextTransform = TextTransform;\nimport {default as TextUnderlinePosition} from \"./selection/TextUnderlinePosition\";\n  selection.prototype.TextUnderlinePosition = TextUnderlinePosition;\nimport {default as Textarea} from \"./selection/Textarea\";\n  selection.prototype.Textarea = Textarea;\nimport {default as Tfoot} from \"./selection/Tfoot\";\n  selection.prototype.Tfoot = Tfoot;\nimport {default as Th} from \"./selection/Th\";\n  selection.prototype.Th = Th;\nimport {default as Thead} from \"./selection/Thead\";\n  selection.prototype.Thead = Thead;\nimport {default as Time} from \"./selection/Time\";\n  selection.prototype.Time = Time;\nimport {default as Title} from \"./selection/Title\";\n  selection.prototype.Title = Title;\nimport {default as Top} from \"./selection/Top\";\n  selection.prototype.Top = Top;\nimport {default as Tr} from \"./selection/Tr\";\n  selection.prototype.Tr = Tr;\nimport {default as Track} from \"./selection/Track\";\n  selection.prototype.Track = Track;\nimport {default as U} from \"./selection/U\";\n  selection.prototype.U = U;\nimport {default as Ul} from \"./selection/Ul\";\n  selection.prototype.Ul = Ul;\nimport {default as Url} from \"./selection/Url\";\n  selection.prototype.Url = Url;\nimport {default as UserSelect} from \"./selection/UserSelect\";\n  selection.prototype.UserSelect = UserSelect;\nimport {default as Validity} from \"./selection/Validity\";\n  selection.prototype.Validity = Validity;\nimport {default as Value} from \"./selection/Value\";\n  selection.prototype.Value = Value;\nimport {default as Var} from \"./selection/Var\";\n  selection.prototype.Var = Var;\nimport {default as VerticalAlign} from \"./selection/VerticalAlign\";\n  selection.prototype.VerticalAlign = VerticalAlign;\nimport {default as Video} from \"./selection/Video\";\n  selection.prototype.Video = Video;\nimport {default as Visibility} from \"./selection/Visibility\";\n  selection.prototype.Visibility = Visibility;\nimport {default as Wbr} from \"./selection/Wbr\";\n  selection.prototype.Wbr = Wbr;\nimport {default as Week} from \"./selection/Week\";\n  selection.prototype.Week = Week;\nimport {default as WhiteSpace} from \"./selection/WhiteSpace\";\n  selection.prototype.WhiteSpace = WhiteSpace;\nimport {default as Width} from \"./selection/Width\";\n  selection.prototype.Width = Width;\nimport {default as WordBreak} from \"./selection/WordBreak\";\n  selection.prototype.WordBreak = WordBreak;\nimport {default as WordSpacing} from \"./selection/WordSpacing\";\n  selection.prototype.WordSpacing = WordSpacing;\nimport {default as WordWrap} from \"./selection/WordWrap\";\n  selection.prototype.WordWrap = WordWrap;\nimport {default as ZIndex} from \"./selection/ZIndex\";\n  selection.prototype.ZIndex = ZIndex;\nimport {default as clear} from \"./selection/clear\";\n  selection.prototype.clear = clear;\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "variable",
    "name": "d3",
    "memberof": "lib/index.js",
    "static": true,
    "longname": "lib/index.js~d3",
    "access": null,
    "export": false,
    "importPath": "d3-html/lib/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 2,
    "kind": "variable",
    "name": "selection",
    "memberof": "lib/index.js",
    "static": true,
    "longname": "lib/index.js~selection",
    "access": null,
    "export": false,
    "importPath": "d3-html/lib/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 3,
    "kind": "file",
    "name": "lib/selection/A.js",
    "content": "/**\n * selection.A() creates &lt;a&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('a')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/A.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 4,
    "kind": "function",
    "name": "A",
    "memberof": "lib/selection/A.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/A.js~A",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/A.js",
    "importStyle": "A",
    "description": "selection.A() creates &lt;a&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 5,
    "kind": "file",
    "name": "lib/selection/Abbr.js",
    "content": "/**\n * selection.Abbr() creates &lt;abbr&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('abbr')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Abbr.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 6,
    "kind": "function",
    "name": "Abbr",
    "memberof": "lib/selection/Abbr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Abbr.js~Abbr",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Abbr.js",
    "importStyle": "Abbr",
    "description": "selection.Abbr() creates &lt;abbr&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 7,
    "kind": "file",
    "name": "lib/selection/Accept.js",
    "content": "/**\n * selection.Accept() get or change accept attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('accept');\n  }\n  else\n  {\n    return this.attr('accept', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Accept.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 8,
    "kind": "function",
    "name": "Accept",
    "memberof": "lib/selection/Accept.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Accept.js~Accept",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Accept.js",
    "importStyle": "Accept",
    "description": "selection.Accept() get or change accept attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "lib/selection/Accesskey.js",
    "content": "/**\n * selection.Accesskey() get or change accesskey attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('accesskey');\n  }\n  else\n  {\n    return this.attr('accesskey', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Accesskey.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "function",
    "name": "Accesskey",
    "memberof": "lib/selection/Accesskey.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Accesskey.js~Accesskey",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Accesskey.js",
    "importStyle": "Accesskey",
    "description": "selection.Accesskey() get or change accesskey attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 11,
    "kind": "file",
    "name": "lib/selection/Action.js",
    "content": "/**\n * selection.Action() get or change action attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('action');\n  }\n  else\n  {\n    return this.attr('action', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Action.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12,
    "kind": "function",
    "name": "Action",
    "memberof": "lib/selection/Action.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Action.js~Action",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Action.js",
    "importStyle": "Action",
    "description": "selection.Action() get or change action attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 13,
    "kind": "file",
    "name": "lib/selection/Address.js",
    "content": "/**\n * selection.Address() creates &lt;address&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('address')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Address.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 14,
    "kind": "function",
    "name": "Address",
    "memberof": "lib/selection/Address.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Address.js~Address",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Address.js",
    "importStyle": "Address",
    "description": "selection.Address() creates &lt;address&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 15,
    "kind": "file",
    "name": "lib/selection/AlignContent.js",
    "content": "/**\n * selection.AlignContent() get or change align-content style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('align-content');\n  }\n  else\n  {\n    return this.style('align-content', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/AlignContent.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 16,
    "kind": "function",
    "name": "AlignContent",
    "memberof": "lib/selection/AlignContent.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/AlignContent.js~AlignContent",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/AlignContent.js",
    "importStyle": "AlignContent",
    "description": "selection.AlignContent() get or change align-content style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 17,
    "kind": "file",
    "name": "lib/selection/AlignItems.js",
    "content": "/**\n * selection.AlignItems() get or change align-items style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('align-items');\n  }\n  else\n  {\n    return this.style('align-items', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/AlignItems.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 18,
    "kind": "function",
    "name": "AlignItems",
    "memberof": "lib/selection/AlignItems.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/AlignItems.js~AlignItems",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/AlignItems.js",
    "importStyle": "AlignItems",
    "description": "selection.AlignItems() get or change align-items style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "lib/selection/AlignSelf.js",
    "content": "/**\n * selection.AlignSelf() get or change align-self style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('align-self');\n  }\n  else\n  {\n    return this.style('align-self', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/AlignSelf.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "function",
    "name": "AlignSelf",
    "memberof": "lib/selection/AlignSelf.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/AlignSelf.js~AlignSelf",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/AlignSelf.js",
    "importStyle": "AlignSelf",
    "description": "selection.AlignSelf() get or change align-self style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 21,
    "kind": "file",
    "name": "lib/selection/Alt.js",
    "content": "/**\n * selection.Alt() get or change alt attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('alt');\n  }\n  else\n  {\n    return this.attr('alt', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Alt.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 22,
    "kind": "function",
    "name": "Alt",
    "memberof": "lib/selection/Alt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Alt.js~Alt",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Alt.js",
    "importStyle": "Alt",
    "description": "selection.Alt() get or change alt attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 23,
    "kind": "file",
    "name": "lib/selection/Area.js",
    "content": "/**\n * selection.Area() creates &lt;area&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('area')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Area.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 24,
    "kind": "function",
    "name": "Area",
    "memberof": "lib/selection/Area.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Area.js~Area",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Area.js",
    "importStyle": "Area",
    "description": "selection.Area() creates &lt;area&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 25,
    "kind": "file",
    "name": "lib/selection/Article.js",
    "content": "/**\n * selection.Article() creates &lt;article&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('article')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Article.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 26,
    "kind": "function",
    "name": "Article",
    "memberof": "lib/selection/Article.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Article.js~Article",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Article.js",
    "importStyle": "Article",
    "description": "selection.Article() creates &lt;article&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 27,
    "kind": "file",
    "name": "lib/selection/Aside.js",
    "content": "/**\n * selection.Aside() creates &lt;aside&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('aside')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Aside.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 28,
    "kind": "function",
    "name": "Aside",
    "memberof": "lib/selection/Aside.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Aside.js~Aside",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Aside.js",
    "importStyle": "Aside",
    "description": "selection.Aside() creates &lt;aside&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 29,
    "kind": "file",
    "name": "lib/selection/Audio.js",
    "content": "/**\n * selection.Audio() creates &lt;audio&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('audio')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Audio.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 30,
    "kind": "function",
    "name": "Audio",
    "memberof": "lib/selection/Audio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Audio.js~Audio",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Audio.js",
    "importStyle": "Audio",
    "description": "selection.Audio() creates &lt;audio&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 31,
    "kind": "file",
    "name": "lib/selection/Autocomplete.js",
    "content": "/**\n * selection.Autocomplete() get or change autocomplete attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('autocomplete');\n  }\n  else\n  {\n    return this.attr('autocomplete', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Autocomplete.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "Autocomplete",
    "memberof": "lib/selection/Autocomplete.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Autocomplete.js~Autocomplete",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Autocomplete.js",
    "importStyle": "Autocomplete",
    "description": "selection.Autocomplete() get or change autocomplete attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 33,
    "kind": "file",
    "name": "lib/selection/Autofocus.js",
    "content": "/**\n * selection.Autofocus() get or change autofocus attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('autofocus');\n  }\n  else\n  {\n    return this.attr('autofocus', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Autofocus.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 34,
    "kind": "function",
    "name": "Autofocus",
    "memberof": "lib/selection/Autofocus.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Autofocus.js~Autofocus",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Autofocus.js",
    "importStyle": "Autofocus",
    "description": "selection.Autofocus() get or change autofocus attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 35,
    "kind": "file",
    "name": "lib/selection/B.js",
    "content": "/**\n * selection.B() creates &lt;b&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('b')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/B.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 36,
    "kind": "function",
    "name": "B",
    "memberof": "lib/selection/B.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/B.js~B",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/B.js",
    "importStyle": "B",
    "description": "selection.B() creates &lt;b&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 37,
    "kind": "file",
    "name": "lib/selection/Background.js",
    "content": "/**\n * selection.Background() get or change background style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background');\n  }\n  else\n  {\n    return this.style('background', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Background.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 38,
    "kind": "function",
    "name": "Background",
    "memberof": "lib/selection/Background.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Background.js~Background",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Background.js",
    "importStyle": "Background",
    "description": "selection.Background() get or change background style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 39,
    "kind": "file",
    "name": "lib/selection/BackgroundAttachment.js",
    "content": "/**\n * selection.BackgroundAttachment() get or change background-attachment style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-attachment');\n  }\n  else\n  {\n    return this.style('background-attachment', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundAttachment.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 40,
    "kind": "function",
    "name": "BackgroundAttachment",
    "memberof": "lib/selection/BackgroundAttachment.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundAttachment.js~BackgroundAttachment",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundAttachment.js",
    "importStyle": "BackgroundAttachment",
    "description": "selection.BackgroundAttachment() get or change background-attachment style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 41,
    "kind": "file",
    "name": "lib/selection/BackgroundBlendMode.js",
    "content": "/**\n * selection.BackgroundBlendMode() get or change background-blend-mode style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-blend-mode');\n  }\n  else\n  {\n    return this.style('background-blend-mode', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundBlendMode.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 42,
    "kind": "function",
    "name": "BackgroundBlendMode",
    "memberof": "lib/selection/BackgroundBlendMode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundBlendMode.js~BackgroundBlendMode",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundBlendMode.js",
    "importStyle": "BackgroundBlendMode",
    "description": "selection.BackgroundBlendMode() get or change background-blend-mode style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 43,
    "kind": "file",
    "name": "lib/selection/BackgroundClip.js",
    "content": "/**\n * selection.BackgroundClip() get or change background-clip style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-clip');\n  }\n  else\n  {\n    return this.style('background-clip', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundClip.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 44,
    "kind": "function",
    "name": "BackgroundClip",
    "memberof": "lib/selection/BackgroundClip.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundClip.js~BackgroundClip",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundClip.js",
    "importStyle": "BackgroundClip",
    "description": "selection.BackgroundClip() get or change background-clip style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 45,
    "kind": "file",
    "name": "lib/selection/BackgroundColor.js",
    "content": "/**\n * selection.BackgroundColor() get or change background-color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-color');\n  }\n  else\n  {\n    return this.style('background-color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 46,
    "kind": "function",
    "name": "BackgroundColor",
    "memberof": "lib/selection/BackgroundColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundColor.js~BackgroundColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundColor.js",
    "importStyle": "BackgroundColor",
    "description": "selection.BackgroundColor() get or change background-color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 47,
    "kind": "file",
    "name": "lib/selection/BackgroundImage.js",
    "content": "/**\n * selection.BackgroundImage() get or change background-image style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-image');\n  }\n  else\n  {\n    return this.style('background-image', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundImage.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 48,
    "kind": "function",
    "name": "BackgroundImage",
    "memberof": "lib/selection/BackgroundImage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundImage.js~BackgroundImage",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundImage.js",
    "importStyle": "BackgroundImage",
    "description": "selection.BackgroundImage() get or change background-image style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 49,
    "kind": "file",
    "name": "lib/selection/BackgroundOrigin.js",
    "content": "/**\n * selection.BackgroundOrigin() get or change background-origin style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-origin');\n  }\n  else\n  {\n    return this.style('background-origin', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundOrigin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "BackgroundOrigin",
    "memberof": "lib/selection/BackgroundOrigin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundOrigin.js~BackgroundOrigin",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundOrigin.js",
    "importStyle": "BackgroundOrigin",
    "description": "selection.BackgroundOrigin() get or change background-origin style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "lib/selection/BackgroundPosition.js",
    "content": "/**\n * selection.BackgroundPosition() get or change background-position style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-position');\n  }\n  else\n  {\n    return this.style('background-position', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundPosition.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "BackgroundPosition",
    "memberof": "lib/selection/BackgroundPosition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundPosition.js~BackgroundPosition",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundPosition.js",
    "importStyle": "BackgroundPosition",
    "description": "selection.BackgroundPosition() get or change background-position style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 53,
    "kind": "file",
    "name": "lib/selection/BackgroundRepeat.js",
    "content": "/**\n * selection.BackgroundRepeat() get or change background-repeat style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-repeat');\n  }\n  else\n  {\n    return this.style('background-repeat', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundRepeat.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 54,
    "kind": "function",
    "name": "BackgroundRepeat",
    "memberof": "lib/selection/BackgroundRepeat.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundRepeat.js~BackgroundRepeat",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundRepeat.js",
    "importStyle": "BackgroundRepeat",
    "description": "selection.BackgroundRepeat() get or change background-repeat style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "lib/selection/BackgroundSize.js",
    "content": "/**\n * selection.BackgroundSize() get or change background-size style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('background-size');\n  }\n  else\n  {\n    return this.style('background-size', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BackgroundSize.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "BackgroundSize",
    "memberof": "lib/selection/BackgroundSize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BackgroundSize.js~BackgroundSize",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BackgroundSize.js",
    "importStyle": "BackgroundSize",
    "description": "selection.BackgroundSize() get or change background-size style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "lib/selection/Base.js",
    "content": "/**\n * selection.Base() creates &lt;base&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('base')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Base.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "Base",
    "memberof": "lib/selection/Base.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Base.js~Base",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Base.js",
    "importStyle": "Base",
    "description": "selection.Base() creates &lt;base&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "lib/selection/Bdi.js",
    "content": "/**\n * selection.Bdi() creates &lt;bdi&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('bdi')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Bdi.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "Bdi",
    "memberof": "lib/selection/Bdi.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Bdi.js~Bdi",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Bdi.js",
    "importStyle": "Bdi",
    "description": "selection.Bdi() creates &lt;bdi&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "lib/selection/Bdo.js",
    "content": "/**\n * selection.Bdo() creates &lt;bdo&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('bdo')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Bdo.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "Bdo",
    "memberof": "lib/selection/Bdo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Bdo.js~Bdo",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Bdo.js",
    "importStyle": "Bdo",
    "description": "selection.Bdo() creates &lt;bdo&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "lib/selection/Blockquote.js",
    "content": "/**\n * selection.Blockquote() creates &lt;blockquote&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('blockquote')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Blockquote.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "Blockquote",
    "memberof": "lib/selection/Blockquote.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Blockquote.js~Blockquote",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Blockquote.js",
    "importStyle": "Blockquote",
    "description": "selection.Blockquote() creates &lt;blockquote&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "lib/selection/Border.js",
    "content": "/**\n * selection.Border() get or change border style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border');\n  }\n  else\n  {\n    return this.style('border', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Border.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "Border",
    "memberof": "lib/selection/Border.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Border.js~Border",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Border.js",
    "importStyle": "Border",
    "description": "selection.Border() get or change border style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "lib/selection/BorderBottom.js",
    "content": "/**\n * selection.BorderBottom() get or change border-bottom style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-bottom');\n  }\n  else\n  {\n    return this.style('border-bottom', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderBottom.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "function",
    "name": "BorderBottom",
    "memberof": "lib/selection/BorderBottom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderBottom.js~BorderBottom",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderBottom.js",
    "importStyle": "BorderBottom",
    "description": "selection.BorderBottom() get or change border-bottom style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "lib/selection/BorderBottomColor.js",
    "content": "/**\n * selection.BorderBottomColor() get or change border-bottom-color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-bottom-color');\n  }\n  else\n  {\n    return this.style('border-bottom-color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderBottomColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "BorderBottomColor",
    "memberof": "lib/selection/BorderBottomColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderBottomColor.js~BorderBottomColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderBottomColor.js",
    "importStyle": "BorderBottomColor",
    "description": "selection.BorderBottomColor() get or change border-bottom-color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "lib/selection/BorderBottomLeftRadius.js",
    "content": "/**\n * selection.BorderBottomLeftRadius() get or change border-bottom-left-radius style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-bottom-left-radius');\n  }\n  else\n  {\n    return this.style('border-bottom-left-radius', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderBottomLeftRadius.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "function",
    "name": "BorderBottomLeftRadius",
    "memberof": "lib/selection/BorderBottomLeftRadius.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderBottomLeftRadius.js~BorderBottomLeftRadius",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderBottomLeftRadius.js",
    "importStyle": "BorderBottomLeftRadius",
    "description": "selection.BorderBottomLeftRadius() get or change border-bottom-left-radius style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "lib/selection/BorderBottomRightRadius.js",
    "content": "/**\n * selection.BorderBottomRightRadius() get or change border-bottom-right-radius style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-bottom-right-radius');\n  }\n  else\n  {\n    return this.style('border-bottom-right-radius', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderBottomRightRadius.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "function",
    "name": "BorderBottomRightRadius",
    "memberof": "lib/selection/BorderBottomRightRadius.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderBottomRightRadius.js~BorderBottomRightRadius",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderBottomRightRadius.js",
    "importStyle": "BorderBottomRightRadius",
    "description": "selection.BorderBottomRightRadius() get or change border-bottom-right-radius style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 75,
    "kind": "file",
    "name": "lib/selection/BorderBottomStyle.js",
    "content": "/**\n * selection.BorderBottomStyle() get or change border-bottom-style style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-bottom-style');\n  }\n  else\n  {\n    return this.style('border-bottom-style', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderBottomStyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "BorderBottomStyle",
    "memberof": "lib/selection/BorderBottomStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderBottomStyle.js~BorderBottomStyle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderBottomStyle.js",
    "importStyle": "BorderBottomStyle",
    "description": "selection.BorderBottomStyle() get or change border-bottom-style style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "lib/selection/BorderBottomWidth.js",
    "content": "/**\n * selection.BorderBottomWidth() get or change border-bottom-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-bottom-width');\n  }\n  else\n  {\n    return this.style('border-bottom-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderBottomWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "BorderBottomWidth",
    "memberof": "lib/selection/BorderBottomWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderBottomWidth.js~BorderBottomWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderBottomWidth.js",
    "importStyle": "BorderBottomWidth",
    "description": "selection.BorderBottomWidth() get or change border-bottom-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "lib/selection/BorderCollapse.js",
    "content": "/**\n * selection.BorderCollapse() get or change border-collapse style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-collapse');\n  }\n  else\n  {\n    return this.style('border-collapse', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderCollapse.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "BorderCollapse",
    "memberof": "lib/selection/BorderCollapse.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderCollapse.js~BorderCollapse",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderCollapse.js",
    "importStyle": "BorderCollapse",
    "description": "selection.BorderCollapse() get or change border-collapse style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "lib/selection/BorderColor.js",
    "content": "/**\n * selection.BorderColor() get or change border-color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-color');\n  }\n  else\n  {\n    return this.style('border-color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "BorderColor",
    "memberof": "lib/selection/BorderColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderColor.js~BorderColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderColor.js",
    "importStyle": "BorderColor",
    "description": "selection.BorderColor() get or change border-color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "lib/selection/BorderImage.js",
    "content": "/**\n * selection.BorderImage() get or change border-image style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-image');\n  }\n  else\n  {\n    return this.style('border-image', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderImage.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "function",
    "name": "BorderImage",
    "memberof": "lib/selection/BorderImage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderImage.js~BorderImage",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderImage.js",
    "importStyle": "BorderImage",
    "description": "selection.BorderImage() get or change border-image style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 85,
    "kind": "file",
    "name": "lib/selection/BorderImageOutset.js",
    "content": "/**\n * selection.BorderImageOutset() get or change border-image-outset style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-image-outset');\n  }\n  else\n  {\n    return this.style('border-image-outset', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderImageOutset.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 86,
    "kind": "function",
    "name": "BorderImageOutset",
    "memberof": "lib/selection/BorderImageOutset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderImageOutset.js~BorderImageOutset",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderImageOutset.js",
    "importStyle": "BorderImageOutset",
    "description": "selection.BorderImageOutset() get or change border-image-outset style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "lib/selection/BorderImageRepeat.js",
    "content": "/**\n * selection.BorderImageRepeat() get or change border-image-repeat style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-image-repeat');\n  }\n  else\n  {\n    return this.style('border-image-repeat', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderImageRepeat.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "function",
    "name": "BorderImageRepeat",
    "memberof": "lib/selection/BorderImageRepeat.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderImageRepeat.js~BorderImageRepeat",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderImageRepeat.js",
    "importStyle": "BorderImageRepeat",
    "description": "selection.BorderImageRepeat() get or change border-image-repeat style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 89,
    "kind": "file",
    "name": "lib/selection/BorderImageSlice.js",
    "content": "/**\n * selection.BorderImageSlice() get or change border-image-slice style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-image-slice');\n  }\n  else\n  {\n    return this.style('border-image-slice', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderImageSlice.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "BorderImageSlice",
    "memberof": "lib/selection/BorderImageSlice.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderImageSlice.js~BorderImageSlice",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderImageSlice.js",
    "importStyle": "BorderImageSlice",
    "description": "selection.BorderImageSlice() get or change border-image-slice style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 91,
    "kind": "file",
    "name": "lib/selection/BorderImageSource.js",
    "content": "/**\n * selection.BorderImageSource() get or change border-image-source style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-image-source');\n  }\n  else\n  {\n    return this.style('border-image-source', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderImageSource.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 92,
    "kind": "function",
    "name": "BorderImageSource",
    "memberof": "lib/selection/BorderImageSource.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderImageSource.js~BorderImageSource",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderImageSource.js",
    "importStyle": "BorderImageSource",
    "description": "selection.BorderImageSource() get or change border-image-source style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 93,
    "kind": "file",
    "name": "lib/selection/BorderImageWidth.js",
    "content": "/**\n * selection.BorderImageWidth() get or change border-image-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-image-width');\n  }\n  else\n  {\n    return this.style('border-image-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderImageWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 94,
    "kind": "function",
    "name": "BorderImageWidth",
    "memberof": "lib/selection/BorderImageWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderImageWidth.js~BorderImageWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderImageWidth.js",
    "importStyle": "BorderImageWidth",
    "description": "selection.BorderImageWidth() get or change border-image-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 95,
    "kind": "file",
    "name": "lib/selection/BorderLeft.js",
    "content": "/**\n * selection.BorderLeft() get or change border-left style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-left');\n  }\n  else\n  {\n    return this.style('border-left', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderLeft.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 96,
    "kind": "function",
    "name": "BorderLeft",
    "memberof": "lib/selection/BorderLeft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderLeft.js~BorderLeft",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderLeft.js",
    "importStyle": "BorderLeft",
    "description": "selection.BorderLeft() get or change border-left style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 97,
    "kind": "file",
    "name": "lib/selection/BorderLeftColor.js",
    "content": "/**\n * selection.BorderLeftColor() get or change border-left-color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-left-color');\n  }\n  else\n  {\n    return this.style('border-left-color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderLeftColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 98,
    "kind": "function",
    "name": "BorderLeftColor",
    "memberof": "lib/selection/BorderLeftColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderLeftColor.js~BorderLeftColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderLeftColor.js",
    "importStyle": "BorderLeftColor",
    "description": "selection.BorderLeftColor() get or change border-left-color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 99,
    "kind": "file",
    "name": "lib/selection/BorderLeftStyle.js",
    "content": "/**\n * selection.BorderLeftStyle() get or change border-left-style style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-left-style');\n  }\n  else\n  {\n    return this.style('border-left-style', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderLeftStyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 100,
    "kind": "function",
    "name": "BorderLeftStyle",
    "memberof": "lib/selection/BorderLeftStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderLeftStyle.js~BorderLeftStyle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderLeftStyle.js",
    "importStyle": "BorderLeftStyle",
    "description": "selection.BorderLeftStyle() get or change border-left-style style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 101,
    "kind": "file",
    "name": "lib/selection/BorderLeftWidth.js",
    "content": "/**\n * selection.BorderLeftWidth() get or change border-left-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-left-width');\n  }\n  else\n  {\n    return this.style('border-left-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderLeftWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 102,
    "kind": "function",
    "name": "BorderLeftWidth",
    "memberof": "lib/selection/BorderLeftWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderLeftWidth.js~BorderLeftWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderLeftWidth.js",
    "importStyle": "BorderLeftWidth",
    "description": "selection.BorderLeftWidth() get or change border-left-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 103,
    "kind": "file",
    "name": "lib/selection/BorderRadius.js",
    "content": "/**\n * selection.BorderRadius() get or change border-radius style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-radius');\n  }\n  else\n  {\n    return this.style('border-radius', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderRadius.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 104,
    "kind": "function",
    "name": "BorderRadius",
    "memberof": "lib/selection/BorderRadius.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderRadius.js~BorderRadius",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderRadius.js",
    "importStyle": "BorderRadius",
    "description": "selection.BorderRadius() get or change border-radius style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "lib/selection/BorderRight.js",
    "content": "/**\n * selection.BorderRight() get or change border-right style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-right');\n  }\n  else\n  {\n    return this.style('border-right', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderRight.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "function",
    "name": "BorderRight",
    "memberof": "lib/selection/BorderRight.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderRight.js~BorderRight",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderRight.js",
    "importStyle": "BorderRight",
    "description": "selection.BorderRight() get or change border-right style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 107,
    "kind": "file",
    "name": "lib/selection/BorderRightColor.js",
    "content": "/**\n * selection.BorderRightColor() get or change border-right-color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-right-color');\n  }\n  else\n  {\n    return this.style('border-right-color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderRightColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 108,
    "kind": "function",
    "name": "BorderRightColor",
    "memberof": "lib/selection/BorderRightColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderRightColor.js~BorderRightColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderRightColor.js",
    "importStyle": "BorderRightColor",
    "description": "selection.BorderRightColor() get or change border-right-color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "lib/selection/BorderRightStyle.js",
    "content": "/**\n * selection.BorderRightStyle() get or change border-right-style style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-right-style');\n  }\n  else\n  {\n    return this.style('border-right-style', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderRightStyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "function",
    "name": "BorderRightStyle",
    "memberof": "lib/selection/BorderRightStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderRightStyle.js~BorderRightStyle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderRightStyle.js",
    "importStyle": "BorderRightStyle",
    "description": "selection.BorderRightStyle() get or change border-right-style style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 111,
    "kind": "file",
    "name": "lib/selection/BorderRightWidth.js",
    "content": "/**\n * selection.BorderRightWidth() get or change border-right-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-right-width');\n  }\n  else\n  {\n    return this.style('border-right-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderRightWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 112,
    "kind": "function",
    "name": "BorderRightWidth",
    "memberof": "lib/selection/BorderRightWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderRightWidth.js~BorderRightWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderRightWidth.js",
    "importStyle": "BorderRightWidth",
    "description": "selection.BorderRightWidth() get or change border-right-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 113,
    "kind": "file",
    "name": "lib/selection/BorderSpacing.js",
    "content": "/**\n * selection.BorderSpacing() get or change border-spacing style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-spacing');\n  }\n  else\n  {\n    return this.style('border-spacing', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderSpacing.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 114,
    "kind": "function",
    "name": "BorderSpacing",
    "memberof": "lib/selection/BorderSpacing.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderSpacing.js~BorderSpacing",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderSpacing.js",
    "importStyle": "BorderSpacing",
    "description": "selection.BorderSpacing() get or change border-spacing style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 115,
    "kind": "file",
    "name": "lib/selection/BorderStyle.js",
    "content": "/**\n * selection.BorderStyle() get or change border-style style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-style');\n  }\n  else\n  {\n    return this.style('border-style', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderStyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 116,
    "kind": "function",
    "name": "BorderStyle",
    "memberof": "lib/selection/BorderStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderStyle.js~BorderStyle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderStyle.js",
    "importStyle": "BorderStyle",
    "description": "selection.BorderStyle() get or change border-style style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "lib/selection/BorderTop.js",
    "content": "/**\n * selection.BorderTop() get or change border-top style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-top');\n  }\n  else\n  {\n    return this.style('border-top', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderTop.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "function",
    "name": "BorderTop",
    "memberof": "lib/selection/BorderTop.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderTop.js~BorderTop",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderTop.js",
    "importStyle": "BorderTop",
    "description": "selection.BorderTop() get or change border-top style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 119,
    "kind": "file",
    "name": "lib/selection/BorderTopColor.js",
    "content": "/**\n * selection.BorderTopColor() get or change border-top-color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-top-color');\n  }\n  else\n  {\n    return this.style('border-top-color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderTopColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 120,
    "kind": "function",
    "name": "BorderTopColor",
    "memberof": "lib/selection/BorderTopColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderTopColor.js~BorderTopColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderTopColor.js",
    "importStyle": "BorderTopColor",
    "description": "selection.BorderTopColor() get or change border-top-color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 121,
    "kind": "file",
    "name": "lib/selection/BorderTopLeftRadius.js",
    "content": "/**\n * selection.BorderTopLeftRadius() get or change border-top-left-radius style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-top-left-radius');\n  }\n  else\n  {\n    return this.style('border-top-left-radius', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderTopLeftRadius.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "BorderTopLeftRadius",
    "memberof": "lib/selection/BorderTopLeftRadius.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderTopLeftRadius.js~BorderTopLeftRadius",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderTopLeftRadius.js",
    "importStyle": "BorderTopLeftRadius",
    "description": "selection.BorderTopLeftRadius() get or change border-top-left-radius style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 123,
    "kind": "file",
    "name": "lib/selection/BorderTopRightRadius.js",
    "content": "/**\n * selection.BorderTopRightRadius() get or change border-top-right-radius style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-top-right-radius');\n  }\n  else\n  {\n    return this.style('border-top-right-radius', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderTopRightRadius.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 124,
    "kind": "function",
    "name": "BorderTopRightRadius",
    "memberof": "lib/selection/BorderTopRightRadius.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderTopRightRadius.js~BorderTopRightRadius",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderTopRightRadius.js",
    "importStyle": "BorderTopRightRadius",
    "description": "selection.BorderTopRightRadius() get or change border-top-right-radius style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 125,
    "kind": "file",
    "name": "lib/selection/BorderTopStyle.js",
    "content": "/**\n * selection.BorderTopStyle() get or change border-top-style style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-top-style');\n  }\n  else\n  {\n    return this.style('border-top-style', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderTopStyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 126,
    "kind": "function",
    "name": "BorderTopStyle",
    "memberof": "lib/selection/BorderTopStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderTopStyle.js~BorderTopStyle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderTopStyle.js",
    "importStyle": "BorderTopStyle",
    "description": "selection.BorderTopStyle() get or change border-top-style style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 127,
    "kind": "file",
    "name": "lib/selection/BorderTopWidth.js",
    "content": "/**\n * selection.BorderTopWidth() get or change border-top-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-top-width');\n  }\n  else\n  {\n    return this.style('border-top-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderTopWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "BorderTopWidth",
    "memberof": "lib/selection/BorderTopWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderTopWidth.js~BorderTopWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderTopWidth.js",
    "importStyle": "BorderTopWidth",
    "description": "selection.BorderTopWidth() get or change border-top-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 129,
    "kind": "file",
    "name": "lib/selection/BorderWidth.js",
    "content": "/**\n * selection.BorderWidth() get or change border-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('border-width');\n  }\n  else\n  {\n    return this.style('border-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BorderWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "BorderWidth",
    "memberof": "lib/selection/BorderWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BorderWidth.js~BorderWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BorderWidth.js",
    "importStyle": "BorderWidth",
    "description": "selection.BorderWidth() get or change border-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 131,
    "kind": "file",
    "name": "lib/selection/Bottom.js",
    "content": "/**\n * selection.Bottom() get or change bottom style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('bottom');\n  }\n  else\n  {\n    return this.style('bottom', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Bottom.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "Bottom",
    "memberof": "lib/selection/Bottom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Bottom.js~Bottom",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Bottom.js",
    "importStyle": "Bottom",
    "description": "selection.Bottom() get or change bottom style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 133,
    "kind": "file",
    "name": "lib/selection/BoxDecorationBreak.js",
    "content": "/**\n * selection.BoxDecorationBreak() get or change box-decoration-break style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('box-decoration-break');\n  }\n  else\n  {\n    return this.style('box-decoration-break', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BoxDecorationBreak.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 134,
    "kind": "function",
    "name": "BoxDecorationBreak",
    "memberof": "lib/selection/BoxDecorationBreak.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BoxDecorationBreak.js~BoxDecorationBreak",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BoxDecorationBreak.js",
    "importStyle": "BoxDecorationBreak",
    "description": "selection.BoxDecorationBreak() get or change box-decoration-break style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "lib/selection/BoxShadow.js",
    "content": "/**\n * selection.BoxShadow() get or change box-shadow style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('box-shadow');\n  }\n  else\n  {\n    return this.style('box-shadow', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BoxShadow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "function",
    "name": "BoxShadow",
    "memberof": "lib/selection/BoxShadow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BoxShadow.js~BoxShadow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BoxShadow.js",
    "importStyle": "BoxShadow",
    "description": "selection.BoxShadow() get or change box-shadow style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "lib/selection/BoxSizing.js",
    "content": "/**\n * selection.BoxSizing() get or change box-sizing style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('box-sizing');\n  }\n  else\n  {\n    return this.style('box-sizing', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/BoxSizing.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "BoxSizing",
    "memberof": "lib/selection/BoxSizing.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/BoxSizing.js~BoxSizing",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/BoxSizing.js",
    "importStyle": "BoxSizing",
    "description": "selection.BoxSizing() get or change box-sizing style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "lib/selection/Br.js",
    "content": "/**\n * selection.Br() creates &lt;br&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('br')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Br.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "Br",
    "memberof": "lib/selection/Br.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Br.js~Br",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Br.js",
    "importStyle": "Br",
    "description": "selection.Br() creates &lt;br&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "lib/selection/Button.js",
    "content": "/**\n * selection.Button() creates &lt;button&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('button')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Button.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "Button",
    "memberof": "lib/selection/Button.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Button.js~Button",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Button.js",
    "importStyle": "Button",
    "description": "selection.Button() creates &lt;button&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "lib/selection/Canvas.js",
    "content": "/**\n * selection.Canvas() creates &lt;canvas&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('canvas')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Canvas.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "function",
    "name": "Canvas",
    "memberof": "lib/selection/Canvas.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Canvas.js~Canvas",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Canvas.js",
    "importStyle": "Canvas",
    "description": "selection.Canvas() creates &lt;canvas&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "lib/selection/Caption.js",
    "content": "/**\n * selection.Caption() creates &lt;caption&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('caption')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Caption.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "function",
    "name": "Caption",
    "memberof": "lib/selection/Caption.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Caption.js~Caption",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Caption.js",
    "importStyle": "Caption",
    "description": "selection.Caption() creates &lt;caption&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "lib/selection/CaptionSide.js",
    "content": "/**\n * selection.CaptionSide() get or change caption-side style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('caption-side');\n  }\n  else\n  {\n    return this.style('caption-side', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/CaptionSide.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "function",
    "name": "CaptionSide",
    "memberof": "lib/selection/CaptionSide.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/CaptionSide.js~CaptionSide",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/CaptionSide.js",
    "importStyle": "CaptionSide",
    "description": "selection.CaptionSide() get or change caption-side style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 149,
    "kind": "file",
    "name": "lib/selection/Checkbox.js",
    "content": "/**\n * selection.Checkbox() creates &lt;input&gt; element of type checkbox\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'checkbox')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Checkbox.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 150,
    "kind": "function",
    "name": "Checkbox",
    "memberof": "lib/selection/Checkbox.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Checkbox.js~Checkbox",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Checkbox.js",
    "importStyle": "Checkbox",
    "description": "selection.Checkbox() creates &lt;input&gt; element of type checkbox",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 151,
    "kind": "file",
    "name": "lib/selection/Checked.js",
    "content": "/**\n * selection.Checked() get or change checked property value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.property('checked');\n  }\n  else\n  {\n    return this.property('checked', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Checked.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 152,
    "kind": "function",
    "name": "Checked",
    "memberof": "lib/selection/Checked.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Checked.js~Checked",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Checked.js",
    "importStyle": "Checked",
    "description": "selection.Checked() get or change checked property value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 153,
    "kind": "file",
    "name": "lib/selection/Children.js",
    "content": "/**\n * selection.Children() syncs children of an element to array of data elements\n *\n * Basically, is a wrapper for d3-selection enter and exit pattern.\n *\n * @param {string} [arrayData=''] array of data\n * @param {string} [childElementTagName=''] top level tag name\n * @param {string} [updateCallback=''] callback called to build or update child element\n * @return selected\n */\nexport default function (arrayData, childElementTagName, updateCallback)\n{\n  var parent = this;\n  // remove stray elements\n  parent.selectAll(childNodesSelector)\n    .filter(function ()\n    {\n      return this.tagName !== childElementTagName;\n    })\n    .remove();\n  // synchronise intended elements\n  var rows = parent.selectAll(childNodesSelector)\n    .data(arrayData);\n  rows.exit()\n    .remove(); // Note: not transitioning here as the effect is a bit weird.\n  updateCallback(rows.enter()\n    .append(childElementTagName), true);\n  updateCallback(rows, false);\n  return this;\n}\n\nfunction childNodesSelector ()\n{\n  return this.childNodes;\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Children.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 154,
    "kind": "function",
    "name": "Children",
    "memberof": "lib/selection/Children.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Children.js~Children",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Children.js",
    "importStyle": "Children",
    "description": "selection.Children() syncs children of an element to array of data elements\n\nBasically, is a wrapper for d3-selection enter and exit pattern.",
    "lineNumber": 11,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "arrayData",
        "description": "array of data"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "childElementTagName",
        "description": "top level tag name"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "updateCallback",
        "description": "callback called to build or update child element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected"
    }
  },
  {
    "__docId__": 155,
    "kind": "function",
    "name": "childNodesSelector",
    "memberof": "lib/selection/Children.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Children.js~childNodesSelector",
    "access": null,
    "export": false,
    "importPath": "d3-html/lib/selection/Children.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 156,
    "kind": "file",
    "name": "lib/selection/Cite.js",
    "content": "/**\n * selection.Cite() creates &lt;cite&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('cite')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Cite.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 157,
    "kind": "function",
    "name": "Cite",
    "memberof": "lib/selection/Cite.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Cite.js~Cite",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Cite.js",
    "importStyle": "Cite",
    "description": "selection.Cite() creates &lt;cite&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "lib/selection/Class.js",
    "content": "/**\n * selection.Class() get or change class attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('class');\n  }\n  else\n  {\n    return this.attr('class', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Class.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "Class",
    "memberof": "lib/selection/Class.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Class.js~Class",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Class.js",
    "importStyle": "Class",
    "description": "selection.Class() get or change class attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "lib/selection/Clear.js",
    "content": "/**\n * selection.Clear() get or change clear style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('clear');\n  }\n  else\n  {\n    return this.style('clear', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Clear.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "Clear",
    "memberof": "lib/selection/Clear.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Clear.js~Clear",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Clear.js",
    "importStyle": "Clear",
    "description": "selection.Clear() get or change clear style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 162,
    "kind": "file",
    "name": "lib/selection/Clip.js",
    "content": "/**\n * selection.Clip() get or change clip style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('clip');\n  }\n  else\n  {\n    return this.style('clip', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Clip.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "Clip",
    "memberof": "lib/selection/Clip.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Clip.js~Clip",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Clip.js",
    "importStyle": "Clip",
    "description": "selection.Clip() get or change clip style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "lib/selection/Code.js",
    "content": "/**\n * selection.Code() creates &lt;code&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('code')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Code.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "Code",
    "memberof": "lib/selection/Code.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Code.js~Code",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Code.js",
    "importStyle": "Code",
    "description": "selection.Code() creates &lt;code&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "lib/selection/Col.js",
    "content": "/**\n * selection.Col() creates &lt;col&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('col')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Col.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "Col",
    "memberof": "lib/selection/Col.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Col.js~Col",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Col.js",
    "importStyle": "Col",
    "description": "selection.Col() creates &lt;col&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "lib/selection/Colgroup.js",
    "content": "/**\n * selection.Colgroup() creates &lt;colgroup&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('colgroup')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Colgroup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "Colgroup",
    "memberof": "lib/selection/Colgroup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Colgroup.js~Colgroup",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Colgroup.js",
    "importStyle": "Colgroup",
    "description": "selection.Colgroup() creates &lt;colgroup&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "lib/selection/Color.js",
    "content": "/**\n * selection.Color() get or change color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('color');\n  }\n  else\n  {\n    return this.style('color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Color.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "Color",
    "memberof": "lib/selection/Color.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Color.js~Color",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Color.js",
    "importStyle": "Color",
    "description": "selection.Color() get or change color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "lib/selection/Cols.js",
    "content": "/**\n * selection.Cols() get or change cols attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('cols');\n  }\n  else\n  {\n    return this.attr('cols', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Cols.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "Cols",
    "memberof": "lib/selection/Cols.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Cols.js~Cols",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Cols.js",
    "importStyle": "Cols",
    "description": "selection.Cols() get or change cols attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "lib/selection/Colspan.js",
    "content": "/**\n * selection.Colspan() get or change colspan attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('colspan');\n  }\n  else\n  {\n    return this.attr('colspan', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Colspan.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "Colspan",
    "memberof": "lib/selection/Colspan.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Colspan.js~Colspan",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Colspan.js",
    "importStyle": "Colspan",
    "description": "selection.Colspan() get or change colspan attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 176,
    "kind": "file",
    "name": "lib/selection/Content.js",
    "content": "/**\n * selection.Content() get or change content style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('content');\n  }\n  else\n  {\n    return this.style('content', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Content.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "Content",
    "memberof": "lib/selection/Content.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Content.js~Content",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Content.js",
    "importStyle": "Content",
    "description": "selection.Content() get or change content style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 178,
    "kind": "file",
    "name": "lib/selection/ContentEditable.js",
    "content": "/**\n * selection.ContentEditable() get or change contentEditable attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('contentEditable');\n  }\n  else\n  {\n    return this.attr('contentEditable', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/ContentEditable.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 179,
    "kind": "function",
    "name": "ContentEditable",
    "memberof": "lib/selection/ContentEditable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/ContentEditable.js~ContentEditable",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/ContentEditable.js",
    "importStyle": "ContentEditable",
    "description": "selection.ContentEditable() get or change contentEditable attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 180,
    "kind": "file",
    "name": "lib/selection/Cursor.js",
    "content": "/**\n * selection.Cursor() get or change cursor style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('cursor');\n  }\n  else\n  {\n    return this.style('cursor', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Cursor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "Cursor",
    "memberof": "lib/selection/Cursor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Cursor.js~Cursor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Cursor.js",
    "importStyle": "Cursor",
    "description": "selection.Cursor() get or change cursor style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "lib/selection/Data.js",
    "content": "/**\n * selection.Data() creates &lt;data&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('data')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Data.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "Data",
    "memberof": "lib/selection/Data.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Data.js~Data",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Data.js",
    "importStyle": "Data",
    "description": "selection.Data() creates &lt;data&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 184,
    "kind": "file",
    "name": "lib/selection/Datalist.js",
    "content": "/**\n * selection.Datalist() creates &lt;datalist&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('datalist')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Datalist.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "Datalist",
    "memberof": "lib/selection/Datalist.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Datalist.js~Datalist",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Datalist.js",
    "importStyle": "Datalist",
    "description": "selection.Datalist() creates &lt;datalist&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 186,
    "kind": "file",
    "name": "lib/selection/Date.js",
    "content": "/**\n * selection.Date() creates &lt;input&gt; element of type date\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'date')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Date.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 187,
    "kind": "function",
    "name": "Date",
    "memberof": "lib/selection/Date.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Date.js~Date",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Date.js",
    "importStyle": "Date",
    "description": "selection.Date() creates &lt;input&gt; element of type date",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "lib/selection/DatetimeLocal.js",
    "content": "/**\n * selection.DatetimeLocal() creates &lt;input&gt; element of type datetime-local\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'datetime-local')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/DatetimeLocal.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "function",
    "name": "DatetimeLocal",
    "memberof": "lib/selection/DatetimeLocal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/DatetimeLocal.js~DatetimeLocal",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/DatetimeLocal.js",
    "importStyle": "DatetimeLocal",
    "description": "selection.DatetimeLocal() creates &lt;input&gt; element of type datetime-local",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 190,
    "kind": "file",
    "name": "lib/selection/Dd.js",
    "content": "/**\n * selection.Dd() creates &lt;dd&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('dd')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Dd.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 191,
    "kind": "function",
    "name": "Dd",
    "memberof": "lib/selection/Dd.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Dd.js~Dd",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Dd.js",
    "importStyle": "Dd",
    "description": "selection.Dd() creates &lt;dd&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 192,
    "kind": "file",
    "name": "lib/selection/Del.js",
    "content": "/**\n * selection.Del() creates &lt;del&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('del')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Del.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 193,
    "kind": "function",
    "name": "Del",
    "memberof": "lib/selection/Del.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Del.js~Del",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Del.js",
    "importStyle": "Del",
    "description": "selection.Del() creates &lt;del&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 194,
    "kind": "file",
    "name": "lib/selection/Details.js",
    "content": "/**\n * selection.Details() creates &lt;details&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('details')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Details.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 195,
    "kind": "function",
    "name": "Details",
    "memberof": "lib/selection/Details.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Details.js~Details",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Details.js",
    "importStyle": "Details",
    "description": "selection.Details() creates &lt;details&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 196,
    "kind": "file",
    "name": "lib/selection/Dfn.js",
    "content": "/**\n * selection.Dfn() creates &lt;dfn&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('dfn')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Dfn.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 197,
    "kind": "function",
    "name": "Dfn",
    "memberof": "lib/selection/Dfn.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Dfn.js~Dfn",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Dfn.js",
    "importStyle": "Dfn",
    "description": "selection.Dfn() creates &lt;dfn&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 198,
    "kind": "file",
    "name": "lib/selection/Disabled.js",
    "content": "/**\n * selection.Disabled() get or change disabled attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('disabled');\n  }\n  else\n  {\n    return this.attr('disabled', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Disabled.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 199,
    "kind": "function",
    "name": "Disabled",
    "memberof": "lib/selection/Disabled.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Disabled.js~Disabled",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Disabled.js",
    "importStyle": "Disabled",
    "description": "selection.Disabled() get or change disabled attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 200,
    "kind": "file",
    "name": "lib/selection/Display.js",
    "content": "/**\n * selection.Display() get or change display style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('display');\n  }\n  else\n  {\n    return this.style('display', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Display.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 201,
    "kind": "function",
    "name": "Display",
    "memberof": "lib/selection/Display.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Display.js~Display",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Display.js",
    "importStyle": "Display",
    "description": "selection.Display() get or change display style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 202,
    "kind": "file",
    "name": "lib/selection/Div.js",
    "content": "/**\n * selection.Div() creates &lt;div&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('div')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Div.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 203,
    "kind": "function",
    "name": "Div",
    "memberof": "lib/selection/Div.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Div.js~Div",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Div.js",
    "importStyle": "Div",
    "description": "selection.Div() creates &lt;div&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "lib/selection/Dl.js",
    "content": "/**\n * selection.Dl() creates &lt;dl&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('dl')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Dl.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "Dl",
    "memberof": "lib/selection/Dl.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Dl.js~Dl",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Dl.js",
    "importStyle": "Dl",
    "description": "selection.Dl() creates &lt;dl&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "lib/selection/Download.js",
    "content": "/**\n * selection.Download() get or change download attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('download');\n  }\n  else\n  {\n    return this.attr('download', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Download.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "Download",
    "memberof": "lib/selection/Download.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Download.js~Download",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Download.js",
    "importStyle": "Download",
    "description": "selection.Download() get or change download attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 208,
    "kind": "file",
    "name": "lib/selection/Draggable.js",
    "content": "/**\n * selection.Draggable() get or change draggable attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('draggable');\n  }\n  else\n  {\n    return this.attr('draggable', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Draggable.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 209,
    "kind": "function",
    "name": "Draggable",
    "memberof": "lib/selection/Draggable.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Draggable.js~Draggable",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Draggable.js",
    "importStyle": "Draggable",
    "description": "selection.Draggable() get or change draggable attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "lib/selection/Dropzone.js",
    "content": "/**\n * selection.Dropzone() get or change dropzone attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('dropzone');\n  }\n  else\n  {\n    return this.attr('dropzone', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Dropzone.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "function",
    "name": "Dropzone",
    "memberof": "lib/selection/Dropzone.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Dropzone.js~Dropzone",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Dropzone.js",
    "importStyle": "Dropzone",
    "description": "selection.Dropzone() get or change dropzone attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "lib/selection/Dt.js",
    "content": "/**\n * selection.Dt() creates &lt;dt&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('dt')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Dt.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "function",
    "name": "Dt",
    "memberof": "lib/selection/Dt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Dt.js~Dt",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Dt.js",
    "importStyle": "Dt",
    "description": "selection.Dt() creates &lt;dt&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 214,
    "kind": "file",
    "name": "lib/selection/Element.js",
    "content": "/**\n * selection.Element() creates &lt;element&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('element')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Element.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 215,
    "kind": "function",
    "name": "Element",
    "memberof": "lib/selection/Element.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Element.js~Element",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Element.js",
    "importStyle": "Element",
    "description": "selection.Element() creates &lt;element&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 216,
    "kind": "file",
    "name": "lib/selection/Em.js",
    "content": "/**\n * selection.Em() creates &lt;em&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('em')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Em.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 217,
    "kind": "function",
    "name": "Em",
    "memberof": "lib/selection/Em.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Em.js~Em",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Em.js",
    "importStyle": "Em",
    "description": "selection.Em() creates &lt;em&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 218,
    "kind": "file",
    "name": "lib/selection/Email.js",
    "content": "/**\n * selection.Email() creates &lt;input&gt; element of type email\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'email')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Email.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 219,
    "kind": "function",
    "name": "Email",
    "memberof": "lib/selection/Email.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Email.js~Email",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Email.js",
    "importStyle": "Email",
    "description": "selection.Email() creates &lt;input&gt; element of type email",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 220,
    "kind": "file",
    "name": "lib/selection/Embed.js",
    "content": "/**\n * selection.Embed() creates &lt;embed&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('embed')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Embed.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 221,
    "kind": "function",
    "name": "Embed",
    "memberof": "lib/selection/Embed.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Embed.js~Embed",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Embed.js",
    "importStyle": "Embed",
    "description": "selection.Embed() creates &lt;embed&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 222,
    "kind": "file",
    "name": "lib/selection/EmptyCells.js",
    "content": "/**\n * selection.EmptyCells() get or change empty-cells style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('empty-cells');\n  }\n  else\n  {\n    return this.style('empty-cells', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/EmptyCells.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 223,
    "kind": "function",
    "name": "EmptyCells",
    "memberof": "lib/selection/EmptyCells.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/EmptyCells.js~EmptyCells",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/EmptyCells.js",
    "importStyle": "EmptyCells",
    "description": "selection.EmptyCells() get or change empty-cells style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 224,
    "kind": "file",
    "name": "lib/selection/Enctype.js",
    "content": "/**\n * selection.Enctype() get or change enctype attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('enctype');\n  }\n  else\n  {\n    return this.attr('enctype', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Enctype.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "Enctype",
    "memberof": "lib/selection/Enctype.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Enctype.js~Enctype",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Enctype.js",
    "importStyle": "Enctype",
    "description": "selection.Enctype() get or change enctype attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 226,
    "kind": "file",
    "name": "lib/selection/Fieldset.js",
    "content": "/**\n * selection.Fieldset() creates &lt;fieldset&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('fieldset')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Fieldset.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 227,
    "kind": "function",
    "name": "Fieldset",
    "memberof": "lib/selection/Fieldset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Fieldset.js~Fieldset",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Fieldset.js",
    "importStyle": "Fieldset",
    "description": "selection.Fieldset() creates &lt;fieldset&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 228,
    "kind": "file",
    "name": "lib/selection/Figcaption.js",
    "content": "/**\n * selection.Figcaption() creates &lt;figcaption&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('figcaption')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Figcaption.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 229,
    "kind": "function",
    "name": "Figcaption",
    "memberof": "lib/selection/Figcaption.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Figcaption.js~Figcaption",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Figcaption.js",
    "importStyle": "Figcaption",
    "description": "selection.Figcaption() creates &lt;figcaption&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 230,
    "kind": "file",
    "name": "lib/selection/Figure.js",
    "content": "/**\n * selection.Figure() creates &lt;figure&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('figure')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Figure.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 231,
    "kind": "function",
    "name": "Figure",
    "memberof": "lib/selection/Figure.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Figure.js~Figure",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Figure.js",
    "importStyle": "Figure",
    "description": "selection.Figure() creates &lt;figure&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 232,
    "kind": "file",
    "name": "lib/selection/File.js",
    "content": "/**\n * selection.File() creates &lt;input&gt; element of type file\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'file')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/File.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 233,
    "kind": "function",
    "name": "File",
    "memberof": "lib/selection/File.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/File.js~File",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/File.js",
    "importStyle": "File",
    "description": "selection.File() creates &lt;input&gt; element of type file",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 234,
    "kind": "file",
    "name": "lib/selection/Flex.js",
    "content": "/**\n * selection.Flex() get or change flex style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('flex');\n  }\n  else\n  {\n    return this.style('flex', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Flex.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "function",
    "name": "Flex",
    "memberof": "lib/selection/Flex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Flex.js~Flex",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Flex.js",
    "importStyle": "Flex",
    "description": "selection.Flex() get or change flex style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 236,
    "kind": "file",
    "name": "lib/selection/FlexBasis.js",
    "content": "/**\n * selection.FlexBasis() get or change flex-basis style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('flex-basis');\n  }\n  else\n  {\n    return this.style('flex-basis', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FlexBasis.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 237,
    "kind": "function",
    "name": "FlexBasis",
    "memberof": "lib/selection/FlexBasis.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FlexBasis.js~FlexBasis",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FlexBasis.js",
    "importStyle": "FlexBasis",
    "description": "selection.FlexBasis() get or change flex-basis style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 238,
    "kind": "file",
    "name": "lib/selection/FlexDirection.js",
    "content": "/**\n * selection.FlexDirection() get or change flex-direction style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('flex-direction');\n  }\n  else\n  {\n    return this.style('flex-direction', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FlexDirection.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 239,
    "kind": "function",
    "name": "FlexDirection",
    "memberof": "lib/selection/FlexDirection.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FlexDirection.js~FlexDirection",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FlexDirection.js",
    "importStyle": "FlexDirection",
    "description": "selection.FlexDirection() get or change flex-direction style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 240,
    "kind": "file",
    "name": "lib/selection/FlexFlow.js",
    "content": "/**\n * selection.FlexFlow() get or change flex-flow style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('flex-flow');\n  }\n  else\n  {\n    return this.style('flex-flow', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FlexFlow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 241,
    "kind": "function",
    "name": "FlexFlow",
    "memberof": "lib/selection/FlexFlow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FlexFlow.js~FlexFlow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FlexFlow.js",
    "importStyle": "FlexFlow",
    "description": "selection.FlexFlow() get or change flex-flow style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 242,
    "kind": "file",
    "name": "lib/selection/FlexGrow.js",
    "content": "/**\n * selection.FlexGrow() get or change flex-grow style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('flex-grow');\n  }\n  else\n  {\n    return this.style('flex-grow', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FlexGrow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "FlexGrow",
    "memberof": "lib/selection/FlexGrow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FlexGrow.js~FlexGrow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FlexGrow.js",
    "importStyle": "FlexGrow",
    "description": "selection.FlexGrow() get or change flex-grow style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 244,
    "kind": "file",
    "name": "lib/selection/FlexShrink.js",
    "content": "/**\n * selection.FlexShrink() get or change flex-shrink style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('flex-shrink');\n  }\n  else\n  {\n    return this.style('flex-shrink', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FlexShrink.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "FlexShrink",
    "memberof": "lib/selection/FlexShrink.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FlexShrink.js~FlexShrink",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FlexShrink.js",
    "importStyle": "FlexShrink",
    "description": "selection.FlexShrink() get or change flex-shrink style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 246,
    "kind": "file",
    "name": "lib/selection/FlexWrap.js",
    "content": "/**\n * selection.FlexWrap() get or change flex-wrap style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('flex-wrap');\n  }\n  else\n  {\n    return this.style('flex-wrap', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FlexWrap.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "FlexWrap",
    "memberof": "lib/selection/FlexWrap.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FlexWrap.js~FlexWrap",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FlexWrap.js",
    "importStyle": "FlexWrap",
    "description": "selection.FlexWrap() get or change flex-wrap style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "lib/selection/Float.js",
    "content": "/**\n * selection.Float() get or change float style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('float');\n  }\n  else\n  {\n    return this.style('float', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Float.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "Float",
    "memberof": "lib/selection/Float.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Float.js~Float",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Float.js",
    "importStyle": "Float",
    "description": "selection.Float() get or change float style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "lib/selection/Font.js",
    "content": "/**\n * selection.Font() get or change font style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font');\n  }\n  else\n  {\n    return this.style('font', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Font.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "function",
    "name": "Font",
    "memberof": "lib/selection/Font.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Font.js~Font",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Font.js",
    "importStyle": "Font",
    "description": "selection.Font() get or change font style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 252,
    "kind": "file",
    "name": "lib/selection/FontFamily.js",
    "content": "/**\n * selection.FontFamily() get or change font-family style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-family');\n  }\n  else\n  {\n    return this.style('font-family', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontFamily.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 253,
    "kind": "function",
    "name": "FontFamily",
    "memberof": "lib/selection/FontFamily.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontFamily.js~FontFamily",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontFamily.js",
    "importStyle": "FontFamily",
    "description": "selection.FontFamily() get or change font-family style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 254,
    "kind": "file",
    "name": "lib/selection/FontFeatureSettings.js",
    "content": "/**\n * selection.FontFeatureSettings() get or change font-feature-settings style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-feature-settings');\n  }\n  else\n  {\n    return this.style('font-feature-settings', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontFeatureSettings.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 255,
    "kind": "function",
    "name": "FontFeatureSettings",
    "memberof": "lib/selection/FontFeatureSettings.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontFeatureSettings.js~FontFeatureSettings",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontFeatureSettings.js",
    "importStyle": "FontFeatureSettings",
    "description": "selection.FontFeatureSettings() get or change font-feature-settings style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 256,
    "kind": "file",
    "name": "lib/selection/FontKerning.js",
    "content": "/**\n * selection.FontKerning() get or change font-kerning style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-kerning');\n  }\n  else\n  {\n    return this.style('font-kerning', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontKerning.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 257,
    "kind": "function",
    "name": "FontKerning",
    "memberof": "lib/selection/FontKerning.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontKerning.js~FontKerning",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontKerning.js",
    "importStyle": "FontKerning",
    "description": "selection.FontKerning() get or change font-kerning style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 258,
    "kind": "file",
    "name": "lib/selection/FontLanguageOverride.js",
    "content": "/**\n * selection.FontLanguageOverride() get or change font-language-override style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-language-override');\n  }\n  else\n  {\n    return this.style('font-language-override', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontLanguageOverride.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 259,
    "kind": "function",
    "name": "FontLanguageOverride",
    "memberof": "lib/selection/FontLanguageOverride.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontLanguageOverride.js~FontLanguageOverride",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontLanguageOverride.js",
    "importStyle": "FontLanguageOverride",
    "description": "selection.FontLanguageOverride() get or change font-language-override style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 260,
    "kind": "file",
    "name": "lib/selection/FontSize.js",
    "content": "/**\n * selection.FontSize() get or change font-size style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-size');\n  }\n  else\n  {\n    return this.style('font-size', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontSize.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "function",
    "name": "FontSize",
    "memberof": "lib/selection/FontSize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontSize.js~FontSize",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontSize.js",
    "importStyle": "FontSize",
    "description": "selection.FontSize() get or change font-size style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 262,
    "kind": "file",
    "name": "lib/selection/FontSizeAdjust.js",
    "content": "/**\n * selection.FontSizeAdjust() get or change font-size-adjust style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-size-adjust');\n  }\n  else\n  {\n    return this.style('font-size-adjust', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontSizeAdjust.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 263,
    "kind": "function",
    "name": "FontSizeAdjust",
    "memberof": "lib/selection/FontSizeAdjust.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontSizeAdjust.js~FontSizeAdjust",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontSizeAdjust.js",
    "importStyle": "FontSizeAdjust",
    "description": "selection.FontSizeAdjust() get or change font-size-adjust style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 264,
    "kind": "file",
    "name": "lib/selection/FontStretch.js",
    "content": "/**\n * selection.FontStretch() get or change font-stretch style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-stretch');\n  }\n  else\n  {\n    return this.style('font-stretch', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontStretch.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 265,
    "kind": "function",
    "name": "FontStretch",
    "memberof": "lib/selection/FontStretch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontStretch.js~FontStretch",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontStretch.js",
    "importStyle": "FontStretch",
    "description": "selection.FontStretch() get or change font-stretch style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 266,
    "kind": "file",
    "name": "lib/selection/FontStyle.js",
    "content": "/**\n * selection.FontStyle() get or change font-style style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-style');\n  }\n  else\n  {\n    return this.style('font-style', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontStyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 267,
    "kind": "function",
    "name": "FontStyle",
    "memberof": "lib/selection/FontStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontStyle.js~FontStyle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontStyle.js",
    "importStyle": "FontStyle",
    "description": "selection.FontStyle() get or change font-style style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 268,
    "kind": "file",
    "name": "lib/selection/FontSynthesis.js",
    "content": "/**\n * selection.FontSynthesis() get or change font-synthesis style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-synthesis');\n  }\n  else\n  {\n    return this.style('font-synthesis', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontSynthesis.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 269,
    "kind": "function",
    "name": "FontSynthesis",
    "memberof": "lib/selection/FontSynthesis.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontSynthesis.js~FontSynthesis",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontSynthesis.js",
    "importStyle": "FontSynthesis",
    "description": "selection.FontSynthesis() get or change font-synthesis style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 270,
    "kind": "file",
    "name": "lib/selection/FontVariant.js",
    "content": "/**\n * selection.FontVariant() get or change font-variant style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-variant');\n  }\n  else\n  {\n    return this.style('font-variant', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontVariant.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 271,
    "kind": "function",
    "name": "FontVariant",
    "memberof": "lib/selection/FontVariant.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontVariant.js~FontVariant",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontVariant.js",
    "importStyle": "FontVariant",
    "description": "selection.FontVariant() get or change font-variant style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 272,
    "kind": "file",
    "name": "lib/selection/FontVariantAlternates.js",
    "content": "/**\n * selection.FontVariantAlternates() get or change font-variant-alternates style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-variant-alternates');\n  }\n  else\n  {\n    return this.style('font-variant-alternates', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontVariantAlternates.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 273,
    "kind": "function",
    "name": "FontVariantAlternates",
    "memberof": "lib/selection/FontVariantAlternates.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontVariantAlternates.js~FontVariantAlternates",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontVariantAlternates.js",
    "importStyle": "FontVariantAlternates",
    "description": "selection.FontVariantAlternates() get or change font-variant-alternates style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 274,
    "kind": "file",
    "name": "lib/selection/FontVariantCaps.js",
    "content": "/**\n * selection.FontVariantCaps() get or change font-variant-caps style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-variant-caps');\n  }\n  else\n  {\n    return this.style('font-variant-caps', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontVariantCaps.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 275,
    "kind": "function",
    "name": "FontVariantCaps",
    "memberof": "lib/selection/FontVariantCaps.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontVariantCaps.js~FontVariantCaps",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontVariantCaps.js",
    "importStyle": "FontVariantCaps",
    "description": "selection.FontVariantCaps() get or change font-variant-caps style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 276,
    "kind": "file",
    "name": "lib/selection/FontVariantEastAsian.js",
    "content": "/**\n * selection.FontVariantEastAsian() get or change font-variant-east-asian style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-variant-east-asian');\n  }\n  else\n  {\n    return this.style('font-variant-east-asian', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontVariantEastAsian.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 277,
    "kind": "function",
    "name": "FontVariantEastAsian",
    "memberof": "lib/selection/FontVariantEastAsian.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontVariantEastAsian.js~FontVariantEastAsian",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontVariantEastAsian.js",
    "importStyle": "FontVariantEastAsian",
    "description": "selection.FontVariantEastAsian() get or change font-variant-east-asian style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 278,
    "kind": "file",
    "name": "lib/selection/FontVariantLigatures.js",
    "content": "/**\n * selection.FontVariantLigatures() get or change font-variant-ligatures style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-variant-ligatures');\n  }\n  else\n  {\n    return this.style('font-variant-ligatures', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontVariantLigatures.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "FontVariantLigatures",
    "memberof": "lib/selection/FontVariantLigatures.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontVariantLigatures.js~FontVariantLigatures",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontVariantLigatures.js",
    "importStyle": "FontVariantLigatures",
    "description": "selection.FontVariantLigatures() get or change font-variant-ligatures style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 280,
    "kind": "file",
    "name": "lib/selection/FontVariantNumeric.js",
    "content": "/**\n * selection.FontVariantNumeric() get or change font-variant-numeric style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-variant-numeric');\n  }\n  else\n  {\n    return this.style('font-variant-numeric', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontVariantNumeric.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "FontVariantNumeric",
    "memberof": "lib/selection/FontVariantNumeric.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontVariantNumeric.js~FontVariantNumeric",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontVariantNumeric.js",
    "importStyle": "FontVariantNumeric",
    "description": "selection.FontVariantNumeric() get or change font-variant-numeric style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 282,
    "kind": "file",
    "name": "lib/selection/FontVariantPosition.js",
    "content": "/**\n * selection.FontVariantPosition() get or change font-variant-position style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-variant-position');\n  }\n  else\n  {\n    return this.style('font-variant-position', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontVariantPosition.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "FontVariantPosition",
    "memberof": "lib/selection/FontVariantPosition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontVariantPosition.js~FontVariantPosition",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontVariantPosition.js",
    "importStyle": "FontVariantPosition",
    "description": "selection.FontVariantPosition() get or change font-variant-position style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 284,
    "kind": "file",
    "name": "lib/selection/FontWeight.js",
    "content": "/**\n * selection.FontWeight() get or change font-weight style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('font-weight');\n  }\n  else\n  {\n    return this.style('font-weight', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/FontWeight.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 285,
    "kind": "function",
    "name": "FontWeight",
    "memberof": "lib/selection/FontWeight.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/FontWeight.js~FontWeight",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/FontWeight.js",
    "importStyle": "FontWeight",
    "description": "selection.FontWeight() get or change font-weight style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 286,
    "kind": "file",
    "name": "lib/selection/Footer.js",
    "content": "/**\n * selection.Footer() creates &lt;footer&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('footer')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Footer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "Footer",
    "memberof": "lib/selection/Footer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Footer.js~Footer",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Footer.js",
    "importStyle": "Footer",
    "description": "selection.Footer() creates &lt;footer&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "lib/selection/For.js",
    "content": "/**\n * selection.For() get or change for attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('for');\n  }\n  else\n  {\n    return this.attr('for', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/For.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "For",
    "memberof": "lib/selection/For.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/For.js~For",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/For.js",
    "importStyle": "For",
    "description": "selection.For() get or change for attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "lib/selection/Form.js",
    "content": "/**\n * selection.Form() creates &lt;form&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('form')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Form.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "Form",
    "memberof": "lib/selection/Form.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Form.js~Form",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Form.js",
    "importStyle": "Form",
    "description": "selection.Form() creates &lt;form&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 292,
    "kind": "file",
    "name": "lib/selection/Formaction.js",
    "content": "/**\n * selection.Formaction() get or change formaction attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('formaction');\n  }\n  else\n  {\n    return this.attr('formaction', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Formaction.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 293,
    "kind": "function",
    "name": "Formaction",
    "memberof": "lib/selection/Formaction.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Formaction.js~Formaction",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Formaction.js",
    "importStyle": "Formaction",
    "description": "selection.Formaction() get or change formaction attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 294,
    "kind": "file",
    "name": "lib/selection/H1.js",
    "content": "/**\n * selection.H1() creates &lt;h1&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('h1')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/H1.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 295,
    "kind": "function",
    "name": "H1",
    "memberof": "lib/selection/H1.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/H1.js~H1",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/H1.js",
    "importStyle": "H1",
    "description": "selection.H1() creates &lt;h1&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 296,
    "kind": "file",
    "name": "lib/selection/H2.js",
    "content": "/**\n * selection.H2() creates &lt;h2&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('h2')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/H2.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 297,
    "kind": "function",
    "name": "H2",
    "memberof": "lib/selection/H2.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/H2.js~H2",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/H2.js",
    "importStyle": "H2",
    "description": "selection.H2() creates &lt;h2&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 298,
    "kind": "file",
    "name": "lib/selection/H3.js",
    "content": "/**\n * selection.H3() creates &lt;h3&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('h3')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/H3.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 299,
    "kind": "function",
    "name": "H3",
    "memberof": "lib/selection/H3.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/H3.js~H3",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/H3.js",
    "importStyle": "H3",
    "description": "selection.H3() creates &lt;h3&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 300,
    "kind": "file",
    "name": "lib/selection/H4.js",
    "content": "/**\n * selection.H4() creates &lt;h4&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('h4')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/H4.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "H4",
    "memberof": "lib/selection/H4.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/H4.js~H4",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/H4.js",
    "importStyle": "H4",
    "description": "selection.H4() creates &lt;h4&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "lib/selection/H5.js",
    "content": "/**\n * selection.H5() creates &lt;h5&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('h5')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/H5.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "H5",
    "memberof": "lib/selection/H5.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/H5.js~H5",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/H5.js",
    "importStyle": "H5",
    "description": "selection.H5() creates &lt;h5&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 304,
    "kind": "file",
    "name": "lib/selection/H6.js",
    "content": "/**\n * selection.H6() creates &lt;h6&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('h6')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/H6.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "H6",
    "memberof": "lib/selection/H6.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/H6.js~H6",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/H6.js",
    "importStyle": "H6",
    "description": "selection.H6() creates &lt;h6&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "lib/selection/HangingPunctuation.js",
    "content": "/**\n * selection.HangingPunctuation() get or change hanging-punctuation style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('hanging-punctuation');\n  }\n  else\n  {\n    return this.style('hanging-punctuation', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/HangingPunctuation.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "function",
    "name": "HangingPunctuation",
    "memberof": "lib/selection/HangingPunctuation.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/HangingPunctuation.js~HangingPunctuation",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/HangingPunctuation.js",
    "importStyle": "HangingPunctuation",
    "description": "selection.HangingPunctuation() get or change hanging-punctuation style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 308,
    "kind": "file",
    "name": "lib/selection/HashStateRouter.js",
    "content": "/**\n * selection.HashStateRouter() Simple router that relies on window hash value.\n *\n * TODO: Document in more detail\n *\n * @param {object} [context={}] configuration\n * @param {boolean} [dontRun=false] dont start\n * @return updated context with additional methods\n */\nexport default function (context, dontRun)\n{\n  context.State = function (param, value)\n  {\n    if (arguments.length > 1)\n    {\n      if (!value)\n      {\n        delete context.params[param];\n      }\n      else\n      {\n        context.params[param] = value;\n      }\n      history.pushState({}, document.title, context.Link(context.params));\n    }\n    return context.params[param] || '';\n  };\n\n  context.StateChangeLink = function (param, value)\n  {\n    var params = {};\n    for (var field in context.params)\n    {\n      params[field] = context.params[field];\n    }\n    if (typeof param !== 'string')\n    {\n      for (var field in param)\n      {\n        params[field] = param[field];\n      }\n    }\n    else\n    {\n      params[param] = value;\n    }\n    return context.Link(params)\n  };\n\n  context.Link = function (params)\n  {\n    var output = '#';\n    for (var param in params)\n    {\n      if (param && params[param] !== undefined && params[param] !== '')\n      {\n        output += param + '=' + params[param] + '&';\n      }\n    }\n    output = output.replace(/[?&]$/, '');\n    return output;\n  };\n\n  context.HashParams = function (input)\n  {\n    var params = {\n      page: ''\n    };\n    input.substr(1)\n      .split('&')\n      .map(function (x)\n      {\n        return x.split('=', 2);\n      })\n      .forEach(function (fragment)\n      {\n        params[fragment[0]] = fragment[1] || true;\n      });\n    return params;\n  };\n\n  context.SearchParams = function (input)\n  {\n    input.substr(1)\n      .split('&')\n      .map(function (x)\n      {\n        return x.split('=', 2);\n      })\n      .forEach(function (fragment)\n      {\n        params[fragment[0]] = fragment[1] || true;\n      });\n  };\n\n  context.Reload = function ()\n  {\n    if (window.location.search)\n    {\n      window.location.hash = context.Link(context.SearchParams(window.location.search));\n      window.location.search = '';\n      return;\n    }\n    else\n    {\n      context.params = context.HashParams(window.location.hash);\n    }\n    (context.pages[context.params.page || ''] || context.pages['404'])(context);\n  };\n\n  context.params = context.params || {};\n  if (!dontRun)\n  {\n    window.onhashchange = function ()\n    {\n      context.Reload();\n    };\n\n    context.Reload();\n  }\n  return context;\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/HashStateRouter.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 309,
    "kind": "function",
    "name": "HashStateRouter",
    "memberof": "lib/selection/HashStateRouter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/HashStateRouter.js~HashStateRouter",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/HashStateRouter.js",
    "importStyle": "HashStateRouter",
    "description": "selection.HashStateRouter() Simple router that relies on window hash value.\n\nTODO: Document in more detail",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "context",
        "description": "configuration"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "dontRun",
        "description": "dont start"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "updated context with additional methods"
    }
  },
  {
    "__docId__": 310,
    "kind": "file",
    "name": "lib/selection/Header.js",
    "content": "/**\n * selection.Header() creates &lt;header&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('header')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Header.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 311,
    "kind": "function",
    "name": "Header",
    "memberof": "lib/selection/Header.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Header.js~Header",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Header.js",
    "importStyle": "Header",
    "description": "selection.Header() creates &lt;header&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 312,
    "kind": "file",
    "name": "lib/selection/Height.js",
    "content": "/**\n * selection.Height() get or change height style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('height');\n  }\n  else\n  {\n    return this.style('height', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Height.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 313,
    "kind": "function",
    "name": "Height",
    "memberof": "lib/selection/Height.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Height.js~Height",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Height.js",
    "importStyle": "Height",
    "description": "selection.Height() get or change height style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 314,
    "kind": "file",
    "name": "lib/selection/Hidden.js",
    "content": "/**\n * selection.Hidden() creates &lt;input&gt; element of type hidden\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'hidden')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Hidden.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 315,
    "kind": "function",
    "name": "Hidden",
    "memberof": "lib/selection/Hidden.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Hidden.js~Hidden",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Hidden.js",
    "importStyle": "Hidden",
    "description": "selection.Hidden() creates &lt;input&gt; element of type hidden",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 316,
    "kind": "file",
    "name": "lib/selection/Hr.js",
    "content": "/**\n * selection.Hr() creates &lt;hr&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('hr')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Hr.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 317,
    "kind": "function",
    "name": "Hr",
    "memberof": "lib/selection/Hr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Hr.js~Hr",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Hr.js",
    "importStyle": "Hr",
    "description": "selection.Hr() creates &lt;hr&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 318,
    "kind": "file",
    "name": "lib/selection/Href.js",
    "content": "/**\n * selection.Href() get or change href attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('href');\n  }\n  else\n  {\n    return this.attr('href', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Href.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 319,
    "kind": "function",
    "name": "Href",
    "memberof": "lib/selection/Href.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Href.js~Href",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Href.js",
    "importStyle": "Href",
    "description": "selection.Href() get or change href attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 320,
    "kind": "file",
    "name": "lib/selection/Hyphens.js",
    "content": "/**\n * selection.Hyphens() get or change hyphens style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('hyphens');\n  }\n  else\n  {\n    return this.style('hyphens', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Hyphens.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 321,
    "kind": "function",
    "name": "Hyphens",
    "memberof": "lib/selection/Hyphens.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Hyphens.js~Hyphens",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Hyphens.js",
    "importStyle": "Hyphens",
    "description": "selection.Hyphens() get or change hyphens style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 322,
    "kind": "file",
    "name": "lib/selection/I.js",
    "content": "/**\n * selection.I() creates &lt;i&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('i')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/I.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 323,
    "kind": "function",
    "name": "I",
    "memberof": "lib/selection/I.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/I.js~I",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/I.js",
    "importStyle": "I",
    "description": "selection.I() creates &lt;i&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 324,
    "kind": "file",
    "name": "lib/selection/Id.js",
    "content": "/**\n * selection.Id() get or change id attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('id');\n  }\n  else\n  {\n    return this.attr('id', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Id.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 325,
    "kind": "function",
    "name": "Id",
    "memberof": "lib/selection/Id.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Id.js~Id",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Id.js",
    "importStyle": "Id",
    "description": "selection.Id() get or change id attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 326,
    "kind": "file",
    "name": "lib/selection/Iframe.js",
    "content": "/**\n * selection.Iframe() creates &lt;iframe&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('iframe')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Iframe.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 327,
    "kind": "function",
    "name": "Iframe",
    "memberof": "lib/selection/Iframe.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Iframe.js~Iframe",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Iframe.js",
    "importStyle": "Iframe",
    "description": "selection.Iframe() creates &lt;iframe&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 328,
    "kind": "file",
    "name": "lib/selection/Image.js",
    "content": "/**\n * selection.Image() creates &lt;input&gt; element of type image\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'image')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Image.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 329,
    "kind": "function",
    "name": "Image",
    "memberof": "lib/selection/Image.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Image.js~Image",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Image.js",
    "importStyle": "Image",
    "description": "selection.Image() creates &lt;input&gt; element of type image",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 330,
    "kind": "file",
    "name": "lib/selection/ImeMode.js",
    "content": "/**\n * selection.ImeMode() get or change ime-mode style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('ime-mode');\n  }\n  else\n  {\n    return this.style('ime-mode', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/ImeMode.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 331,
    "kind": "function",
    "name": "ImeMode",
    "memberof": "lib/selection/ImeMode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/ImeMode.js~ImeMode",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/ImeMode.js",
    "importStyle": "ImeMode",
    "description": "selection.ImeMode() get or change ime-mode style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 332,
    "kind": "file",
    "name": "lib/selection/Img.js",
    "content": "/**\n * selection.Img() creates &lt;img&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('img')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Img.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 333,
    "kind": "function",
    "name": "Img",
    "memberof": "lib/selection/Img.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Img.js~Img",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Img.js",
    "importStyle": "Img",
    "description": "selection.Img() creates &lt;img&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 334,
    "kind": "file",
    "name": "lib/selection/Input.js",
    "content": "/**\n * selection.Input() creates &lt;input&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Input.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 335,
    "kind": "function",
    "name": "Input",
    "memberof": "lib/selection/Input.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Input.js~Input",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Input.js",
    "importStyle": "Input",
    "description": "selection.Input() creates &lt;input&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 336,
    "kind": "file",
    "name": "lib/selection/InputCheckbox.js",
    "content": "/**\n * selection.InputCheckbox() creates &lt;input&gt; element of type checkbox\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'checkbox')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputCheckbox.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 337,
    "kind": "function",
    "name": "InputCheckbox",
    "memberof": "lib/selection/InputCheckbox.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputCheckbox.js~InputCheckbox",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputCheckbox.js",
    "importStyle": "InputCheckbox",
    "description": "selection.InputCheckbox() creates &lt;input&gt; element of type checkbox",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 338,
    "kind": "file",
    "name": "lib/selection/InputColor.js",
    "content": "/**\n * selection.InputColor() creates &lt;input&gt; element of type color\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'color')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 339,
    "kind": "function",
    "name": "InputColor",
    "memberof": "lib/selection/InputColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputColor.js~InputColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputColor.js",
    "importStyle": "InputColor",
    "description": "selection.InputColor() creates &lt;input&gt; element of type color",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 340,
    "kind": "file",
    "name": "lib/selection/InputDate.js",
    "content": "/**\n * selection.InputDate() creates &lt;input&gt; element of type date\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'date')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputDate.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 341,
    "kind": "function",
    "name": "InputDate",
    "memberof": "lib/selection/InputDate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputDate.js~InputDate",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputDate.js",
    "importStyle": "InputDate",
    "description": "selection.InputDate() creates &lt;input&gt; element of type date",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 342,
    "kind": "file",
    "name": "lib/selection/InputDatetimeLocal.js",
    "content": "/**\n * selection.InputDatetimeLocal() creates &lt;input&gt; element of type datetime-local\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'datetime-local')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputDatetimeLocal.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 343,
    "kind": "function",
    "name": "InputDatetimeLocal",
    "memberof": "lib/selection/InputDatetimeLocal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputDatetimeLocal.js~InputDatetimeLocal",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputDatetimeLocal.js",
    "importStyle": "InputDatetimeLocal",
    "description": "selection.InputDatetimeLocal() creates &lt;input&gt; element of type datetime-local",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 344,
    "kind": "file",
    "name": "lib/selection/InputEmail.js",
    "content": "/**\n * selection.InputEmail() creates &lt;input&gt; element of type email\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'email')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputEmail.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 345,
    "kind": "function",
    "name": "InputEmail",
    "memberof": "lib/selection/InputEmail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputEmail.js~InputEmail",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputEmail.js",
    "importStyle": "InputEmail",
    "description": "selection.InputEmail() creates &lt;input&gt; element of type email",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 346,
    "kind": "file",
    "name": "lib/selection/InputFile.js",
    "content": "/**\n * selection.InputFile() creates &lt;input&gt; element of type file\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'file')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputFile.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 347,
    "kind": "function",
    "name": "InputFile",
    "memberof": "lib/selection/InputFile.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputFile.js~InputFile",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputFile.js",
    "importStyle": "InputFile",
    "description": "selection.InputFile() creates &lt;input&gt; element of type file",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 348,
    "kind": "file",
    "name": "lib/selection/InputHidden.js",
    "content": "/**\n * selection.InputHidden() creates &lt;input&gt; element of type hidden\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'hidden')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputHidden.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 349,
    "kind": "function",
    "name": "InputHidden",
    "memberof": "lib/selection/InputHidden.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputHidden.js~InputHidden",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputHidden.js",
    "importStyle": "InputHidden",
    "description": "selection.InputHidden() creates &lt;input&gt; element of type hidden",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 350,
    "kind": "file",
    "name": "lib/selection/InputImage.js",
    "content": "/**\n * selection.InputImage() creates &lt;input&gt; element of type image\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'image')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputImage.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 351,
    "kind": "function",
    "name": "InputImage",
    "memberof": "lib/selection/InputImage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputImage.js~InputImage",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputImage.js",
    "importStyle": "InputImage",
    "description": "selection.InputImage() creates &lt;input&gt; element of type image",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 352,
    "kind": "file",
    "name": "lib/selection/InputMonth.js",
    "content": "/**\n * selection.InputMonth() creates &lt;input&gt; element of type month\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'month')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputMonth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 353,
    "kind": "function",
    "name": "InputMonth",
    "memberof": "lib/selection/InputMonth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputMonth.js~InputMonth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputMonth.js",
    "importStyle": "InputMonth",
    "description": "selection.InputMonth() creates &lt;input&gt; element of type month",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 354,
    "kind": "file",
    "name": "lib/selection/InputNumber.js",
    "content": "/**\n * selection.InputNumber() creates &lt;input&gt; element of type number\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'number')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputNumber.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "InputNumber",
    "memberof": "lib/selection/InputNumber.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputNumber.js~InputNumber",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputNumber.js",
    "importStyle": "InputNumber",
    "description": "selection.InputNumber() creates &lt;input&gt; element of type number",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 356,
    "kind": "file",
    "name": "lib/selection/InputPassword.js",
    "content": "/**\n * selection.InputPassword() creates &lt;input&gt; element of type password\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'password')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputPassword.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 357,
    "kind": "function",
    "name": "InputPassword",
    "memberof": "lib/selection/InputPassword.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputPassword.js~InputPassword",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputPassword.js",
    "importStyle": "InputPassword",
    "description": "selection.InputPassword() creates &lt;input&gt; element of type password",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 358,
    "kind": "file",
    "name": "lib/selection/InputRadio.js",
    "content": "/**\n * selection.InputRadio() creates &lt;input&gt; element of type radio\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'radio')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputRadio.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 359,
    "kind": "function",
    "name": "InputRadio",
    "memberof": "lib/selection/InputRadio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputRadio.js~InputRadio",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputRadio.js",
    "importStyle": "InputRadio",
    "description": "selection.InputRadio() creates &lt;input&gt; element of type radio",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 360,
    "kind": "file",
    "name": "lib/selection/InputRange.js",
    "content": "/**\n * selection.InputRange() creates &lt;input&gt; element of type range\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'range')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputRange.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 361,
    "kind": "function",
    "name": "InputRange",
    "memberof": "lib/selection/InputRange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputRange.js~InputRange",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputRange.js",
    "importStyle": "InputRange",
    "description": "selection.InputRange() creates &lt;input&gt; element of type range",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 362,
    "kind": "file",
    "name": "lib/selection/InputReset.js",
    "content": "/**\n * selection.InputReset() creates &lt;input&gt; element of type reset\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'reset')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputReset.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 363,
    "kind": "function",
    "name": "InputReset",
    "memberof": "lib/selection/InputReset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputReset.js~InputReset",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputReset.js",
    "importStyle": "InputReset",
    "description": "selection.InputReset() creates &lt;input&gt; element of type reset",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 364,
    "kind": "file",
    "name": "lib/selection/InputSearch.js",
    "content": "/**\n * selection.InputSearch() creates &lt;input&gt; element of type search\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'search')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputSearch.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 365,
    "kind": "function",
    "name": "InputSearch",
    "memberof": "lib/selection/InputSearch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputSearch.js~InputSearch",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputSearch.js",
    "importStyle": "InputSearch",
    "description": "selection.InputSearch() creates &lt;input&gt; element of type search",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 366,
    "kind": "file",
    "name": "lib/selection/InputSubmit.js",
    "content": "/**\n * selection.InputSubmit() creates &lt;input&gt; element of type submit\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'submit')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputSubmit.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 367,
    "kind": "function",
    "name": "InputSubmit",
    "memberof": "lib/selection/InputSubmit.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputSubmit.js~InputSubmit",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputSubmit.js",
    "importStyle": "InputSubmit",
    "description": "selection.InputSubmit() creates &lt;input&gt; element of type submit",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 368,
    "kind": "file",
    "name": "lib/selection/InputTel.js",
    "content": "/**\n * selection.InputTel() creates &lt;input&gt; element of type tel\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'tel')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputTel.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 369,
    "kind": "function",
    "name": "InputTel",
    "memberof": "lib/selection/InputTel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputTel.js~InputTel",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputTel.js",
    "importStyle": "InputTel",
    "description": "selection.InputTel() creates &lt;input&gt; element of type tel",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 370,
    "kind": "file",
    "name": "lib/selection/InputText.js",
    "content": "/**\n * selection.InputText() creates &lt;input&gt; element of type text\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'text')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputText.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 371,
    "kind": "function",
    "name": "InputText",
    "memberof": "lib/selection/InputText.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputText.js~InputText",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputText.js",
    "importStyle": "InputText",
    "description": "selection.InputText() creates &lt;input&gt; element of type text",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 372,
    "kind": "file",
    "name": "lib/selection/InputTime.js",
    "content": "/**\n * selection.InputTime() creates &lt;input&gt; element of type time\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'time')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputTime.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 373,
    "kind": "function",
    "name": "InputTime",
    "memberof": "lib/selection/InputTime.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputTime.js~InputTime",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputTime.js",
    "importStyle": "InputTime",
    "description": "selection.InputTime() creates &lt;input&gt; element of type time",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 374,
    "kind": "file",
    "name": "lib/selection/InputUrl.js",
    "content": "/**\n * selection.InputUrl() creates &lt;input&gt; element of type url\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'url')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputUrl.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 375,
    "kind": "function",
    "name": "InputUrl",
    "memberof": "lib/selection/InputUrl.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputUrl.js~InputUrl",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputUrl.js",
    "importStyle": "InputUrl",
    "description": "selection.InputUrl() creates &lt;input&gt; element of type url",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 376,
    "kind": "file",
    "name": "lib/selection/InputWeek.js",
    "content": "/**\n * selection.InputWeek() creates &lt;input&gt; element of type week\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'week')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/InputWeek.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 377,
    "kind": "function",
    "name": "InputWeek",
    "memberof": "lib/selection/InputWeek.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/InputWeek.js~InputWeek",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/InputWeek.js",
    "importStyle": "InputWeek",
    "description": "selection.InputWeek() creates &lt;input&gt; element of type week",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 378,
    "kind": "file",
    "name": "lib/selection/Ins.js",
    "content": "/**\n * selection.Ins() creates &lt;ins&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('ins')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Ins.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 379,
    "kind": "function",
    "name": "Ins",
    "memberof": "lib/selection/Ins.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Ins.js~Ins",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Ins.js",
    "importStyle": "Ins",
    "description": "selection.Ins() creates &lt;ins&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 380,
    "kind": "file",
    "name": "lib/selection/JustifyContent.js",
    "content": "/**\n * selection.JustifyContent() get or change justify-content style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('justify-content');\n  }\n  else\n  {\n    return this.style('justify-content', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/JustifyContent.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 381,
    "kind": "function",
    "name": "JustifyContent",
    "memberof": "lib/selection/JustifyContent.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/JustifyContent.js~JustifyContent",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/JustifyContent.js",
    "importStyle": "JustifyContent",
    "description": "selection.JustifyContent() get or change justify-content style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 382,
    "kind": "file",
    "name": "lib/selection/Kbd.js",
    "content": "/**\n * selection.Kbd() creates &lt;kbd&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('kbd')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Kbd.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 383,
    "kind": "function",
    "name": "Kbd",
    "memberof": "lib/selection/Kbd.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Kbd.js~Kbd",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Kbd.js",
    "importStyle": "Kbd",
    "description": "selection.Kbd() creates &lt;kbd&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 384,
    "kind": "file",
    "name": "lib/selection/Label.js",
    "content": "/**\n * selection.Label() creates &lt;label&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('label')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Label.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 385,
    "kind": "function",
    "name": "Label",
    "memberof": "lib/selection/Label.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Label.js~Label",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Label.js",
    "importStyle": "Label",
    "description": "selection.Label() creates &lt;label&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 386,
    "kind": "file",
    "name": "lib/selection/Left.js",
    "content": "/**\n * selection.Left() get or change left style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('left');\n  }\n  else\n  {\n    return this.style('left', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Left.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "Left",
    "memberof": "lib/selection/Left.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Left.js~Left",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Left.js",
    "importStyle": "Left",
    "description": "selection.Left() get or change left style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 388,
    "kind": "file",
    "name": "lib/selection/Legend.js",
    "content": "/**\n * selection.Legend() creates &lt;legend&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('legend')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Legend.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 389,
    "kind": "function",
    "name": "Legend",
    "memberof": "lib/selection/Legend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Legend.js~Legend",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Legend.js",
    "importStyle": "Legend",
    "description": "selection.Legend() creates &lt;legend&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 390,
    "kind": "file",
    "name": "lib/selection/LetterSpacing.js",
    "content": "/**\n * selection.LetterSpacing() get or change letter-spacing style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('letter-spacing');\n  }\n  else\n  {\n    return this.style('letter-spacing', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/LetterSpacing.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 391,
    "kind": "function",
    "name": "LetterSpacing",
    "memberof": "lib/selection/LetterSpacing.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/LetterSpacing.js~LetterSpacing",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/LetterSpacing.js",
    "importStyle": "LetterSpacing",
    "description": "selection.LetterSpacing() get or change letter-spacing style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 392,
    "kind": "file",
    "name": "lib/selection/Li.js",
    "content": "/**\n * selection.Li() creates &lt;li&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('li')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Li.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 393,
    "kind": "function",
    "name": "Li",
    "memberof": "lib/selection/Li.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Li.js~Li",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Li.js",
    "importStyle": "Li",
    "description": "selection.Li() creates &lt;li&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 394,
    "kind": "file",
    "name": "lib/selection/LineBreak.js",
    "content": "/**\n * selection.LineBreak() get or change line-break style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('line-break');\n  }\n  else\n  {\n    return this.style('line-break', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/LineBreak.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 395,
    "kind": "function",
    "name": "LineBreak",
    "memberof": "lib/selection/LineBreak.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/LineBreak.js~LineBreak",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/LineBreak.js",
    "importStyle": "LineBreak",
    "description": "selection.LineBreak() get or change line-break style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 396,
    "kind": "file",
    "name": "lib/selection/LineHeight.js",
    "content": "/**\n * selection.LineHeight() get or change line-height style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('line-height');\n  }\n  else\n  {\n    return this.style('line-height', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/LineHeight.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 397,
    "kind": "function",
    "name": "LineHeight",
    "memberof": "lib/selection/LineHeight.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/LineHeight.js~LineHeight",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/LineHeight.js",
    "importStyle": "LineHeight",
    "description": "selection.LineHeight() get or change line-height style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 398,
    "kind": "file",
    "name": "lib/selection/Link.js",
    "content": "/**\n * selection.Link() creates &lt;link&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('link')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Link.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 399,
    "kind": "function",
    "name": "Link",
    "memberof": "lib/selection/Link.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Link.js~Link",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Link.js",
    "importStyle": "Link",
    "description": "selection.Link() creates &lt;link&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 400,
    "kind": "file",
    "name": "lib/selection/Main.js",
    "content": "/**\n * selection.Main() creates &lt;main&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('main')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Main.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 401,
    "kind": "function",
    "name": "Main",
    "memberof": "lib/selection/Main.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Main.js~Main",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Main.js",
    "importStyle": "Main",
    "description": "selection.Main() creates &lt;main&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 402,
    "kind": "file",
    "name": "lib/selection/Map.js",
    "content": "/**\n * selection.Map() creates &lt;map&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('map')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Map.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 403,
    "kind": "function",
    "name": "Map",
    "memberof": "lib/selection/Map.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Map.js~Map",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Map.js",
    "importStyle": "Map",
    "description": "selection.Map() creates &lt;map&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 404,
    "kind": "file",
    "name": "lib/selection/Margin.js",
    "content": "/**\n * selection.Margin() get or change margin style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('margin');\n  }\n  else\n  {\n    return this.style('margin', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Margin.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 405,
    "kind": "function",
    "name": "Margin",
    "memberof": "lib/selection/Margin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Margin.js~Margin",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Margin.js",
    "importStyle": "Margin",
    "description": "selection.Margin() get or change margin style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 406,
    "kind": "file",
    "name": "lib/selection/MarginBottom.js",
    "content": "/**\n * selection.MarginBottom() get or change margin-bottom style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('margin-bottom');\n  }\n  else\n  {\n    return this.style('margin-bottom', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/MarginBottom.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 407,
    "kind": "function",
    "name": "MarginBottom",
    "memberof": "lib/selection/MarginBottom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/MarginBottom.js~MarginBottom",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/MarginBottom.js",
    "importStyle": "MarginBottom",
    "description": "selection.MarginBottom() get or change margin-bottom style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 408,
    "kind": "file",
    "name": "lib/selection/MarginLeft.js",
    "content": "/**\n * selection.MarginLeft() get or change margin-left style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('margin-left');\n  }\n  else\n  {\n    return this.style('margin-left', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/MarginLeft.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 409,
    "kind": "function",
    "name": "MarginLeft",
    "memberof": "lib/selection/MarginLeft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/MarginLeft.js~MarginLeft",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/MarginLeft.js",
    "importStyle": "MarginLeft",
    "description": "selection.MarginLeft() get or change margin-left style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 410,
    "kind": "file",
    "name": "lib/selection/MarginRight.js",
    "content": "/**\n * selection.MarginRight() get or change margin-right style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('margin-right');\n  }\n  else\n  {\n    return this.style('margin-right', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/MarginRight.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 411,
    "kind": "function",
    "name": "MarginRight",
    "memberof": "lib/selection/MarginRight.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/MarginRight.js~MarginRight",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/MarginRight.js",
    "importStyle": "MarginRight",
    "description": "selection.MarginRight() get or change margin-right style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 412,
    "kind": "file",
    "name": "lib/selection/MarginTop.js",
    "content": "/**\n * selection.MarginTop() get or change margin-top style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('margin-top');\n  }\n  else\n  {\n    return this.style('margin-top', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/MarginTop.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 413,
    "kind": "function",
    "name": "MarginTop",
    "memberof": "lib/selection/MarginTop.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/MarginTop.js~MarginTop",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/MarginTop.js",
    "importStyle": "MarginTop",
    "description": "selection.MarginTop() get or change margin-top style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 414,
    "kind": "file",
    "name": "lib/selection/Mark.js",
    "content": "/**\n * selection.Mark() creates &lt;mark&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('mark')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Mark.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 415,
    "kind": "function",
    "name": "Mark",
    "memberof": "lib/selection/Mark.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Mark.js~Mark",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Mark.js",
    "importStyle": "Mark",
    "description": "selection.Mark() creates &lt;mark&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 416,
    "kind": "file",
    "name": "lib/selection/MaxHeight.js",
    "content": "/**\n * selection.MaxHeight() get or change max-height style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('max-height');\n  }\n  else\n  {\n    return this.style('max-height', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/MaxHeight.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 417,
    "kind": "function",
    "name": "MaxHeight",
    "memberof": "lib/selection/MaxHeight.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/MaxHeight.js~MaxHeight",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/MaxHeight.js",
    "importStyle": "MaxHeight",
    "description": "selection.MaxHeight() get or change max-height style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 418,
    "kind": "file",
    "name": "lib/selection/MaxWidth.js",
    "content": "/**\n * selection.MaxWidth() get or change max-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('max-width');\n  }\n  else\n  {\n    return this.style('max-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/MaxWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 419,
    "kind": "function",
    "name": "MaxWidth",
    "memberof": "lib/selection/MaxWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/MaxWidth.js~MaxWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/MaxWidth.js",
    "importStyle": "MaxWidth",
    "description": "selection.MaxWidth() get or change max-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 420,
    "kind": "file",
    "name": "lib/selection/Media.js",
    "content": "/**\n * selection.Media() get or change media attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('media');\n  }\n  else\n  {\n    return this.attr('media', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Media.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 421,
    "kind": "function",
    "name": "Media",
    "memberof": "lib/selection/Media.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Media.js~Media",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Media.js",
    "importStyle": "Media",
    "description": "selection.Media() get or change media attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 422,
    "kind": "file",
    "name": "lib/selection/Meta.js",
    "content": "/**\n * selection.Meta() creates &lt;meta&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('meta')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Meta.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 423,
    "kind": "function",
    "name": "Meta",
    "memberof": "lib/selection/Meta.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Meta.js~Meta",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Meta.js",
    "importStyle": "Meta",
    "description": "selection.Meta() creates &lt;meta&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 424,
    "kind": "file",
    "name": "lib/selection/Meter.js",
    "content": "/**\n * selection.Meter() creates &lt;meter&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('meter')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Meter.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 425,
    "kind": "function",
    "name": "Meter",
    "memberof": "lib/selection/Meter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Meter.js~Meter",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Meter.js",
    "importStyle": "Meter",
    "description": "selection.Meter() creates &lt;meter&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 426,
    "kind": "file",
    "name": "lib/selection/Method.js",
    "content": "/**\n * selection.Method() get or change method attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('method');\n  }\n  else\n  {\n    return this.attr('method', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Method.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 427,
    "kind": "function",
    "name": "Method",
    "memberof": "lib/selection/Method.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Method.js~Method",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Method.js",
    "importStyle": "Method",
    "description": "selection.Method() get or change method attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 428,
    "kind": "file",
    "name": "lib/selection/MinHeight.js",
    "content": "/**\n * selection.MinHeight() get or change min-height style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('min-height');\n  }\n  else\n  {\n    return this.style('min-height', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/MinHeight.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 429,
    "kind": "function",
    "name": "MinHeight",
    "memberof": "lib/selection/MinHeight.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/MinHeight.js~MinHeight",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/MinHeight.js",
    "importStyle": "MinHeight",
    "description": "selection.MinHeight() get or change min-height style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 430,
    "kind": "file",
    "name": "lib/selection/MinWidth.js",
    "content": "/**\n * selection.MinWidth() get or change min-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('min-width');\n  }\n  else\n  {\n    return this.style('min-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/MinWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 431,
    "kind": "function",
    "name": "MinWidth",
    "memberof": "lib/selection/MinWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/MinWidth.js~MinWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/MinWidth.js",
    "importStyle": "MinWidth",
    "description": "selection.MinWidth() get or change min-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 432,
    "kind": "file",
    "name": "lib/selection/Month.js",
    "content": "/**\n * selection.Month() creates &lt;input&gt; element of type month\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'month')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Month.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 433,
    "kind": "function",
    "name": "Month",
    "memberof": "lib/selection/Month.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Month.js~Month",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Month.js",
    "importStyle": "Month",
    "description": "selection.Month() creates &lt;input&gt; element of type month",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 434,
    "kind": "file",
    "name": "lib/selection/Name.js",
    "content": "/**\n * selection.Name() get or change name attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('name');\n  }\n  else\n  {\n    return this.attr('name', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Name.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 435,
    "kind": "function",
    "name": "Name",
    "memberof": "lib/selection/Name.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Name.js~Name",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Name.js",
    "importStyle": "Name",
    "description": "selection.Name() get or change name attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 436,
    "kind": "file",
    "name": "lib/selection/Nav.js",
    "content": "/**\n * selection.Nav() creates &lt;nav&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('nav')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Nav.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 437,
    "kind": "function",
    "name": "Nav",
    "memberof": "lib/selection/Nav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Nav.js~Nav",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Nav.js",
    "importStyle": "Nav",
    "description": "selection.Nav() creates &lt;nav&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 438,
    "kind": "file",
    "name": "lib/selection/NavDown.js",
    "content": "/**\n * selection.NavDown() get or change nav-down style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('nav-down');\n  }\n  else\n  {\n    return this.style('nav-down', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/NavDown.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 439,
    "kind": "function",
    "name": "NavDown",
    "memberof": "lib/selection/NavDown.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/NavDown.js~NavDown",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/NavDown.js",
    "importStyle": "NavDown",
    "description": "selection.NavDown() get or change nav-down style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 440,
    "kind": "file",
    "name": "lib/selection/NavIndex.js",
    "content": "/**\n * selection.NavIndex() get or change nav-index style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('nav-index');\n  }\n  else\n  {\n    return this.style('nav-index', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/NavIndex.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 441,
    "kind": "function",
    "name": "NavIndex",
    "memberof": "lib/selection/NavIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/NavIndex.js~NavIndex",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/NavIndex.js",
    "importStyle": "NavIndex",
    "description": "selection.NavIndex() get or change nav-index style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 442,
    "kind": "file",
    "name": "lib/selection/NavLeft.js",
    "content": "/**\n * selection.NavLeft() get or change nav-left style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('nav-left');\n  }\n  else\n  {\n    return this.style('nav-left', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/NavLeft.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 443,
    "kind": "function",
    "name": "NavLeft",
    "memberof": "lib/selection/NavLeft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/NavLeft.js~NavLeft",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/NavLeft.js",
    "importStyle": "NavLeft",
    "description": "selection.NavLeft() get or change nav-left style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 444,
    "kind": "file",
    "name": "lib/selection/NavRight.js",
    "content": "/**\n * selection.NavRight() get or change nav-right style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('nav-right');\n  }\n  else\n  {\n    return this.style('nav-right', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/NavRight.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 445,
    "kind": "function",
    "name": "NavRight",
    "memberof": "lib/selection/NavRight.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/NavRight.js~NavRight",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/NavRight.js",
    "importStyle": "NavRight",
    "description": "selection.NavRight() get or change nav-right style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 446,
    "kind": "file",
    "name": "lib/selection/NavUp.js",
    "content": "/**\n * selection.NavUp() get or change nav-up style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('nav-up');\n  }\n  else\n  {\n    return this.style('nav-up', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/NavUp.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 447,
    "kind": "function",
    "name": "NavUp",
    "memberof": "lib/selection/NavUp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/NavUp.js~NavUp",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/NavUp.js",
    "importStyle": "NavUp",
    "description": "selection.NavUp() get or change nav-up style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 448,
    "kind": "file",
    "name": "lib/selection/Noframes.js",
    "content": "/**\n * selection.Noframes() creates &lt;noframes&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('noframes')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Noframes.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 449,
    "kind": "function",
    "name": "Noframes",
    "memberof": "lib/selection/Noframes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Noframes.js~Noframes",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Noframes.js",
    "importStyle": "Noframes",
    "description": "selection.Noframes() creates &lt;noframes&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 450,
    "kind": "file",
    "name": "lib/selection/Noscript.js",
    "content": "/**\n * selection.Noscript() creates &lt;noscript&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('noscript')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Noscript.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 451,
    "kind": "function",
    "name": "Noscript",
    "memberof": "lib/selection/Noscript.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Noscript.js~Noscript",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Noscript.js",
    "importStyle": "Noscript",
    "description": "selection.Noscript() creates &lt;noscript&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 452,
    "kind": "file",
    "name": "lib/selection/Number.js",
    "content": "/**\n * selection.Number() creates &lt;input&gt; element of type number\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'number')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Number.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 453,
    "kind": "function",
    "name": "Number",
    "memberof": "lib/selection/Number.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Number.js~Number",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Number.js",
    "importStyle": "Number",
    "description": "selection.Number() creates &lt;input&gt; element of type number",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 454,
    "kind": "file",
    "name": "lib/selection/Object.js",
    "content": "/**\n * selection.Object() creates &lt;object&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('object')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Object.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 455,
    "kind": "function",
    "name": "Object",
    "memberof": "lib/selection/Object.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Object.js~Object",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Object.js",
    "importStyle": "Object",
    "description": "selection.Object() creates &lt;object&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 456,
    "kind": "file",
    "name": "lib/selection/Ol.js",
    "content": "/**\n * selection.Ol() creates &lt;ol&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('ol')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Ol.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 457,
    "kind": "function",
    "name": "Ol",
    "memberof": "lib/selection/Ol.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Ol.js~Ol",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Ol.js",
    "importStyle": "Ol",
    "description": "selection.Ol() creates &lt;ol&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 458,
    "kind": "file",
    "name": "lib/selection/OnAbort.js",
    "content": "/**\n * selection.OnAbort() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('abort');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('abort', callback);\n  }\n  else\n  {\n    return this.on('abort', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnAbort.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 459,
    "kind": "function",
    "name": "OnAbort",
    "memberof": "lib/selection/OnAbort.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnAbort.js~OnAbort",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnAbort.js",
    "importStyle": "OnAbort",
    "description": "selection.OnAbort() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 460,
    "kind": "file",
    "name": "lib/selection/OnAfterprint.js",
    "content": "/**\n * selection.OnAfterprint() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('afterprint');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('afterprint', callback);\n  }\n  else\n  {\n    return this.on('afterprint', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnAfterprint.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 461,
    "kind": "function",
    "name": "OnAfterprint",
    "memberof": "lib/selection/OnAfterprint.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnAfterprint.js~OnAfterprint",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnAfterprint.js",
    "importStyle": "OnAfterprint",
    "description": "selection.OnAfterprint() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 462,
    "kind": "file",
    "name": "lib/selection/OnBeforeprint.js",
    "content": "/**\n * selection.OnBeforeprint() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('beforeprint');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('beforeprint', callback);\n  }\n  else\n  {\n    return this.on('beforeprint', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnBeforeprint.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 463,
    "kind": "function",
    "name": "OnBeforeprint",
    "memberof": "lib/selection/OnBeforeprint.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnBeforeprint.js~OnBeforeprint",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnBeforeprint.js",
    "importStyle": "OnBeforeprint",
    "description": "selection.OnBeforeprint() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 464,
    "kind": "file",
    "name": "lib/selection/OnBeforeunload.js",
    "content": "/**\n * selection.OnBeforeunload() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('beforeunload');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('beforeunload', callback);\n  }\n  else\n  {\n    return this.on('beforeunload', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnBeforeunload.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 465,
    "kind": "function",
    "name": "OnBeforeunload",
    "memberof": "lib/selection/OnBeforeunload.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnBeforeunload.js~OnBeforeunload",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnBeforeunload.js",
    "importStyle": "OnBeforeunload",
    "description": "selection.OnBeforeunload() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 466,
    "kind": "file",
    "name": "lib/selection/OnBlur.js",
    "content": "/**\n * selection.OnBlur() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('blur');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('blur', callback);\n  }\n  else\n  {\n    return this.on('blur', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnBlur.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 467,
    "kind": "function",
    "name": "OnBlur",
    "memberof": "lib/selection/OnBlur.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnBlur.js~OnBlur",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnBlur.js",
    "importStyle": "OnBlur",
    "description": "selection.OnBlur() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 468,
    "kind": "file",
    "name": "lib/selection/OnCanplay.js",
    "content": "/**\n * selection.OnCanplay() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('canplay');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('canplay', callback);\n  }\n  else\n  {\n    return this.on('canplay', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnCanplay.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 469,
    "kind": "function",
    "name": "OnCanplay",
    "memberof": "lib/selection/OnCanplay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnCanplay.js~OnCanplay",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnCanplay.js",
    "importStyle": "OnCanplay",
    "description": "selection.OnCanplay() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 470,
    "kind": "file",
    "name": "lib/selection/OnCanplaythrough.js",
    "content": "/**\n * selection.OnCanplaythrough() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('canplaythrough');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('canplaythrough', callback);\n  }\n  else\n  {\n    return this.on('canplaythrough', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnCanplaythrough.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 471,
    "kind": "function",
    "name": "OnCanplaythrough",
    "memberof": "lib/selection/OnCanplaythrough.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnCanplaythrough.js~OnCanplaythrough",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnCanplaythrough.js",
    "importStyle": "OnCanplaythrough",
    "description": "selection.OnCanplaythrough() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 472,
    "kind": "file",
    "name": "lib/selection/OnChange.js",
    "content": "/**\n * selection.OnChange() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('change');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('change', callback);\n  }\n  else\n  {\n    return this.on('change', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnChange.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 473,
    "kind": "function",
    "name": "OnChange",
    "memberof": "lib/selection/OnChange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnChange.js~OnChange",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnChange.js",
    "importStyle": "OnChange",
    "description": "selection.OnChange() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 474,
    "kind": "file",
    "name": "lib/selection/OnClick.js",
    "content": "/**\n * selection.OnClick() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('click');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('click', callback);\n  }\n  else\n  {\n    return this.on('click', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnClick.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 475,
    "kind": "function",
    "name": "OnClick",
    "memberof": "lib/selection/OnClick.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnClick.js~OnClick",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnClick.js",
    "importStyle": "OnClick",
    "description": "selection.OnClick() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 476,
    "kind": "file",
    "name": "lib/selection/OnContextmenu.js",
    "content": "/**\n * selection.OnContextmenu() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('contextmenu');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('contextmenu', callback);\n  }\n  else\n  {\n    return this.on('contextmenu', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnContextmenu.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 477,
    "kind": "function",
    "name": "OnContextmenu",
    "memberof": "lib/selection/OnContextmenu.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnContextmenu.js~OnContextmenu",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnContextmenu.js",
    "importStyle": "OnContextmenu",
    "description": "selection.OnContextmenu() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 478,
    "kind": "file",
    "name": "lib/selection/OnCopy.js",
    "content": "/**\n * selection.OnCopy() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('copy');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('copy', callback);\n  }\n  else\n  {\n    return this.on('copy', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnCopy.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 479,
    "kind": "function",
    "name": "OnCopy",
    "memberof": "lib/selection/OnCopy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnCopy.js~OnCopy",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnCopy.js",
    "importStyle": "OnCopy",
    "description": "selection.OnCopy() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 480,
    "kind": "file",
    "name": "lib/selection/OnCuechange.js",
    "content": "/**\n * selection.OnCuechange() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('cuechange');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('cuechange', callback);\n  }\n  else\n  {\n    return this.on('cuechange', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnCuechange.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 481,
    "kind": "function",
    "name": "OnCuechange",
    "memberof": "lib/selection/OnCuechange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnCuechange.js~OnCuechange",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnCuechange.js",
    "importStyle": "OnCuechange",
    "description": "selection.OnCuechange() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 482,
    "kind": "file",
    "name": "lib/selection/OnCut.js",
    "content": "/**\n * selection.OnCut() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('cut');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('cut', callback);\n  }\n  else\n  {\n    return this.on('cut', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnCut.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 483,
    "kind": "function",
    "name": "OnCut",
    "memberof": "lib/selection/OnCut.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnCut.js~OnCut",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnCut.js",
    "importStyle": "OnCut",
    "description": "selection.OnCut() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 484,
    "kind": "file",
    "name": "lib/selection/OnDblclick.js",
    "content": "/**\n * selection.OnDblclick() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('dblclick');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('dblclick', callback);\n  }\n  else\n  {\n    return this.on('dblclick', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDblclick.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 485,
    "kind": "function",
    "name": "OnDblclick",
    "memberof": "lib/selection/OnDblclick.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDblclick.js~OnDblclick",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDblclick.js",
    "importStyle": "OnDblclick",
    "description": "selection.OnDblclick() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 486,
    "kind": "file",
    "name": "lib/selection/OnDrag.js",
    "content": "/**\n * selection.OnDrag() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('drag');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('drag', callback);\n  }\n  else\n  {\n    return this.on('drag', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDrag.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 487,
    "kind": "function",
    "name": "OnDrag",
    "memberof": "lib/selection/OnDrag.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDrag.js~OnDrag",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDrag.js",
    "importStyle": "OnDrag",
    "description": "selection.OnDrag() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 488,
    "kind": "file",
    "name": "lib/selection/OnDragend.js",
    "content": "/**\n * selection.OnDragend() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('dragend');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('dragend', callback);\n  }\n  else\n  {\n    return this.on('dragend', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDragend.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 489,
    "kind": "function",
    "name": "OnDragend",
    "memberof": "lib/selection/OnDragend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDragend.js~OnDragend",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDragend.js",
    "importStyle": "OnDragend",
    "description": "selection.OnDragend() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 490,
    "kind": "file",
    "name": "lib/selection/OnDragenter.js",
    "content": "/**\n * selection.OnDragenter() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('dragenter');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('dragenter', callback);\n  }\n  else\n  {\n    return this.on('dragenter', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDragenter.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 491,
    "kind": "function",
    "name": "OnDragenter",
    "memberof": "lib/selection/OnDragenter.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDragenter.js~OnDragenter",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDragenter.js",
    "importStyle": "OnDragenter",
    "description": "selection.OnDragenter() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 492,
    "kind": "file",
    "name": "lib/selection/OnDragleave.js",
    "content": "/**\n * selection.OnDragleave() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('dragleave');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('dragleave', callback);\n  }\n  else\n  {\n    return this.on('dragleave', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDragleave.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 493,
    "kind": "function",
    "name": "OnDragleave",
    "memberof": "lib/selection/OnDragleave.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDragleave.js~OnDragleave",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDragleave.js",
    "importStyle": "OnDragleave",
    "description": "selection.OnDragleave() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 494,
    "kind": "file",
    "name": "lib/selection/OnDragover.js",
    "content": "/**\n * selection.OnDragover() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('dragover');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('dragover', callback);\n  }\n  else\n  {\n    return this.on('dragover', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDragover.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 495,
    "kind": "function",
    "name": "OnDragover",
    "memberof": "lib/selection/OnDragover.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDragover.js~OnDragover",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDragover.js",
    "importStyle": "OnDragover",
    "description": "selection.OnDragover() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 496,
    "kind": "file",
    "name": "lib/selection/OnDragstart.js",
    "content": "/**\n * selection.OnDragstart() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('dragstart');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('dragstart', callback);\n  }\n  else\n  {\n    return this.on('dragstart', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDragstart.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 497,
    "kind": "function",
    "name": "OnDragstart",
    "memberof": "lib/selection/OnDragstart.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDragstart.js~OnDragstart",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDragstart.js",
    "importStyle": "OnDragstart",
    "description": "selection.OnDragstart() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 498,
    "kind": "file",
    "name": "lib/selection/OnDrop.js",
    "content": "/**\n * selection.OnDrop() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('drop');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('drop', callback);\n  }\n  else\n  {\n    return this.on('drop', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDrop.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 499,
    "kind": "function",
    "name": "OnDrop",
    "memberof": "lib/selection/OnDrop.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDrop.js~OnDrop",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDrop.js",
    "importStyle": "OnDrop",
    "description": "selection.OnDrop() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 500,
    "kind": "file",
    "name": "lib/selection/OnDurationchange.js",
    "content": "/**\n * selection.OnDurationchange() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('durationchange');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('durationchange', callback);\n  }\n  else\n  {\n    return this.on('durationchange', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnDurationchange.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 501,
    "kind": "function",
    "name": "OnDurationchange",
    "memberof": "lib/selection/OnDurationchange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnDurationchange.js~OnDurationchange",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnDurationchange.js",
    "importStyle": "OnDurationchange",
    "description": "selection.OnDurationchange() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 502,
    "kind": "file",
    "name": "lib/selection/OnEmptied.js",
    "content": "/**\n * selection.OnEmptied() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('emptied');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('emptied', callback);\n  }\n  else\n  {\n    return this.on('emptied', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnEmptied.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 503,
    "kind": "function",
    "name": "OnEmptied",
    "memberof": "lib/selection/OnEmptied.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnEmptied.js~OnEmptied",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnEmptied.js",
    "importStyle": "OnEmptied",
    "description": "selection.OnEmptied() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 504,
    "kind": "file",
    "name": "lib/selection/OnEnded.js",
    "content": "/**\n * selection.OnEnded() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('ended');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('ended', callback);\n  }\n  else\n  {\n    return this.on('ended', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnEnded.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 505,
    "kind": "function",
    "name": "OnEnded",
    "memberof": "lib/selection/OnEnded.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnEnded.js~OnEnded",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnEnded.js",
    "importStyle": "OnEnded",
    "description": "selection.OnEnded() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 506,
    "kind": "file",
    "name": "lib/selection/OnError.js",
    "content": "/**\n * selection.OnError() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('error');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('error', callback);\n  }\n  else\n  {\n    return this.on('error', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnError.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 507,
    "kind": "function",
    "name": "OnError",
    "memberof": "lib/selection/OnError.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnError.js~OnError",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnError.js",
    "importStyle": "OnError",
    "description": "selection.OnError() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 508,
    "kind": "file",
    "name": "lib/selection/OnFocus.js",
    "content": "/**\n * selection.OnFocus() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('focus');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('focus', callback);\n  }\n  else\n  {\n    return this.on('focus', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnFocus.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 509,
    "kind": "function",
    "name": "OnFocus",
    "memberof": "lib/selection/OnFocus.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnFocus.js~OnFocus",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnFocus.js",
    "importStyle": "OnFocus",
    "description": "selection.OnFocus() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 510,
    "kind": "file",
    "name": "lib/selection/OnHashchange.js",
    "content": "/**\n * selection.OnHashchange() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('hashchange');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('hashchange', callback);\n  }\n  else\n  {\n    return this.on('hashchange', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnHashchange.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 511,
    "kind": "function",
    "name": "OnHashchange",
    "memberof": "lib/selection/OnHashchange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnHashchange.js~OnHashchange",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnHashchange.js",
    "importStyle": "OnHashchange",
    "description": "selection.OnHashchange() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 512,
    "kind": "file",
    "name": "lib/selection/OnInput.js",
    "content": "/**\n * selection.OnInput() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('input');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('input', callback);\n  }\n  else\n  {\n    return this.on('input', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnInput.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 513,
    "kind": "function",
    "name": "OnInput",
    "memberof": "lib/selection/OnInput.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnInput.js~OnInput",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnInput.js",
    "importStyle": "OnInput",
    "description": "selection.OnInput() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 514,
    "kind": "file",
    "name": "lib/selection/OnInvalid.js",
    "content": "/**\n * selection.OnInvalid() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('invalid');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('invalid', callback);\n  }\n  else\n  {\n    return this.on('invalid', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnInvalid.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 515,
    "kind": "function",
    "name": "OnInvalid",
    "memberof": "lib/selection/OnInvalid.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnInvalid.js~OnInvalid",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnInvalid.js",
    "importStyle": "OnInvalid",
    "description": "selection.OnInvalid() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 516,
    "kind": "file",
    "name": "lib/selection/OnKeydown.js",
    "content": "/**\n * selection.OnKeydown() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('keydown');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('keydown', callback);\n  }\n  else\n  {\n    return this.on('keydown', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnKeydown.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 517,
    "kind": "function",
    "name": "OnKeydown",
    "memberof": "lib/selection/OnKeydown.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnKeydown.js~OnKeydown",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnKeydown.js",
    "importStyle": "OnKeydown",
    "description": "selection.OnKeydown() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 518,
    "kind": "file",
    "name": "lib/selection/OnKeypress.js",
    "content": "/**\n * selection.OnKeypress() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('keypress');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('keypress', callback);\n  }\n  else\n  {\n    return this.on('keypress', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnKeypress.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 519,
    "kind": "function",
    "name": "OnKeypress",
    "memberof": "lib/selection/OnKeypress.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnKeypress.js~OnKeypress",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnKeypress.js",
    "importStyle": "OnKeypress",
    "description": "selection.OnKeypress() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 520,
    "kind": "file",
    "name": "lib/selection/OnKeyup.js",
    "content": "/**\n * selection.OnKeyup() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('keyup');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('keyup', callback);\n  }\n  else\n  {\n    return this.on('keyup', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnKeyup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 521,
    "kind": "function",
    "name": "OnKeyup",
    "memberof": "lib/selection/OnKeyup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnKeyup.js~OnKeyup",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnKeyup.js",
    "importStyle": "OnKeyup",
    "description": "selection.OnKeyup() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 522,
    "kind": "file",
    "name": "lib/selection/OnLoad.js",
    "content": "/**\n * selection.OnLoad() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('load');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('load', callback);\n  }\n  else\n  {\n    return this.on('load', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnLoad.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 523,
    "kind": "function",
    "name": "OnLoad",
    "memberof": "lib/selection/OnLoad.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnLoad.js~OnLoad",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnLoad.js",
    "importStyle": "OnLoad",
    "description": "selection.OnLoad() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 524,
    "kind": "file",
    "name": "lib/selection/OnLoadeddata.js",
    "content": "/**\n * selection.OnLoadeddata() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('loadeddata');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('loadeddata', callback);\n  }\n  else\n  {\n    return this.on('loadeddata', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnLoadeddata.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 525,
    "kind": "function",
    "name": "OnLoadeddata",
    "memberof": "lib/selection/OnLoadeddata.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnLoadeddata.js~OnLoadeddata",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnLoadeddata.js",
    "importStyle": "OnLoadeddata",
    "description": "selection.OnLoadeddata() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 526,
    "kind": "file",
    "name": "lib/selection/OnLoadedmetadata.js",
    "content": "/**\n * selection.OnLoadedmetadata() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('loadedmetadata');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('loadedmetadata', callback);\n  }\n  else\n  {\n    return this.on('loadedmetadata', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnLoadedmetadata.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 527,
    "kind": "function",
    "name": "OnLoadedmetadata",
    "memberof": "lib/selection/OnLoadedmetadata.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnLoadedmetadata.js~OnLoadedmetadata",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnLoadedmetadata.js",
    "importStyle": "OnLoadedmetadata",
    "description": "selection.OnLoadedmetadata() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 528,
    "kind": "file",
    "name": "lib/selection/OnLoadstart.js",
    "content": "/**\n * selection.OnLoadstart() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('loadstart');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('loadstart', callback);\n  }\n  else\n  {\n    return this.on('loadstart', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnLoadstart.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 529,
    "kind": "function",
    "name": "OnLoadstart",
    "memberof": "lib/selection/OnLoadstart.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnLoadstart.js~OnLoadstart",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnLoadstart.js",
    "importStyle": "OnLoadstart",
    "description": "selection.OnLoadstart() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 530,
    "kind": "file",
    "name": "lib/selection/OnMessage.js",
    "content": "/**\n * selection.OnMessage() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('message');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('message', callback);\n  }\n  else\n  {\n    return this.on('message', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnMessage.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 531,
    "kind": "function",
    "name": "OnMessage",
    "memberof": "lib/selection/OnMessage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnMessage.js~OnMessage",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnMessage.js",
    "importStyle": "OnMessage",
    "description": "selection.OnMessage() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 532,
    "kind": "file",
    "name": "lib/selection/OnMousedown.js",
    "content": "/**\n * selection.OnMousedown() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('mousedown');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('mousedown', callback);\n  }\n  else\n  {\n    return this.on('mousedown', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnMousedown.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 533,
    "kind": "function",
    "name": "OnMousedown",
    "memberof": "lib/selection/OnMousedown.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnMousedown.js~OnMousedown",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnMousedown.js",
    "importStyle": "OnMousedown",
    "description": "selection.OnMousedown() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 534,
    "kind": "file",
    "name": "lib/selection/OnMousemove.js",
    "content": "/**\n * selection.OnMousemove() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('mousemove');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('mousemove', callback);\n  }\n  else\n  {\n    return this.on('mousemove', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnMousemove.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 535,
    "kind": "function",
    "name": "OnMousemove",
    "memberof": "lib/selection/OnMousemove.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnMousemove.js~OnMousemove",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnMousemove.js",
    "importStyle": "OnMousemove",
    "description": "selection.OnMousemove() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 536,
    "kind": "file",
    "name": "lib/selection/OnMouseout.js",
    "content": "/**\n * selection.OnMouseout() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('mouseout');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('mouseout', callback);\n  }\n  else\n  {\n    return this.on('mouseout', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnMouseout.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 537,
    "kind": "function",
    "name": "OnMouseout",
    "memberof": "lib/selection/OnMouseout.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnMouseout.js~OnMouseout",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnMouseout.js",
    "importStyle": "OnMouseout",
    "description": "selection.OnMouseout() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 538,
    "kind": "file",
    "name": "lib/selection/OnMouseover.js",
    "content": "/**\n * selection.OnMouseover() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('mouseover');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('mouseover', callback);\n  }\n  else\n  {\n    return this.on('mouseover', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnMouseover.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 539,
    "kind": "function",
    "name": "OnMouseover",
    "memberof": "lib/selection/OnMouseover.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnMouseover.js~OnMouseover",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnMouseover.js",
    "importStyle": "OnMouseover",
    "description": "selection.OnMouseover() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 540,
    "kind": "file",
    "name": "lib/selection/OnMouseup.js",
    "content": "/**\n * selection.OnMouseup() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('mouseup');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('mouseup', callback);\n  }\n  else\n  {\n    return this.on('mouseup', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnMouseup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 541,
    "kind": "function",
    "name": "OnMouseup",
    "memberof": "lib/selection/OnMouseup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnMouseup.js~OnMouseup",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnMouseup.js",
    "importStyle": "OnMouseup",
    "description": "selection.OnMouseup() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 542,
    "kind": "file",
    "name": "lib/selection/OnMousewheel.js",
    "content": "/**\n * selection.OnMousewheel() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('mousewheel');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('mousewheel', callback);\n  }\n  else\n  {\n    return this.on('mousewheel', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnMousewheel.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 543,
    "kind": "function",
    "name": "OnMousewheel",
    "memberof": "lib/selection/OnMousewheel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnMousewheel.js~OnMousewheel",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnMousewheel.js",
    "importStyle": "OnMousewheel",
    "description": "selection.OnMousewheel() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 544,
    "kind": "file",
    "name": "lib/selection/OnOffline.js",
    "content": "/**\n * selection.OnOffline() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('offline');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('offline', callback);\n  }\n  else\n  {\n    return this.on('offline', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnOffline.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 545,
    "kind": "function",
    "name": "OnOffline",
    "memberof": "lib/selection/OnOffline.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnOffline.js~OnOffline",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnOffline.js",
    "importStyle": "OnOffline",
    "description": "selection.OnOffline() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 546,
    "kind": "file",
    "name": "lib/selection/OnOnline.js",
    "content": "/**\n * selection.OnOnline() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('online');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('online', callback);\n  }\n  else\n  {\n    return this.on('online', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnOnline.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 547,
    "kind": "function",
    "name": "OnOnline",
    "memberof": "lib/selection/OnOnline.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnOnline.js~OnOnline",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnOnline.js",
    "importStyle": "OnOnline",
    "description": "selection.OnOnline() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 548,
    "kind": "file",
    "name": "lib/selection/OnPagehide.js",
    "content": "/**\n * selection.OnPagehide() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('pagehide');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('pagehide', callback);\n  }\n  else\n  {\n    return this.on('pagehide', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnPagehide.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 549,
    "kind": "function",
    "name": "OnPagehide",
    "memberof": "lib/selection/OnPagehide.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnPagehide.js~OnPagehide",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnPagehide.js",
    "importStyle": "OnPagehide",
    "description": "selection.OnPagehide() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 550,
    "kind": "file",
    "name": "lib/selection/OnPageshow.js",
    "content": "/**\n * selection.OnPageshow() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('pageshow');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('pageshow', callback);\n  }\n  else\n  {\n    return this.on('pageshow', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnPageshow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 551,
    "kind": "function",
    "name": "OnPageshow",
    "memberof": "lib/selection/OnPageshow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnPageshow.js~OnPageshow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnPageshow.js",
    "importStyle": "OnPageshow",
    "description": "selection.OnPageshow() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 552,
    "kind": "file",
    "name": "lib/selection/OnPaste.js",
    "content": "/**\n * selection.OnPaste() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('paste');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('paste', callback);\n  }\n  else\n  {\n    return this.on('paste', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnPaste.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 553,
    "kind": "function",
    "name": "OnPaste",
    "memberof": "lib/selection/OnPaste.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnPaste.js~OnPaste",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnPaste.js",
    "importStyle": "OnPaste",
    "description": "selection.OnPaste() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 554,
    "kind": "file",
    "name": "lib/selection/OnPause.js",
    "content": "/**\n * selection.OnPause() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('pause');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('pause', callback);\n  }\n  else\n  {\n    return this.on('pause', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnPause.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 555,
    "kind": "function",
    "name": "OnPause",
    "memberof": "lib/selection/OnPause.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnPause.js~OnPause",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnPause.js",
    "importStyle": "OnPause",
    "description": "selection.OnPause() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 556,
    "kind": "file",
    "name": "lib/selection/OnPlay.js",
    "content": "/**\n * selection.OnPlay() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('play');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('play', callback);\n  }\n  else\n  {\n    return this.on('play', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnPlay.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 557,
    "kind": "function",
    "name": "OnPlay",
    "memberof": "lib/selection/OnPlay.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnPlay.js~OnPlay",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnPlay.js",
    "importStyle": "OnPlay",
    "description": "selection.OnPlay() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 558,
    "kind": "file",
    "name": "lib/selection/OnPlaying.js",
    "content": "/**\n * selection.OnPlaying() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('playing');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('playing', callback);\n  }\n  else\n  {\n    return this.on('playing', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnPlaying.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 559,
    "kind": "function",
    "name": "OnPlaying",
    "memberof": "lib/selection/OnPlaying.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnPlaying.js~OnPlaying",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnPlaying.js",
    "importStyle": "OnPlaying",
    "description": "selection.OnPlaying() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 560,
    "kind": "file",
    "name": "lib/selection/OnPopstate.js",
    "content": "/**\n * selection.OnPopstate() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('popstate');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('popstate', callback);\n  }\n  else\n  {\n    return this.on('popstate', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnPopstate.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 561,
    "kind": "function",
    "name": "OnPopstate",
    "memberof": "lib/selection/OnPopstate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnPopstate.js~OnPopstate",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnPopstate.js",
    "importStyle": "OnPopstate",
    "description": "selection.OnPopstate() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 562,
    "kind": "file",
    "name": "lib/selection/OnProgress.js",
    "content": "/**\n * selection.OnProgress() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('progress');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('progress', callback);\n  }\n  else\n  {\n    return this.on('progress', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnProgress.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 563,
    "kind": "function",
    "name": "OnProgress",
    "memberof": "lib/selection/OnProgress.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnProgress.js~OnProgress",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnProgress.js",
    "importStyle": "OnProgress",
    "description": "selection.OnProgress() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 564,
    "kind": "file",
    "name": "lib/selection/OnRatechange.js",
    "content": "/**\n * selection.OnRatechange() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('ratechange');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('ratechange', callback);\n  }\n  else\n  {\n    return this.on('ratechange', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnRatechange.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 565,
    "kind": "function",
    "name": "OnRatechange",
    "memberof": "lib/selection/OnRatechange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnRatechange.js~OnRatechange",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnRatechange.js",
    "importStyle": "OnRatechange",
    "description": "selection.OnRatechange() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 566,
    "kind": "file",
    "name": "lib/selection/OnReset.js",
    "content": "/**\n * selection.OnReset() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('reset');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('reset', callback);\n  }\n  else\n  {\n    return this.on('reset', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnReset.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 567,
    "kind": "function",
    "name": "OnReset",
    "memberof": "lib/selection/OnReset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnReset.js~OnReset",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnReset.js",
    "importStyle": "OnReset",
    "description": "selection.OnReset() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 568,
    "kind": "file",
    "name": "lib/selection/OnResize.js",
    "content": "/**\n * selection.OnResize() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('resize');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('resize', callback);\n  }\n  else\n  {\n    return this.on('resize', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnResize.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 569,
    "kind": "function",
    "name": "OnResize",
    "memberof": "lib/selection/OnResize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnResize.js~OnResize",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnResize.js",
    "importStyle": "OnResize",
    "description": "selection.OnResize() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 570,
    "kind": "file",
    "name": "lib/selection/OnScroll.js",
    "content": "/**\n * selection.OnScroll() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('scroll');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('scroll', callback);\n  }\n  else\n  {\n    return this.on('scroll', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnScroll.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 571,
    "kind": "function",
    "name": "OnScroll",
    "memberof": "lib/selection/OnScroll.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnScroll.js~OnScroll",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnScroll.js",
    "importStyle": "OnScroll",
    "description": "selection.OnScroll() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 572,
    "kind": "file",
    "name": "lib/selection/OnSearch.js",
    "content": "/**\n * selection.OnSearch() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('search');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('search', callback);\n  }\n  else\n  {\n    return this.on('search', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnSearch.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 573,
    "kind": "function",
    "name": "OnSearch",
    "memberof": "lib/selection/OnSearch.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnSearch.js~OnSearch",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnSearch.js",
    "importStyle": "OnSearch",
    "description": "selection.OnSearch() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 574,
    "kind": "file",
    "name": "lib/selection/OnSeeked.js",
    "content": "/**\n * selection.OnSeeked() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('seeked');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('seeked', callback);\n  }\n  else\n  {\n    return this.on('seeked', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnSeeked.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 575,
    "kind": "function",
    "name": "OnSeeked",
    "memberof": "lib/selection/OnSeeked.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnSeeked.js~OnSeeked",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnSeeked.js",
    "importStyle": "OnSeeked",
    "description": "selection.OnSeeked() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 576,
    "kind": "file",
    "name": "lib/selection/OnSeeking.js",
    "content": "/**\n * selection.OnSeeking() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('seeking');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('seeking', callback);\n  }\n  else\n  {\n    return this.on('seeking', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnSeeking.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 577,
    "kind": "function",
    "name": "OnSeeking",
    "memberof": "lib/selection/OnSeeking.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnSeeking.js~OnSeeking",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnSeeking.js",
    "importStyle": "OnSeeking",
    "description": "selection.OnSeeking() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 578,
    "kind": "file",
    "name": "lib/selection/OnSelect.js",
    "content": "/**\n * selection.OnSelect() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('select');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('select', callback);\n  }\n  else\n  {\n    return this.on('select', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnSelect.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 579,
    "kind": "function",
    "name": "OnSelect",
    "memberof": "lib/selection/OnSelect.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnSelect.js~OnSelect",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnSelect.js",
    "importStyle": "OnSelect",
    "description": "selection.OnSelect() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 580,
    "kind": "file",
    "name": "lib/selection/OnShow.js",
    "content": "/**\n * selection.OnShow() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('show');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('show', callback);\n  }\n  else\n  {\n    return this.on('show', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnShow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 581,
    "kind": "function",
    "name": "OnShow",
    "memberof": "lib/selection/OnShow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnShow.js~OnShow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnShow.js",
    "importStyle": "OnShow",
    "description": "selection.OnShow() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 582,
    "kind": "file",
    "name": "lib/selection/OnStalled.js",
    "content": "/**\n * selection.OnStalled() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('stalled');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('stalled', callback);\n  }\n  else\n  {\n    return this.on('stalled', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnStalled.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 583,
    "kind": "function",
    "name": "OnStalled",
    "memberof": "lib/selection/OnStalled.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnStalled.js~OnStalled",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnStalled.js",
    "importStyle": "OnStalled",
    "description": "selection.OnStalled() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 584,
    "kind": "file",
    "name": "lib/selection/OnStorage.js",
    "content": "/**\n * selection.OnStorage() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('storage');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('storage', callback);\n  }\n  else\n  {\n    return this.on('storage', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnStorage.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 585,
    "kind": "function",
    "name": "OnStorage",
    "memberof": "lib/selection/OnStorage.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnStorage.js~OnStorage",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnStorage.js",
    "importStyle": "OnStorage",
    "description": "selection.OnStorage() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 586,
    "kind": "file",
    "name": "lib/selection/OnSubmit.js",
    "content": "/**\n * selection.OnSubmit() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('submit');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('submit', callback);\n  }\n  else\n  {\n    return this.on('submit', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnSubmit.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 587,
    "kind": "function",
    "name": "OnSubmit",
    "memberof": "lib/selection/OnSubmit.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnSubmit.js~OnSubmit",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnSubmit.js",
    "importStyle": "OnSubmit",
    "description": "selection.OnSubmit() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 588,
    "kind": "file",
    "name": "lib/selection/OnSuspend.js",
    "content": "/**\n * selection.OnSuspend() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('suspend');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('suspend', callback);\n  }\n  else\n  {\n    return this.on('suspend', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnSuspend.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 589,
    "kind": "function",
    "name": "OnSuspend",
    "memberof": "lib/selection/OnSuspend.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnSuspend.js~OnSuspend",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnSuspend.js",
    "importStyle": "OnSuspend",
    "description": "selection.OnSuspend() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 590,
    "kind": "file",
    "name": "lib/selection/OnTimeupdate.js",
    "content": "/**\n * selection.OnTimeupdate() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('timeupdate');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('timeupdate', callback);\n  }\n  else\n  {\n    return this.on('timeupdate', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnTimeupdate.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 591,
    "kind": "function",
    "name": "OnTimeupdate",
    "memberof": "lib/selection/OnTimeupdate.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnTimeupdate.js~OnTimeupdate",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnTimeupdate.js",
    "importStyle": "OnTimeupdate",
    "description": "selection.OnTimeupdate() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 592,
    "kind": "file",
    "name": "lib/selection/OnToggle.js",
    "content": "/**\n * selection.OnToggle() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('toggle');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('toggle', callback);\n  }\n  else\n  {\n    return this.on('toggle', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnToggle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 593,
    "kind": "function",
    "name": "OnToggle",
    "memberof": "lib/selection/OnToggle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnToggle.js~OnToggle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnToggle.js",
    "importStyle": "OnToggle",
    "description": "selection.OnToggle() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 594,
    "kind": "file",
    "name": "lib/selection/OnUnload.js",
    "content": "/**\n * selection.OnUnload() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('unload');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('unload', callback);\n  }\n  else\n  {\n    return this.on('unload', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnUnload.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 595,
    "kind": "function",
    "name": "OnUnload",
    "memberof": "lib/selection/OnUnload.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnUnload.js~OnUnload",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnUnload.js",
    "importStyle": "OnUnload",
    "description": "selection.OnUnload() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 596,
    "kind": "file",
    "name": "lib/selection/OnVolumechange.js",
    "content": "/**\n * selection.OnVolumechange() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('volumechange');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('volumechange', callback);\n  }\n  else\n  {\n    return this.on('volumechange', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnVolumechange.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 597,
    "kind": "function",
    "name": "OnVolumechange",
    "memberof": "lib/selection/OnVolumechange.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnVolumechange.js~OnVolumechange",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnVolumechange.js",
    "importStyle": "OnVolumechange",
    "description": "selection.OnVolumechange() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 598,
    "kind": "file",
    "name": "lib/selection/OnWaiting.js",
    "content": "/**\n * selection.OnWaiting() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('waiting');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('waiting', callback);\n  }\n  else\n  {\n    return this.on('waiting', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnWaiting.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 599,
    "kind": "function",
    "name": "OnWaiting",
    "memberof": "lib/selection/OnWaiting.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnWaiting.js~OnWaiting",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnWaiting.js",
    "importStyle": "OnWaiting",
    "description": "selection.OnWaiting() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 600,
    "kind": "file",
    "name": "lib/selection/OnWheel.js",
    "content": "/**\n * selection.OnWheel() attaches or returns a listner to selection\n * @param {string} [callback] callback function\n * @param {boolean} [capture] capture option\n * @return selected if setting or current value\n */\nexport default function (callback, capture)\n{\n  if (arguments.length < 1)\n  {\n    return this.on('wheel');\n  }\n  else if (arguments.length < 2)\n  {\n    return this.on('wheel', callback);\n  }\n  else\n  {\n    return this.on('wheel', callback, capture);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OnWheel.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 601,
    "kind": "function",
    "name": "OnWheel",
    "memberof": "lib/selection/OnWheel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OnWheel.js~OnWheel",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OnWheel.js",
    "importStyle": "OnWheel",
    "description": "selection.OnWheel() attaches or returns a listner to selection",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "callback",
        "description": "callback function"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "capture",
        "description": "capture option"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 602,
    "kind": "file",
    "name": "lib/selection/Optgroup.js",
    "content": "/**\n * selection.Optgroup() creates &lt;optgroup&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('optgroup')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Optgroup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 603,
    "kind": "function",
    "name": "Optgroup",
    "memberof": "lib/selection/Optgroup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Optgroup.js~Optgroup",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Optgroup.js",
    "importStyle": "Optgroup",
    "description": "selection.Optgroup() creates &lt;optgroup&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 604,
    "kind": "file",
    "name": "lib/selection/Option.js",
    "content": "/**\n * selection.Option() creates &lt;option&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('option')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Option.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 605,
    "kind": "function",
    "name": "Option",
    "memberof": "lib/selection/Option.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Option.js~Option",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Option.js",
    "importStyle": "Option",
    "description": "selection.Option() creates &lt;option&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 606,
    "kind": "file",
    "name": "lib/selection/Options.js",
    "content": "/**\n * selection.Options() creates a list of child &lt;option&gt; elements\n * @param {string} [options=''] array of strngs or key value object containing labels\n * @param {string} [selected=''] selected element\n * @return selected\n */\nexport default function (options, selected)\n{\n  if (Array.isArray(options))\n  {\n    return this.Children(options, 'option', function (elem)\n    {\n      elem.html(id)\n        .attr('selected', function (i)\n        {\n          return (i === selected ? 'selected' : null);\n        });\n    });\n  }\n  else\n  {\n    return this.Children(Object.keys(options), 'option', function (elem)\n    {\n      elem.html(function (i)\n        {\n          return options[i]\n        })\n        .attr('value', id)\n        .attr('selected', function (i)\n        {\n          return ((i === selected || options[i] === selected) ? 'selected' : null);\n        });\n    });\n  }\n}\n\nfunction id (i)\n{\n  return i;\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Options.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 607,
    "kind": "function",
    "name": "Options",
    "memberof": "lib/selection/Options.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Options.js~Options",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Options.js",
    "importStyle": "Options",
    "description": "selection.Options() creates a list of child &lt;option&gt; elements",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "options",
        "description": "array of strngs or key value object containing labels"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "selected",
        "description": "selected element"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected"
    }
  },
  {
    "__docId__": 608,
    "kind": "function",
    "name": "id",
    "memberof": "lib/selection/Options.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Options.js~id",
    "access": null,
    "export": false,
    "importPath": "d3-html/lib/selection/Options.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 609,
    "kind": "file",
    "name": "lib/selection/Order.js",
    "content": "/**\n * selection.Order() get or change order style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('order');\n  }\n  else\n  {\n    return this.style('order', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Order.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 610,
    "kind": "function",
    "name": "Order",
    "memberof": "lib/selection/Order.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Order.js~Order",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Order.js",
    "importStyle": "Order",
    "description": "selection.Order() get or change order style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 611,
    "kind": "file",
    "name": "lib/selection/Outline.js",
    "content": "/**\n * selection.Outline() get or change outline style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('outline');\n  }\n  else\n  {\n    return this.style('outline', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Outline.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 612,
    "kind": "function",
    "name": "Outline",
    "memberof": "lib/selection/Outline.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Outline.js~Outline",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Outline.js",
    "importStyle": "Outline",
    "description": "selection.Outline() get or change outline style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 613,
    "kind": "file",
    "name": "lib/selection/OutlineColor.js",
    "content": "/**\n * selection.OutlineColor() get or change outline-color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('outline-color');\n  }\n  else\n  {\n    return this.style('outline-color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OutlineColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 614,
    "kind": "function",
    "name": "OutlineColor",
    "memberof": "lib/selection/OutlineColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OutlineColor.js~OutlineColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OutlineColor.js",
    "importStyle": "OutlineColor",
    "description": "selection.OutlineColor() get or change outline-color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 615,
    "kind": "file",
    "name": "lib/selection/OutlineOffset.js",
    "content": "/**\n * selection.OutlineOffset() get or change outline-offset style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('outline-offset');\n  }\n  else\n  {\n    return this.style('outline-offset', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OutlineOffset.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 616,
    "kind": "function",
    "name": "OutlineOffset",
    "memberof": "lib/selection/OutlineOffset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OutlineOffset.js~OutlineOffset",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OutlineOffset.js",
    "importStyle": "OutlineOffset",
    "description": "selection.OutlineOffset() get or change outline-offset style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 617,
    "kind": "file",
    "name": "lib/selection/OutlineStyle.js",
    "content": "/**\n * selection.OutlineStyle() get or change outline-style style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('outline-style');\n  }\n  else\n  {\n    return this.style('outline-style', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OutlineStyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 618,
    "kind": "function",
    "name": "OutlineStyle",
    "memberof": "lib/selection/OutlineStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OutlineStyle.js~OutlineStyle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OutlineStyle.js",
    "importStyle": "OutlineStyle",
    "description": "selection.OutlineStyle() get or change outline-style style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 619,
    "kind": "file",
    "name": "lib/selection/OutlineWidth.js",
    "content": "/**\n * selection.OutlineWidth() get or change outline-width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('outline-width');\n  }\n  else\n  {\n    return this.style('outline-width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OutlineWidth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 620,
    "kind": "function",
    "name": "OutlineWidth",
    "memberof": "lib/selection/OutlineWidth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OutlineWidth.js~OutlineWidth",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OutlineWidth.js",
    "importStyle": "OutlineWidth",
    "description": "selection.OutlineWidth() get or change outline-width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 621,
    "kind": "file",
    "name": "lib/selection/Output.js",
    "content": "/**\n * selection.Output() creates &lt;output&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('output')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Output.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 622,
    "kind": "function",
    "name": "Output",
    "memberof": "lib/selection/Output.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Output.js~Output",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Output.js",
    "importStyle": "Output",
    "description": "selection.Output() creates &lt;output&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 623,
    "kind": "file",
    "name": "lib/selection/Overflow.js",
    "content": "/**\n * selection.Overflow() get or change overflow style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('overflow');\n  }\n  else\n  {\n    return this.style('overflow', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Overflow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 624,
    "kind": "function",
    "name": "Overflow",
    "memberof": "lib/selection/Overflow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Overflow.js~Overflow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Overflow.js",
    "importStyle": "Overflow",
    "description": "selection.Overflow() get or change overflow style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 625,
    "kind": "file",
    "name": "lib/selection/OverflowWrap.js",
    "content": "/**\n * selection.OverflowWrap() get or change overflow-wrap style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('overflow-wrap');\n  }\n  else\n  {\n    return this.style('overflow-wrap', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OverflowWrap.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 626,
    "kind": "function",
    "name": "OverflowWrap",
    "memberof": "lib/selection/OverflowWrap.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OverflowWrap.js~OverflowWrap",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OverflowWrap.js",
    "importStyle": "OverflowWrap",
    "description": "selection.OverflowWrap() get or change overflow-wrap style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 627,
    "kind": "file",
    "name": "lib/selection/OverflowX.js",
    "content": "/**\n * selection.OverflowX() get or change overflow-x style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('overflow-x');\n  }\n  else\n  {\n    return this.style('overflow-x', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OverflowX.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 628,
    "kind": "function",
    "name": "OverflowX",
    "memberof": "lib/selection/OverflowX.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OverflowX.js~OverflowX",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OverflowX.js",
    "importStyle": "OverflowX",
    "description": "selection.OverflowX() get or change overflow-x style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 629,
    "kind": "file",
    "name": "lib/selection/OverflowY.js",
    "content": "/**\n * selection.OverflowY() get or change overflow-y style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('overflow-y');\n  }\n  else\n  {\n    return this.style('overflow-y', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/OverflowY.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 630,
    "kind": "function",
    "name": "OverflowY",
    "memberof": "lib/selection/OverflowY.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/OverflowY.js~OverflowY",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/OverflowY.js",
    "importStyle": "OverflowY",
    "description": "selection.OverflowY() get or change overflow-y style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 631,
    "kind": "file",
    "name": "lib/selection/P.js",
    "content": "/**\n * selection.P() creates &lt;p&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('p')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/P.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 632,
    "kind": "function",
    "name": "P",
    "memberof": "lib/selection/P.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/P.js~P",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/P.js",
    "importStyle": "P",
    "description": "selection.P() creates &lt;p&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 633,
    "kind": "file",
    "name": "lib/selection/Padding.js",
    "content": "/**\n * selection.Padding() get or change padding style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('padding');\n  }\n  else\n  {\n    return this.style('padding', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Padding.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 634,
    "kind": "function",
    "name": "Padding",
    "memberof": "lib/selection/Padding.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Padding.js~Padding",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Padding.js",
    "importStyle": "Padding",
    "description": "selection.Padding() get or change padding style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 635,
    "kind": "file",
    "name": "lib/selection/PaddingBottom.js",
    "content": "/**\n * selection.PaddingBottom() get or change padding-bottom style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('padding-bottom');\n  }\n  else\n  {\n    return this.style('padding-bottom', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/PaddingBottom.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 636,
    "kind": "function",
    "name": "PaddingBottom",
    "memberof": "lib/selection/PaddingBottom.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/PaddingBottom.js~PaddingBottom",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/PaddingBottom.js",
    "importStyle": "PaddingBottom",
    "description": "selection.PaddingBottom() get or change padding-bottom style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 637,
    "kind": "file",
    "name": "lib/selection/PaddingLeft.js",
    "content": "/**\n * selection.PaddingLeft() get or change padding-left style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('padding-left');\n  }\n  else\n  {\n    return this.style('padding-left', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/PaddingLeft.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 638,
    "kind": "function",
    "name": "PaddingLeft",
    "memberof": "lib/selection/PaddingLeft.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/PaddingLeft.js~PaddingLeft",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/PaddingLeft.js",
    "importStyle": "PaddingLeft",
    "description": "selection.PaddingLeft() get or change padding-left style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 639,
    "kind": "file",
    "name": "lib/selection/PaddingRight.js",
    "content": "/**\n * selection.PaddingRight() get or change padding-right style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('padding-right');\n  }\n  else\n  {\n    return this.style('padding-right', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/PaddingRight.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 640,
    "kind": "function",
    "name": "PaddingRight",
    "memberof": "lib/selection/PaddingRight.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/PaddingRight.js~PaddingRight",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/PaddingRight.js",
    "importStyle": "PaddingRight",
    "description": "selection.PaddingRight() get or change padding-right style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 641,
    "kind": "file",
    "name": "lib/selection/PaddingTop.js",
    "content": "/**\n * selection.PaddingTop() get or change padding-top style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('padding-top');\n  }\n  else\n  {\n    return this.style('padding-top', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/PaddingTop.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 642,
    "kind": "function",
    "name": "PaddingTop",
    "memberof": "lib/selection/PaddingTop.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/PaddingTop.js~PaddingTop",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/PaddingTop.js",
    "importStyle": "PaddingTop",
    "description": "selection.PaddingTop() get or change padding-top style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 643,
    "kind": "file",
    "name": "lib/selection/Param.js",
    "content": "/**\n * selection.Param() creates &lt;param&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('param')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Param.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 644,
    "kind": "function",
    "name": "Param",
    "memberof": "lib/selection/Param.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Param.js~Param",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Param.js",
    "importStyle": "Param",
    "description": "selection.Param() creates &lt;param&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 645,
    "kind": "file",
    "name": "lib/selection/ParentNode.js",
    "content": "/**\n * selection.ParentNode() get or change parentNode property value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.property('parentNode');\n  }\n  else\n  {\n    return this.property('parentNode', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/ParentNode.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 646,
    "kind": "function",
    "name": "ParentNode",
    "memberof": "lib/selection/ParentNode.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/ParentNode.js~ParentNode",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/ParentNode.js",
    "importStyle": "ParentNode",
    "description": "selection.ParentNode() get or change parentNode property value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 647,
    "kind": "file",
    "name": "lib/selection/Password.js",
    "content": "/**\n * selection.Password() creates &lt;input&gt; element of type password\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'password')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Password.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 648,
    "kind": "function",
    "name": "Password",
    "memberof": "lib/selection/Password.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Password.js~Password",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Password.js",
    "importStyle": "Password",
    "description": "selection.Password() creates &lt;input&gt; element of type password",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 649,
    "kind": "file",
    "name": "lib/selection/Pattern.js",
    "content": "/**\n * selection.Pattern() get or change pattern attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('pattern');\n  }\n  else\n  {\n    return this.attr('pattern', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Pattern.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 650,
    "kind": "function",
    "name": "Pattern",
    "memberof": "lib/selection/Pattern.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Pattern.js~Pattern",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Pattern.js",
    "importStyle": "Pattern",
    "description": "selection.Pattern() get or change pattern attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 651,
    "kind": "file",
    "name": "lib/selection/Placeholder.js",
    "content": "/**\n * selection.Placeholder() get or change placeholder attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('placeholder');\n  }\n  else\n  {\n    return this.attr('placeholder', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Placeholder.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 652,
    "kind": "function",
    "name": "Placeholder",
    "memberof": "lib/selection/Placeholder.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Placeholder.js~Placeholder",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Placeholder.js",
    "importStyle": "Placeholder",
    "description": "selection.Placeholder() get or change placeholder attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 653,
    "kind": "file",
    "name": "lib/selection/Position.js",
    "content": "/**\n * selection.Position() get or change position style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('position');\n  }\n  else\n  {\n    return this.style('position', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Position.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 654,
    "kind": "function",
    "name": "Position",
    "memberof": "lib/selection/Position.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Position.js~Position",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Position.js",
    "importStyle": "Position",
    "description": "selection.Position() get or change position style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 655,
    "kind": "file",
    "name": "lib/selection/Pre.js",
    "content": "/**\n * selection.Pre() creates &lt;pre&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('pre')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Pre.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 656,
    "kind": "function",
    "name": "Pre",
    "memberof": "lib/selection/Pre.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Pre.js~Pre",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Pre.js",
    "importStyle": "Pre",
    "description": "selection.Pre() creates &lt;pre&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 657,
    "kind": "file",
    "name": "lib/selection/Progress.js",
    "content": "/**\n * selection.Progress() creates &lt;progress&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('progress')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Progress.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 658,
    "kind": "function",
    "name": "Progress",
    "memberof": "lib/selection/Progress.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Progress.js~Progress",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Progress.js",
    "importStyle": "Progress",
    "description": "selection.Progress() creates &lt;progress&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 659,
    "kind": "file",
    "name": "lib/selection/Q.js",
    "content": "/**\n * selection.Q() creates &lt;q&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('q')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Q.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 660,
    "kind": "function",
    "name": "Q",
    "memberof": "lib/selection/Q.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Q.js~Q",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Q.js",
    "importStyle": "Q",
    "description": "selection.Q() creates &lt;q&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 661,
    "kind": "file",
    "name": "lib/selection/Radio.js",
    "content": "/**\n * selection.Radio() creates &lt;input&gt; element of type radio\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'radio')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Radio.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 662,
    "kind": "function",
    "name": "Radio",
    "memberof": "lib/selection/Radio.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Radio.js~Radio",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Radio.js",
    "importStyle": "Radio",
    "description": "selection.Radio() creates &lt;input&gt; element of type radio",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 663,
    "kind": "file",
    "name": "lib/selection/Range.js",
    "content": "/**\n * selection.Range() creates &lt;input&gt; element of type range\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'range')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Range.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 664,
    "kind": "function",
    "name": "Range",
    "memberof": "lib/selection/Range.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Range.js~Range",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Range.js",
    "importStyle": "Range",
    "description": "selection.Range() creates &lt;input&gt; element of type range",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 665,
    "kind": "file",
    "name": "lib/selection/Reset.js",
    "content": "/**\n * selection.Reset() creates &lt;input&gt; element of type reset\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'reset')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Reset.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 666,
    "kind": "function",
    "name": "Reset",
    "memberof": "lib/selection/Reset.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Reset.js~Reset",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Reset.js",
    "importStyle": "Reset",
    "description": "selection.Reset() creates &lt;input&gt; element of type reset",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 667,
    "kind": "file",
    "name": "lib/selection/Resize.js",
    "content": "/**\n * selection.Resize() get or change resize style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('resize');\n  }\n  else\n  {\n    return this.style('resize', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Resize.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 668,
    "kind": "function",
    "name": "Resize",
    "memberof": "lib/selection/Resize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Resize.js~Resize",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Resize.js",
    "importStyle": "Resize",
    "description": "selection.Resize() get or change resize style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 669,
    "kind": "file",
    "name": "lib/selection/Right.js",
    "content": "/**\n * selection.Right() get or change right style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('right');\n  }\n  else\n  {\n    return this.style('right', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Right.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 670,
    "kind": "function",
    "name": "Right",
    "memberof": "lib/selection/Right.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Right.js~Right",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Right.js",
    "importStyle": "Right",
    "description": "selection.Right() get or change right style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 671,
    "kind": "file",
    "name": "lib/selection/Rowspan.js",
    "content": "/**\n * selection.Rowspan() get or change rowspan attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('rowspan');\n  }\n  else\n  {\n    return this.attr('rowspan', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Rowspan.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 672,
    "kind": "function",
    "name": "Rowspan",
    "memberof": "lib/selection/Rowspan.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Rowspan.js~Rowspan",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Rowspan.js",
    "importStyle": "Rowspan",
    "description": "selection.Rowspan() get or change rowspan attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 673,
    "kind": "file",
    "name": "lib/selection/Rp.js",
    "content": "/**\n * selection.Rp() creates &lt;rp&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('rp')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Rp.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 674,
    "kind": "function",
    "name": "Rp",
    "memberof": "lib/selection/Rp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Rp.js~Rp",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Rp.js",
    "importStyle": "Rp",
    "description": "selection.Rp() creates &lt;rp&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 675,
    "kind": "file",
    "name": "lib/selection/Rt.js",
    "content": "/**\n * selection.Rt() creates &lt;rt&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('rt')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Rt.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 676,
    "kind": "function",
    "name": "Rt",
    "memberof": "lib/selection/Rt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Rt.js~Rt",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Rt.js",
    "importStyle": "Rt",
    "description": "selection.Rt() creates &lt;rt&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 677,
    "kind": "file",
    "name": "lib/selection/Rtc.js",
    "content": "/**\n * selection.Rtc() creates &lt;rtc&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('rtc')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Rtc.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 678,
    "kind": "function",
    "name": "Rtc",
    "memberof": "lib/selection/Rtc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Rtc.js~Rtc",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Rtc.js",
    "importStyle": "Rtc",
    "description": "selection.Rtc() creates &lt;rtc&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 679,
    "kind": "file",
    "name": "lib/selection/Ruby.js",
    "content": "/**\n * selection.Ruby() creates &lt;ruby&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('ruby')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Ruby.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 680,
    "kind": "function",
    "name": "Ruby",
    "memberof": "lib/selection/Ruby.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Ruby.js~Ruby",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Ruby.js",
    "importStyle": "Ruby",
    "description": "selection.Ruby() creates &lt;ruby&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 681,
    "kind": "file",
    "name": "lib/selection/S.js",
    "content": "/**\n * selection.S() creates &lt;s&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('s')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/S.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 682,
    "kind": "function",
    "name": "S",
    "memberof": "lib/selection/S.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/S.js~S",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/S.js",
    "importStyle": "S",
    "description": "selection.S() creates &lt;s&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 683,
    "kind": "file",
    "name": "lib/selection/Samp.js",
    "content": "/**\n * selection.Samp() creates &lt;samp&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('samp')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Samp.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 684,
    "kind": "function",
    "name": "Samp",
    "memberof": "lib/selection/Samp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Samp.js~Samp",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Samp.js",
    "importStyle": "Samp",
    "description": "selection.Samp() creates &lt;samp&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 685,
    "kind": "file",
    "name": "lib/selection/Script.js",
    "content": "/**\n * selection.Script() creates &lt;script&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('script')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Script.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 686,
    "kind": "function",
    "name": "Script",
    "memberof": "lib/selection/Script.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Script.js~Script",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Script.js",
    "importStyle": "Script",
    "description": "selection.Script() creates &lt;script&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 687,
    "kind": "file",
    "name": "lib/selection/Search.js",
    "content": "/**\n * selection.Search() creates &lt;input&gt; element of type search\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'search')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Search.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 688,
    "kind": "function",
    "name": "Search",
    "memberof": "lib/selection/Search.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Search.js~Search",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Search.js",
    "importStyle": "Search",
    "description": "selection.Search() creates &lt;input&gt; element of type search",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 689,
    "kind": "file",
    "name": "lib/selection/Section.js",
    "content": "/**\n * selection.Section() creates &lt;section&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('section')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Section.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 690,
    "kind": "function",
    "name": "Section",
    "memberof": "lib/selection/Section.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Section.js~Section",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Section.js",
    "importStyle": "Section",
    "description": "selection.Section() creates &lt;section&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 691,
    "kind": "file",
    "name": "lib/selection/Select.js",
    "content": "/**\n * selection.Select() creates &lt;select&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('select')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Select.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 692,
    "kind": "function",
    "name": "Select",
    "memberof": "lib/selection/Select.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Select.js~Select",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Select.js",
    "importStyle": "Select",
    "description": "selection.Select() creates &lt;select&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 693,
    "kind": "file",
    "name": "lib/selection/Selected.js",
    "content": "/**\n * selection.Selected() get or change selected attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('selected');\n  }\n  else\n  {\n    return this.attr('selected', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Selected.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 694,
    "kind": "function",
    "name": "Selected",
    "memberof": "lib/selection/Selected.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Selected.js~Selected",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Selected.js",
    "importStyle": "Selected",
    "description": "selection.Selected() get or change selected attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 695,
    "kind": "file",
    "name": "lib/selection/Shadow.js",
    "content": "/**\n * selection.Shadow() creates &lt;shadow&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('shadow')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Shadow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 696,
    "kind": "function",
    "name": "Shadow",
    "memberof": "lib/selection/Shadow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Shadow.js~Shadow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Shadow.js",
    "importStyle": "Shadow",
    "description": "selection.Shadow() creates &lt;shadow&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 697,
    "kind": "file",
    "name": "lib/selection/Small.js",
    "content": "/**\n * selection.Small() creates &lt;small&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('small')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Small.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 698,
    "kind": "function",
    "name": "Small",
    "memberof": "lib/selection/Small.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Small.js~Small",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Small.js",
    "importStyle": "Small",
    "description": "selection.Small() creates &lt;small&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 699,
    "kind": "file",
    "name": "lib/selection/Source.js",
    "content": "/**\n * selection.Source() creates &lt;source&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('source')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Source.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 700,
    "kind": "function",
    "name": "Source",
    "memberof": "lib/selection/Source.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Source.js~Source",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Source.js",
    "importStyle": "Source",
    "description": "selection.Source() creates &lt;source&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 701,
    "kind": "file",
    "name": "lib/selection/Span.js",
    "content": "/**\n * selection.Span() creates &lt;span&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('span')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Span.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 702,
    "kind": "function",
    "name": "Span",
    "memberof": "lib/selection/Span.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Span.js~Span",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Span.js",
    "importStyle": "Span",
    "description": "selection.Span() creates &lt;span&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 703,
    "kind": "file",
    "name": "lib/selection/Src.js",
    "content": "/**\n * selection.Src() get or change src attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('src');\n  }\n  else\n  {\n    return this.attr('src', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Src.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 704,
    "kind": "function",
    "name": "Src",
    "memberof": "lib/selection/Src.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Src.js~Src",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Src.js",
    "importStyle": "Src",
    "description": "selection.Src() get or change src attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 705,
    "kind": "file",
    "name": "lib/selection/Strong.js",
    "content": "/**\n * selection.Strong() creates &lt;strong&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('strong')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Strong.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 706,
    "kind": "function",
    "name": "Strong",
    "memberof": "lib/selection/Strong.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Strong.js~Strong",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Strong.js",
    "importStyle": "Strong",
    "description": "selection.Strong() creates &lt;strong&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 707,
    "kind": "file",
    "name": "lib/selection/Sub.js",
    "content": "/**\n * selection.Sub() creates &lt;sub&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('sub')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Sub.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 708,
    "kind": "function",
    "name": "Sub",
    "memberof": "lib/selection/Sub.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Sub.js~Sub",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Sub.js",
    "importStyle": "Sub",
    "description": "selection.Sub() creates &lt;sub&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 709,
    "kind": "file",
    "name": "lib/selection/Submit.js",
    "content": "/**\n * selection.Submit() creates &lt;input&gt; element of type submit\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'submit')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Submit.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 710,
    "kind": "function",
    "name": "Submit",
    "memberof": "lib/selection/Submit.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Submit.js~Submit",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Submit.js",
    "importStyle": "Submit",
    "description": "selection.Submit() creates &lt;input&gt; element of type submit",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 711,
    "kind": "file",
    "name": "lib/selection/Summary.js",
    "content": "/**\n * selection.Summary() creates &lt;summary&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('summary')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Summary.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 712,
    "kind": "function",
    "name": "Summary",
    "memberof": "lib/selection/Summary.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Summary.js~Summary",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Summary.js",
    "importStyle": "Summary",
    "description": "selection.Summary() creates &lt;summary&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 713,
    "kind": "file",
    "name": "lib/selection/Sup.js",
    "content": "/**\n * selection.Sup() creates &lt;sup&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('sup')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Sup.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 714,
    "kind": "function",
    "name": "Sup",
    "memberof": "lib/selection/Sup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Sup.js~Sup",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Sup.js",
    "importStyle": "Sup",
    "description": "selection.Sup() creates &lt;sup&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 715,
    "kind": "file",
    "name": "lib/selection/Svg.js",
    "content": "/**\n * selection.Svg() creates &lt;svg&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('svg')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Svg.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 716,
    "kind": "function",
    "name": "Svg",
    "memberof": "lib/selection/Svg.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Svg.js~Svg",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Svg.js",
    "importStyle": "Svg",
    "description": "selection.Svg() creates &lt;svg&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 717,
    "kind": "file",
    "name": "lib/selection/TabSize.js",
    "content": "/**\n * selection.TabSize() get or change tab-size style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('tab-size');\n  }\n  else\n  {\n    return this.style('tab-size', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TabSize.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 718,
    "kind": "function",
    "name": "TabSize",
    "memberof": "lib/selection/TabSize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TabSize.js~TabSize",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TabSize.js",
    "importStyle": "TabSize",
    "description": "selection.TabSize() get or change tab-size style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 719,
    "kind": "file",
    "name": "lib/selection/Tabindex.js",
    "content": "/**\n * selection.Tabindex() get or change tabindex attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('tabindex');\n  }\n  else\n  {\n    return this.attr('tabindex', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Tabindex.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 720,
    "kind": "function",
    "name": "Tabindex",
    "memberof": "lib/selection/Tabindex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Tabindex.js~Tabindex",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Tabindex.js",
    "importStyle": "Tabindex",
    "description": "selection.Tabindex() get or change tabindex attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 721,
    "kind": "file",
    "name": "lib/selection/Table.js",
    "content": "/**\n * selection.Table() creates &lt;table&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('table')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Table.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 722,
    "kind": "function",
    "name": "Table",
    "memberof": "lib/selection/Table.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Table.js~Table",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Table.js",
    "importStyle": "Table",
    "description": "selection.Table() creates &lt;table&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 723,
    "kind": "file",
    "name": "lib/selection/TableLayout.js",
    "content": "/**\n * selection.TableLayout() get or change table-layout style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('table-layout');\n  }\n  else\n  {\n    return this.style('table-layout', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TableLayout.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 724,
    "kind": "function",
    "name": "TableLayout",
    "memberof": "lib/selection/TableLayout.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TableLayout.js~TableLayout",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TableLayout.js",
    "importStyle": "TableLayout",
    "description": "selection.TableLayout() get or change table-layout style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 725,
    "kind": "file",
    "name": "lib/selection/Target.js",
    "content": "/**\n * selection.Target() get or change target attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('target');\n  }\n  else\n  {\n    return this.attr('target', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Target.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 726,
    "kind": "function",
    "name": "Target",
    "memberof": "lib/selection/Target.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Target.js~Target",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Target.js",
    "importStyle": "Target",
    "description": "selection.Target() get or change target attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 727,
    "kind": "file",
    "name": "lib/selection/Tbody.js",
    "content": "/**\n * selection.Tbody() creates &lt;tbody&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('tbody')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Tbody.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 728,
    "kind": "function",
    "name": "Tbody",
    "memberof": "lib/selection/Tbody.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Tbody.js~Tbody",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Tbody.js",
    "importStyle": "Tbody",
    "description": "selection.Tbody() creates &lt;tbody&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 729,
    "kind": "file",
    "name": "lib/selection/Td.js",
    "content": "/**\n * selection.Td() creates &lt;td&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('td')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Td.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 730,
    "kind": "function",
    "name": "Td",
    "memberof": "lib/selection/Td.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Td.js~Td",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Td.js",
    "importStyle": "Td",
    "description": "selection.Td() creates &lt;td&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 731,
    "kind": "file",
    "name": "lib/selection/Tel.js",
    "content": "/**\n * selection.Tel() creates &lt;input&gt; element of type tel\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'tel')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Tel.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 732,
    "kind": "function",
    "name": "Tel",
    "memberof": "lib/selection/Tel.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Tel.js~Tel",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Tel.js",
    "importStyle": "Tel",
    "description": "selection.Tel() creates &lt;input&gt; element of type tel",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 733,
    "kind": "file",
    "name": "lib/selection/Template.js",
    "content": "/**\n * selection.Template() creates &lt;template&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('template')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Template.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 734,
    "kind": "function",
    "name": "Template",
    "memberof": "lib/selection/Template.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Template.js~Template",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Template.js",
    "importStyle": "Template",
    "description": "selection.Template() creates &lt;template&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 735,
    "kind": "file",
    "name": "lib/selection/Text.js",
    "content": "/**\n * selection.Text() creates &lt;input&gt; element of type text\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'text')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Text.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 736,
    "kind": "function",
    "name": "Text",
    "memberof": "lib/selection/Text.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Text.js~Text",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Text.js",
    "importStyle": "Text",
    "description": "selection.Text() creates &lt;input&gt; element of type text",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 737,
    "kind": "file",
    "name": "lib/selection/TextAlign.js",
    "content": "/**\n * selection.TextAlign() get or change text-align style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-align');\n  }\n  else\n  {\n    return this.style('text-align', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextAlign.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 738,
    "kind": "function",
    "name": "TextAlign",
    "memberof": "lib/selection/TextAlign.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextAlign.js~TextAlign",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextAlign.js",
    "importStyle": "TextAlign",
    "description": "selection.TextAlign() get or change text-align style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 739,
    "kind": "file",
    "name": "lib/selection/TextAlignLast.js",
    "content": "/**\n * selection.TextAlignLast() get or change text-align-last style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-align-last');\n  }\n  else\n  {\n    return this.style('text-align-last', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextAlignLast.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 740,
    "kind": "function",
    "name": "TextAlignLast",
    "memberof": "lib/selection/TextAlignLast.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextAlignLast.js~TextAlignLast",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextAlignLast.js",
    "importStyle": "TextAlignLast",
    "description": "selection.TextAlignLast() get or change text-align-last style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 741,
    "kind": "file",
    "name": "lib/selection/TextCombineUpright.js",
    "content": "/**\n * selection.TextCombineUpright() get or change text-combine-upright style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-combine-upright');\n  }\n  else\n  {\n    return this.style('text-combine-upright', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextCombineUpright.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 742,
    "kind": "function",
    "name": "TextCombineUpright",
    "memberof": "lib/selection/TextCombineUpright.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextCombineUpright.js~TextCombineUpright",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextCombineUpright.js",
    "importStyle": "TextCombineUpright",
    "description": "selection.TextCombineUpright() get or change text-combine-upright style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 743,
    "kind": "file",
    "name": "lib/selection/TextDecoration.js",
    "content": "/**\n * selection.TextDecoration() get or change text-decoration style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-decoration');\n  }\n  else\n  {\n    return this.style('text-decoration', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextDecoration.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 744,
    "kind": "function",
    "name": "TextDecoration",
    "memberof": "lib/selection/TextDecoration.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextDecoration.js~TextDecoration",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextDecoration.js",
    "importStyle": "TextDecoration",
    "description": "selection.TextDecoration() get or change text-decoration style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 745,
    "kind": "file",
    "name": "lib/selection/TextDecorationColor.js",
    "content": "/**\n * selection.TextDecorationColor() get or change text-decoration-color style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-decoration-color');\n  }\n  else\n  {\n    return this.style('text-decoration-color', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextDecorationColor.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 746,
    "kind": "function",
    "name": "TextDecorationColor",
    "memberof": "lib/selection/TextDecorationColor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextDecorationColor.js~TextDecorationColor",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextDecorationColor.js",
    "importStyle": "TextDecorationColor",
    "description": "selection.TextDecorationColor() get or change text-decoration-color style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 747,
    "kind": "file",
    "name": "lib/selection/TextDecorationLine.js",
    "content": "/**\n * selection.TextDecorationLine() get or change text-decoration-line style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-decoration-line');\n  }\n  else\n  {\n    return this.style('text-decoration-line', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextDecorationLine.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 748,
    "kind": "function",
    "name": "TextDecorationLine",
    "memberof": "lib/selection/TextDecorationLine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextDecorationLine.js~TextDecorationLine",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextDecorationLine.js",
    "importStyle": "TextDecorationLine",
    "description": "selection.TextDecorationLine() get or change text-decoration-line style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 749,
    "kind": "file",
    "name": "lib/selection/TextDecorationStyle.js",
    "content": "/**\n * selection.TextDecorationStyle() get or change text-decoration-style style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-decoration-style');\n  }\n  else\n  {\n    return this.style('text-decoration-style', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextDecorationStyle.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 750,
    "kind": "function",
    "name": "TextDecorationStyle",
    "memberof": "lib/selection/TextDecorationStyle.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextDecorationStyle.js~TextDecorationStyle",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextDecorationStyle.js",
    "importStyle": "TextDecorationStyle",
    "description": "selection.TextDecorationStyle() get or change text-decoration-style style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 751,
    "kind": "file",
    "name": "lib/selection/TextIndent.js",
    "content": "/**\n * selection.TextIndent() get or change text-indent style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-indent');\n  }\n  else\n  {\n    return this.style('text-indent', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextIndent.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 752,
    "kind": "function",
    "name": "TextIndent",
    "memberof": "lib/selection/TextIndent.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextIndent.js~TextIndent",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextIndent.js",
    "importStyle": "TextIndent",
    "description": "selection.TextIndent() get or change text-indent style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 753,
    "kind": "file",
    "name": "lib/selection/TextJustify.js",
    "content": "/**\n * selection.TextJustify() get or change text-justify style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-justify');\n  }\n  else\n  {\n    return this.style('text-justify', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextJustify.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 754,
    "kind": "function",
    "name": "TextJustify",
    "memberof": "lib/selection/TextJustify.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextJustify.js~TextJustify",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextJustify.js",
    "importStyle": "TextJustify",
    "description": "selection.TextJustify() get or change text-justify style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 755,
    "kind": "file",
    "name": "lib/selection/TextOverflow.js",
    "content": "/**\n * selection.TextOverflow() get or change text-overflow style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-overflow');\n  }\n  else\n  {\n    return this.style('text-overflow', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextOverflow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 756,
    "kind": "function",
    "name": "TextOverflow",
    "memberof": "lib/selection/TextOverflow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextOverflow.js~TextOverflow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextOverflow.js",
    "importStyle": "TextOverflow",
    "description": "selection.TextOverflow() get or change text-overflow style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 757,
    "kind": "file",
    "name": "lib/selection/TextShadow.js",
    "content": "/**\n * selection.TextShadow() get or change text-shadow style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-shadow');\n  }\n  else\n  {\n    return this.style('text-shadow', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextShadow.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 758,
    "kind": "function",
    "name": "TextShadow",
    "memberof": "lib/selection/TextShadow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextShadow.js~TextShadow",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextShadow.js",
    "importStyle": "TextShadow",
    "description": "selection.TextShadow() get or change text-shadow style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 759,
    "kind": "file",
    "name": "lib/selection/TextTransform.js",
    "content": "/**\n * selection.TextTransform() get or change text-transform style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-transform');\n  }\n  else\n  {\n    return this.style('text-transform', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextTransform.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 760,
    "kind": "function",
    "name": "TextTransform",
    "memberof": "lib/selection/TextTransform.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextTransform.js~TextTransform",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextTransform.js",
    "importStyle": "TextTransform",
    "description": "selection.TextTransform() get or change text-transform style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 761,
    "kind": "file",
    "name": "lib/selection/TextUnderlinePosition.js",
    "content": "/**\n * selection.TextUnderlinePosition() get or change text-underline-position style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('text-underline-position');\n  }\n  else\n  {\n    return this.style('text-underline-position', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/TextUnderlinePosition.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 762,
    "kind": "function",
    "name": "TextUnderlinePosition",
    "memberof": "lib/selection/TextUnderlinePosition.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/TextUnderlinePosition.js~TextUnderlinePosition",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/TextUnderlinePosition.js",
    "importStyle": "TextUnderlinePosition",
    "description": "selection.TextUnderlinePosition() get or change text-underline-position style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 763,
    "kind": "file",
    "name": "lib/selection/Textarea.js",
    "content": "/**\n * selection.Textarea() creates &lt;textarea&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('textarea')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Textarea.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 764,
    "kind": "function",
    "name": "Textarea",
    "memberof": "lib/selection/Textarea.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Textarea.js~Textarea",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Textarea.js",
    "importStyle": "Textarea",
    "description": "selection.Textarea() creates &lt;textarea&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 765,
    "kind": "file",
    "name": "lib/selection/Tfoot.js",
    "content": "/**\n * selection.Tfoot() creates &lt;tfoot&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('tfoot')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Tfoot.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 766,
    "kind": "function",
    "name": "Tfoot",
    "memberof": "lib/selection/Tfoot.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Tfoot.js~Tfoot",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Tfoot.js",
    "importStyle": "Tfoot",
    "description": "selection.Tfoot() creates &lt;tfoot&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 767,
    "kind": "file",
    "name": "lib/selection/Th.js",
    "content": "/**\n * selection.Th() creates &lt;th&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('th')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Th.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 768,
    "kind": "function",
    "name": "Th",
    "memberof": "lib/selection/Th.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Th.js~Th",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Th.js",
    "importStyle": "Th",
    "description": "selection.Th() creates &lt;th&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 769,
    "kind": "file",
    "name": "lib/selection/Thead.js",
    "content": "/**\n * selection.Thead() creates &lt;thead&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('thead')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Thead.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 770,
    "kind": "function",
    "name": "Thead",
    "memberof": "lib/selection/Thead.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Thead.js~Thead",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Thead.js",
    "importStyle": "Thead",
    "description": "selection.Thead() creates &lt;thead&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 771,
    "kind": "file",
    "name": "lib/selection/Time.js",
    "content": "/**\n * selection.Time() creates &lt;input&gt; element of type time\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'time')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Time.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 772,
    "kind": "function",
    "name": "Time",
    "memberof": "lib/selection/Time.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Time.js~Time",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Time.js",
    "importStyle": "Time",
    "description": "selection.Time() creates &lt;input&gt; element of type time",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 773,
    "kind": "file",
    "name": "lib/selection/Title.js",
    "content": "/**\n * selection.Title() get or change title attribute value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.attr('title');\n  }\n  else\n  {\n    return this.attr('title', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Title.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 774,
    "kind": "function",
    "name": "Title",
    "memberof": "lib/selection/Title.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Title.js~Title",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Title.js",
    "importStyle": "Title",
    "description": "selection.Title() get or change title attribute value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 775,
    "kind": "file",
    "name": "lib/selection/Top.js",
    "content": "/**\n * selection.Top() get or change top style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('top');\n  }\n  else\n  {\n    return this.style('top', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Top.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 776,
    "kind": "function",
    "name": "Top",
    "memberof": "lib/selection/Top.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Top.js~Top",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Top.js",
    "importStyle": "Top",
    "description": "selection.Top() get or change top style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 777,
    "kind": "file",
    "name": "lib/selection/Tr.js",
    "content": "/**\n * selection.Tr() creates &lt;tr&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('tr')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Tr.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 778,
    "kind": "function",
    "name": "Tr",
    "memberof": "lib/selection/Tr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Tr.js~Tr",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Tr.js",
    "importStyle": "Tr",
    "description": "selection.Tr() creates &lt;tr&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 779,
    "kind": "file",
    "name": "lib/selection/Track.js",
    "content": "/**\n * selection.Track() creates &lt;track&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('track')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Track.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 780,
    "kind": "function",
    "name": "Track",
    "memberof": "lib/selection/Track.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Track.js~Track",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Track.js",
    "importStyle": "Track",
    "description": "selection.Track() creates &lt;track&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 781,
    "kind": "file",
    "name": "lib/selection/U.js",
    "content": "/**\n * selection.U() creates &lt;u&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('u')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/U.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 782,
    "kind": "function",
    "name": "U",
    "memberof": "lib/selection/U.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/U.js~U",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/U.js",
    "importStyle": "U",
    "description": "selection.U() creates &lt;u&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 783,
    "kind": "file",
    "name": "lib/selection/Ul.js",
    "content": "/**\n * selection.Ul() creates &lt;ul&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('ul')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Ul.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 784,
    "kind": "function",
    "name": "Ul",
    "memberof": "lib/selection/Ul.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Ul.js~Ul",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Ul.js",
    "importStyle": "Ul",
    "description": "selection.Ul() creates &lt;ul&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 785,
    "kind": "file",
    "name": "lib/selection/Url.js",
    "content": "/**\n * selection.Url() creates &lt;input&gt; element of type url\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'url')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Url.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 786,
    "kind": "function",
    "name": "Url",
    "memberof": "lib/selection/Url.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Url.js~Url",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Url.js",
    "importStyle": "Url",
    "description": "selection.Url() creates &lt;input&gt; element of type url",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 787,
    "kind": "file",
    "name": "lib/selection/UserSelect.js",
    "content": "/**\n * selection.UserSelect() get or change user-select style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('user-select');\n  }\n  else\n  {\n    return this.style('user-select', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/UserSelect.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 788,
    "kind": "function",
    "name": "UserSelect",
    "memberof": "lib/selection/UserSelect.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/UserSelect.js~UserSelect",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/UserSelect.js",
    "importStyle": "UserSelect",
    "description": "selection.UserSelect() get or change user-select style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 789,
    "kind": "file",
    "name": "lib/selection/Validity.js",
    "content": "/**\n * selection.Validity() get or change validity property value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.property('validity');\n  }\n  else\n  {\n    return this.property('validity', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Validity.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 790,
    "kind": "function",
    "name": "Validity",
    "memberof": "lib/selection/Validity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Validity.js~Validity",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Validity.js",
    "importStyle": "Validity",
    "description": "selection.Validity() get or change validity property value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 791,
    "kind": "file",
    "name": "lib/selection/Value.js",
    "content": "/**\n * selection.Value() get or change value property value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.property('value');\n  }\n  else\n  {\n    return this.property('value', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Value.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 792,
    "kind": "function",
    "name": "Value",
    "memberof": "lib/selection/Value.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Value.js~Value",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Value.js",
    "importStyle": "Value",
    "description": "selection.Value() get or change value property value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 793,
    "kind": "file",
    "name": "lib/selection/Var.js",
    "content": "/**\n * selection.Var() creates &lt;var&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('var')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Var.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 794,
    "kind": "function",
    "name": "Var",
    "memberof": "lib/selection/Var.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Var.js~Var",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Var.js",
    "importStyle": "Var",
    "description": "selection.Var() creates &lt;var&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 795,
    "kind": "file",
    "name": "lib/selection/VerticalAlign.js",
    "content": "/**\n * selection.VerticalAlign() get or change vertical-align style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('vertical-align');\n  }\n  else\n  {\n    return this.style('vertical-align', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/VerticalAlign.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 796,
    "kind": "function",
    "name": "VerticalAlign",
    "memberof": "lib/selection/VerticalAlign.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/VerticalAlign.js~VerticalAlign",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/VerticalAlign.js",
    "importStyle": "VerticalAlign",
    "description": "selection.VerticalAlign() get or change vertical-align style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 797,
    "kind": "file",
    "name": "lib/selection/Video.js",
    "content": "/**\n * selection.Video() creates &lt;video&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('video')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Video.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 798,
    "kind": "function",
    "name": "Video",
    "memberof": "lib/selection/Video.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Video.js~Video",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Video.js",
    "importStyle": "Video",
    "description": "selection.Video() creates &lt;video&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 799,
    "kind": "file",
    "name": "lib/selection/Visibility.js",
    "content": "/**\n * selection.Visibility() get or change visibility style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('visibility');\n  }\n  else\n  {\n    return this.style('visibility', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Visibility.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 800,
    "kind": "function",
    "name": "Visibility",
    "memberof": "lib/selection/Visibility.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Visibility.js~Visibility",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Visibility.js",
    "importStyle": "Visibility",
    "description": "selection.Visibility() get or change visibility style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 801,
    "kind": "file",
    "name": "lib/selection/Wbr.js",
    "content": "/**\n * selection.Wbr() creates &lt;wbr&gt; element\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('wbr')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Wbr.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 802,
    "kind": "function",
    "name": "Wbr",
    "memberof": "lib/selection/Wbr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Wbr.js~Wbr",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Wbr.js",
    "importStyle": "Wbr",
    "description": "selection.Wbr() creates &lt;wbr&gt; element",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 803,
    "kind": "file",
    "name": "lib/selection/Week.js",
    "content": "/**\n * selection.Week() creates &lt;input&gt; element of type week\n * @param {string} [contents=''] option content html\n * @return created element\n */\nexport default function (contents)\n{\n  return this.append('input')\n    .attr('type', 'week')\n    .html(contents || '');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Week.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 804,
    "kind": "function",
    "name": "Week",
    "memberof": "lib/selection/Week.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Week.js~Week",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Week.js",
    "importStyle": "Week",
    "description": "selection.Week() creates &lt;input&gt; element of type week",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "contents",
        "description": "option content html"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "created element"
    }
  },
  {
    "__docId__": 805,
    "kind": "file",
    "name": "lib/selection/WhiteSpace.js",
    "content": "/**\n * selection.WhiteSpace() get or change white-space style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('white-space');\n  }\n  else\n  {\n    return this.style('white-space', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/WhiteSpace.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 806,
    "kind": "function",
    "name": "WhiteSpace",
    "memberof": "lib/selection/WhiteSpace.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/WhiteSpace.js~WhiteSpace",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/WhiteSpace.js",
    "importStyle": "WhiteSpace",
    "description": "selection.WhiteSpace() get or change white-space style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 807,
    "kind": "file",
    "name": "lib/selection/Width.js",
    "content": "/**\n * selection.Width() get or change width style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('width');\n  }\n  else\n  {\n    return this.style('width', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/Width.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 808,
    "kind": "function",
    "name": "Width",
    "memberof": "lib/selection/Width.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/Width.js~Width",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/Width.js",
    "importStyle": "Width",
    "description": "selection.Width() get or change width style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 809,
    "kind": "file",
    "name": "lib/selection/WordBreak.js",
    "content": "/**\n * selection.WordBreak() get or change word-break style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('word-break');\n  }\n  else\n  {\n    return this.style('word-break', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/WordBreak.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 810,
    "kind": "function",
    "name": "WordBreak",
    "memberof": "lib/selection/WordBreak.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/WordBreak.js~WordBreak",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/WordBreak.js",
    "importStyle": "WordBreak",
    "description": "selection.WordBreak() get or change word-break style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 811,
    "kind": "file",
    "name": "lib/selection/WordSpacing.js",
    "content": "/**\n * selection.WordSpacing() get or change word-spacing style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('word-spacing');\n  }\n  else\n  {\n    return this.style('word-spacing', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/WordSpacing.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 812,
    "kind": "function",
    "name": "WordSpacing",
    "memberof": "lib/selection/WordSpacing.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/WordSpacing.js~WordSpacing",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/WordSpacing.js",
    "importStyle": "WordSpacing",
    "description": "selection.WordSpacing() get or change word-spacing style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 813,
    "kind": "file",
    "name": "lib/selection/WordWrap.js",
    "content": "/**\n * selection.WordWrap() get or change word-wrap style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('word-wrap');\n  }\n  else\n  {\n    return this.style('word-wrap', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/WordWrap.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 814,
    "kind": "function",
    "name": "WordWrap",
    "memberof": "lib/selection/WordWrap.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/WordWrap.js~WordWrap",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/WordWrap.js",
    "importStyle": "WordWrap",
    "description": "selection.WordWrap() get or change word-wrap style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 815,
    "kind": "file",
    "name": "lib/selection/ZIndex.js",
    "content": "/**\n * selection.ZIndex() get or change z-index style value of selection\n * @param {string} [value=''] new value or dont specify to return current value\n * @return selected if setting or current value\n */\nexport default function (value)\n{\n  if (arguments.length < 1)\n  {\n    return this.style('z-index');\n  }\n  else\n  {\n    return this.style('z-index', value);\n  }\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/ZIndex.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 816,
    "kind": "function",
    "name": "ZIndex",
    "memberof": "lib/selection/ZIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/ZIndex.js~ZIndex",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/ZIndex.js",
    "importStyle": "ZIndex",
    "description": "selection.ZIndex() get or change z-index style value of selection",
    "lineNumber": 6,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "value",
        "description": "new value or dont specify to return current value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "*"
      ],
      "spread": false,
      "description": "selected if setting or current value"
    }
  },
  {
    "__docId__": 817,
    "kind": "file",
    "name": "lib/selection/clear.js",
    "content": "/**\n * selection.clear() clears selection content\n */\nexport default function ()\n{\n  return this.text('');\n}\n",
    "static": true,
    "longname": "/home/god/lib/d3-html/lib/selection/clear.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 818,
    "kind": "function",
    "name": "clear",
    "memberof": "lib/selection/clear.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "lib/selection/clear.js~clear",
    "access": null,
    "export": true,
    "importPath": "d3-html/lib/selection/clear.js",
    "importStyle": "clear",
    "description": "selection.clear() clears selection content",
    "lineNumber": 4
  },
  {
    "kind": "index",
    "content": "# d3-html\n\nVerbose helper functions to make d3-selection bit less verbose for general\nhtml creation and manipulation.\n\nInclude as script tag (after d3) or use require(\"d3-html\"). Make sure\nd3-selection is in nodepath if using the latter approach.\n\nThen rock and roll:\n\n<pre>\n// use case 1: everyday elements\nd3.select(\"body\")\n  .clear()\n  .Div()\n    .H1(\"d3-html HELLO WORLD\");\n\n// use case 2: wrapper for enter and exit\nd3.select(\"body\")\n  .Table()\n    .Tbody()\n      .Children([... data rows ...], 'tr', element => {\n        element.Td().Checkbox().Checked(row => row.enabled);\n        element.Th(row => row.field);\n        element.Td().Select().Options({key: val, ...}, row.value);\n        element.each(...);\n      })\n</pre>\n\n# Full API selection.*()\n",
    "longname": "/home/god/lib/d3-html/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"d3-html\",\n  \"version\": \"0.1.2\",\n  \"description\": \"verbose helper functions to make d3-selection bit less verbose for general html creation and manipulation\",\n  \"main\": \"d3-html.js\",\n  \"scripts\": {\n    \"build\": \"npm run build0 && npm run build1 && npm run build2 && npm run build3\",\n    \"build0\": \"node src/codegen.js\",\n    \"build1\": \"rollup -f umd -o d3-html.js -- ./lib/index.js\",\n    \"build2\": \"uglifyjs d3-html.js -c -m -o d3-html.min.js\",\n    \"build3\": \"cp src/README.md . && esdoc2 . &&  cat index.md >> README.md\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/nahidakbar/d3-html.git\"\n  },\n  \"author\": \"Nahid Akbar <mail@nahidakbar.net> (http://nahidakbar.net/)\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/nahidakbar/d3-html/issues\"\n  },\n  \"homepage\": \"https://github.com/nahidakbar/d3-html#readme\",\n  \"devDependencies\": {\n    \"esdoc2\": \"^2.1.3\",\n    \"esdoc2-publish-markdown-plugin\": \"^1.2.0\",\n    \"rollup\": \"^0.52.1\",\n    \"uglify-js\": \"^3.2.2\"\n  },\n  \"esdoc2\": {\n    \"source\": \"./lib\",\n    \"destination\": \"./\",\n    \"plugins\": [\n      {\n        \"name\": \"esdoc2-publish-markdown-plugin\"\n      }\n    ]\n  }\n}",
    "longname": "/home/god/lib/d3-html/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]